//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.ImagingStudyInstance;
import org.hl7.fhir.model.Integer;
import org.hl7.fhir.model.Oid;
import org.hl7.fhir.model.ResourceReference;
import org.hl7.fhir.model.Uri;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ImagingStudy.Instance", propOrder = {
    "number",
    "uid",
    "sopclass",
    "type",
    "title",
    "url",
    "attachment"
})
public class ImagingStudyInstanceImpl
    extends BackboneElementImpl
    implements Serializable, ImagingStudyInstance, Equals, HashCode
{

    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl number;
    @XmlElement(required = true, type = OidImpl.class)
    protected OidImpl uid;
    @XmlElement(required = true, type = OidImpl.class)
    protected OidImpl sopclass;
    @XmlElement(type = StringImpl.class)
    protected StringImpl type;
    @XmlElement(type = StringImpl.class)
    protected StringImpl title;
    @XmlElement(type = UriImpl.class)
    protected UriImpl url;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl attachment;

    @ManyToOne(targetEntity = Integer.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NUMBER__IMAGINGSTUDYINSTANCE_0")
    public Integer getNumber() {
        return number;
    }

    public void setNumber(Integer value) {
        this.number = ((IntegerImpl) value);
    }

    @ManyToOne(targetEntity = Oid.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "UID__IMAGINGSTUDYINSTANCE_HJ_0")
    public Oid getUid() {
        return uid;
    }

    public void setUid(Oid value) {
        this.uid = ((OidImpl) value);
    }

    @ManyToOne(targetEntity = Oid.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SOPCLASS_IMAGINGSTUDYINSTANC_0")
    public Oid getSopclass() {
        return sopclass;
    }

    public void setSopclass(Oid value) {
        this.sopclass = ((OidImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TYPE__IMAGINGSTUDYINSTANCE_H_0")
    public org.hl7.fhir.model.String getType() {
        return type;
    }

    public void setType(org.hl7.fhir.model.String value) {
        this.type = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TITLE_IMAGINGSTUDYINSTANCE_H_0")
    public org.hl7.fhir.model.String getTitle() {
        return title;
    }

    public void setTitle(org.hl7.fhir.model.String value) {
        this.title = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = Uri.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "URL_IMAGINGSTUDYINSTANCE_HJID")
    public Uri getUrl() {
        return url;
    }

    public void setUrl(Uri value) {
        this.url = ((UriImpl) value);
    }

    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ATTACHMENT_IMAGINGSTUDYINSTA_0")
    public ResourceReference getAttachment() {
        return attachment;
    }

    public void setAttachment(ResourceReference value) {
        this.attachment = ((ResourceReferenceImpl) value);
    }

    public ImagingStudyInstanceImpl withNumber(Integer value) {
        setNumber(value);
        return this;
    }

    public ImagingStudyInstanceImpl withUid(Oid value) {
        setUid(value);
        return this;
    }

    public ImagingStudyInstanceImpl withSopclass(Oid value) {
        setSopclass(value);
        return this;
    }

    public ImagingStudyInstanceImpl withType(org.hl7.fhir.model.String value) {
        setType(value);
        return this;
    }

    public ImagingStudyInstanceImpl withTitle(org.hl7.fhir.model.String value) {
        setTitle(value);
        return this;
    }

    public ImagingStudyInstanceImpl withUrl(Uri value) {
        setUrl(value);
        return this;
    }

    public ImagingStudyInstanceImpl withAttachment(ResourceReference value) {
        setAttachment(value);
        return this;
    }

    @Override
    public ImagingStudyInstanceImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ImagingStudyInstanceImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ImagingStudyInstanceImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public ImagingStudyInstanceImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ImagingStudyInstanceImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ImagingStudyInstanceImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public ImagingStudyInstanceImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ImagingStudyInstanceImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ImagingStudyInstanceImpl that = ((ImagingStudyInstanceImpl) object);
        {
            Integer lhsNumber;
            lhsNumber = this.getNumber();
            Integer rhsNumber;
            rhsNumber = that.getNumber();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "number", lhsNumber), LocatorUtils.property(thatLocator, "number", rhsNumber), lhsNumber, rhsNumber)) {
                return false;
            }
        }
        {
            Oid lhsUid;
            lhsUid = this.getUid();
            Oid rhsUid;
            rhsUid = that.getUid();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "uid", lhsUid), LocatorUtils.property(thatLocator, "uid", rhsUid), lhsUid, rhsUid)) {
                return false;
            }
        }
        {
            Oid lhsSopclass;
            lhsSopclass = this.getSopclass();
            Oid rhsSopclass;
            rhsSopclass = that.getSopclass();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sopclass", lhsSopclass), LocatorUtils.property(thatLocator, "sopclass", rhsSopclass), lhsSopclass, rhsSopclass)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsType;
            lhsType = this.getType();
            org.hl7.fhir.model.String rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsTitle;
            lhsTitle = this.getTitle();
            org.hl7.fhir.model.String rhsTitle;
            rhsTitle = that.getTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTitle), LocatorUtils.property(thatLocator, "title", rhsTitle), lhsTitle, rhsTitle)) {
                return false;
            }
        }
        {
            Uri lhsUrl;
            lhsUrl = this.getUrl();
            Uri rhsUrl;
            rhsUrl = that.getUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "url", lhsUrl), LocatorUtils.property(thatLocator, "url", rhsUrl), lhsUrl, rhsUrl)) {
                return false;
            }
        }
        {
            ResourceReference lhsAttachment;
            lhsAttachment = this.getAttachment();
            ResourceReference rhsAttachment;
            rhsAttachment = that.getAttachment();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "attachment", lhsAttachment), LocatorUtils.property(thatLocator, "attachment", rhsAttachment), lhsAttachment, rhsAttachment)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Integer theNumber;
            theNumber = this.getNumber();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "number", theNumber), currentHashCode, theNumber);
        }
        {
            Oid theUid;
            theUid = this.getUid();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "uid", theUid), currentHashCode, theUid);
        }
        {
            Oid theSopclass;
            theSopclass = this.getSopclass();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sopclass", theSopclass), currentHashCode, theSopclass);
        }
        {
            org.hl7.fhir.model.String theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            org.hl7.fhir.model.String theTitle;
            theTitle = this.getTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTitle), currentHashCode, theTitle);
        }
        {
            Uri theUrl;
            theUrl = this.getUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "url", theUrl), currentHashCode, theUrl);
        }
        {
            ResourceReference theAttachment;
            theAttachment = this.getAttachment();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "attachment", theAttachment), currentHashCode, theAttachment);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
