//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Coding;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.ResourceReference;
import org.hl7.fhir.model.SecurityEventNetwork;
import org.hl7.fhir.model.SecurityEventParticipant;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SecurityEvent.Participant", propOrder = {
    "roles",
    "reference",
    "userId",
    "altId",
    "name",
    "requestor",
    "media",
    "network"
})
public class SecurityEventParticipantImpl
    extends BackboneElementImpl
    implements Serializable, SecurityEventParticipant, Equals, HashCode
{

    @XmlElement(name = "role", type = CodeableConceptImpl.class)
    protected List<CodeableConcept> roles;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl reference;
    @XmlElement(type = StringImpl.class)
    protected StringImpl userId;
    @XmlElement(type = StringImpl.class)
    protected StringImpl altId;
    @XmlElement(type = StringImpl.class)
    protected StringImpl name;
    @XmlElement(required = true, type = BooleanImpl.class)
    protected BooleanImpl requestor;
    @XmlElement(type = CodingImpl.class)
    protected CodingImpl media;
    @XmlElement(type = SecurityEventNetworkImpl.class)
    protected SecurityEventNetworkImpl network;

    @OneToMany(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ROLES_SECURITYEVENTPARTICIPA_0")
    public List<CodeableConcept> getRoles() {
        if (roles == null) {
            roles = new ArrayList<CodeableConcept>();
        }
        return this.roles;
    }

    public void setRoles(List<CodeableConcept> roles) {
        this.roles = roles;
    }

    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REFERENCE_SECURITYEVENTPARTI_0")
    public ResourceReference getReference() {
        return reference;
    }

    public void setReference(ResourceReference value) {
        this.reference = ((ResourceReferenceImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "USERID_SECURITYEVENTPARTICIP_0")
    public org.hl7.fhir.model.String getUserId() {
        return userId;
    }

    public void setUserId(org.hl7.fhir.model.String value) {
        this.userId = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ALTID_SECURITYEVENTPARTICIPA_0")
    public org.hl7.fhir.model.String getAltId() {
        return altId;
    }

    public void setAltId(org.hl7.fhir.model.String value) {
        this.altId = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__SECURITYEVENTPARTICIPA_0")
    public org.hl7.fhir.model.String getName() {
        return name;
    }

    public void setName(org.hl7.fhir.model.String value) {
        this.name = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REQUESTOR_SECURITYEVENTPARTI_0")
    public Boolean getRequestor() {
        return requestor;
    }

    public void setRequestor(Boolean value) {
        this.requestor = ((BooleanImpl) value);
    }

    @ManyToOne(targetEntity = Coding.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "MEDIA_SECURITYEVENTPARTICIPA_0")
    public Coding getMedia() {
        return media;
    }

    public void setMedia(Coding value) {
        this.media = ((CodingImpl) value);
    }

    @ManyToOne(targetEntity = SecurityEventNetwork.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NETWORK_SECURITYEVENTPARTICI_0")
    public SecurityEventNetwork getNetwork() {
        return network;
    }

    public void setNetwork(SecurityEventNetwork value) {
        this.network = ((SecurityEventNetworkImpl) value);
    }

    public SecurityEventParticipantImpl withRoles(CodeableConcept... values) {
        if (values!= null) {
            for (CodeableConcept value: values) {
                getRoles().add(value);
            }
        }
        return this;
    }

    public SecurityEventParticipantImpl withRoles(Collection<CodeableConcept> values) {
        if (values!= null) {
            getRoles().addAll(values);
        }
        return this;
    }

    public SecurityEventParticipantImpl withRoles(List<CodeableConcept> roles) {
        setRoles(roles);
        return this;
    }

    public SecurityEventParticipantImpl withReference(ResourceReference value) {
        setReference(value);
        return this;
    }

    public SecurityEventParticipantImpl withUserId(org.hl7.fhir.model.String value) {
        setUserId(value);
        return this;
    }

    public SecurityEventParticipantImpl withAltId(org.hl7.fhir.model.String value) {
        setAltId(value);
        return this;
    }

    public SecurityEventParticipantImpl withName(org.hl7.fhir.model.String value) {
        setName(value);
        return this;
    }

    public SecurityEventParticipantImpl withRequestor(Boolean value) {
        setRequestor(value);
        return this;
    }

    public SecurityEventParticipantImpl withMedia(Coding value) {
        setMedia(value);
        return this;
    }

    public SecurityEventParticipantImpl withNetwork(SecurityEventNetwork value) {
        setNetwork(value);
        return this;
    }

    @Override
    public SecurityEventParticipantImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public SecurityEventParticipantImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public SecurityEventParticipantImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public SecurityEventParticipantImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public SecurityEventParticipantImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public SecurityEventParticipantImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public SecurityEventParticipantImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SecurityEventParticipantImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final SecurityEventParticipantImpl that = ((SecurityEventParticipantImpl) object);
        {
            List<CodeableConcept> lhsRoles;
            lhsRoles = (((this.roles!= null)&&(!this.roles.isEmpty()))?this.getRoles():null);
            List<CodeableConcept> rhsRoles;
            rhsRoles = (((that.roles!= null)&&(!that.roles.isEmpty()))?that.getRoles():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "roles", lhsRoles), LocatorUtils.property(thatLocator, "roles", rhsRoles), lhsRoles, rhsRoles)) {
                return false;
            }
        }
        {
            ResourceReference lhsReference;
            lhsReference = this.getReference();
            ResourceReference rhsReference;
            rhsReference = that.getReference();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reference", lhsReference), LocatorUtils.property(thatLocator, "reference", rhsReference), lhsReference, rhsReference)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsUserId;
            lhsUserId = this.getUserId();
            org.hl7.fhir.model.String rhsUserId;
            rhsUserId = that.getUserId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "userId", lhsUserId), LocatorUtils.property(thatLocator, "userId", rhsUserId), lhsUserId, rhsUserId)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsAltId;
            lhsAltId = this.getAltId();
            org.hl7.fhir.model.String rhsAltId;
            rhsAltId = that.getAltId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "altId", lhsAltId), LocatorUtils.property(thatLocator, "altId", rhsAltId), lhsAltId, rhsAltId)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsName;
            lhsName = this.getName();
            org.hl7.fhir.model.String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            Boolean lhsRequestor;
            lhsRequestor = this.getRequestor();
            Boolean rhsRequestor;
            rhsRequestor = that.getRequestor();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "requestor", lhsRequestor), LocatorUtils.property(thatLocator, "requestor", rhsRequestor), lhsRequestor, rhsRequestor)) {
                return false;
            }
        }
        {
            Coding lhsMedia;
            lhsMedia = this.getMedia();
            Coding rhsMedia;
            rhsMedia = that.getMedia();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "media", lhsMedia), LocatorUtils.property(thatLocator, "media", rhsMedia), lhsMedia, rhsMedia)) {
                return false;
            }
        }
        {
            SecurityEventNetwork lhsNetwork;
            lhsNetwork = this.getNetwork();
            SecurityEventNetwork rhsNetwork;
            rhsNetwork = that.getNetwork();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "network", lhsNetwork), LocatorUtils.property(thatLocator, "network", rhsNetwork), lhsNetwork, rhsNetwork)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<CodeableConcept> theRoles;
            theRoles = (((this.roles!= null)&&(!this.roles.isEmpty()))?this.getRoles():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "roles", theRoles), currentHashCode, theRoles);
        }
        {
            ResourceReference theReference;
            theReference = this.getReference();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reference", theReference), currentHashCode, theReference);
        }
        {
            org.hl7.fhir.model.String theUserId;
            theUserId = this.getUserId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "userId", theUserId), currentHashCode, theUserId);
        }
        {
            org.hl7.fhir.model.String theAltId;
            theAltId = this.getAltId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "altId", theAltId), currentHashCode, theAltId);
        }
        {
            org.hl7.fhir.model.String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            Boolean theRequestor;
            theRequestor = this.getRequestor();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "requestor", theRequestor), currentHashCode, theRequestor);
        }
        {
            Coding theMedia;
            theMedia = this.getMedia();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "media", theMedia), currentHashCode, theMedia);
        }
        {
            SecurityEventNetwork theNetwork;
            theNetwork = this.getNetwork();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "network", theNetwork), currentHashCode, theNetwork);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
