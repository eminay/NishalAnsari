//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.Medication;
import org.hl7.fhir.model.MedicationKind;
import org.hl7.fhir.model.MedicationPackage;
import org.hl7.fhir.model.MedicationProduct;
import org.hl7.fhir.model.Narrative;
import org.hl7.fhir.model.ResourceInline;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Medication", propOrder = {
    "name",
    "code",
    "isBrand",
    "manufacturer",
    "kind",
    "product",
    "_package"
})
@XmlRootElement(name = "Medication")
public class MedicationImpl
    extends ResourceImpl
    implements Serializable, Medication, Equals, HashCode
{

    @XmlElement(type = StringImpl.class)
    protected StringImpl name;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl code;
    @XmlElement(type = BooleanImpl.class)
    protected BooleanImpl isBrand;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl manufacturer;
    @XmlElement(type = MedicationKindImpl.class)
    protected MedicationKindImpl kind;
    @XmlElement(type = MedicationProductImpl.class)
    protected MedicationProductImpl product;
    @XmlElement(name = "package", type = MedicationPackageImpl.class)
    protected MedicationPackageImpl _package;

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__MEDICATION_HJID")
    public org.hl7.fhir.model.String getName() {
        return name;
    }

    public void setName(org.hl7.fhir.model.String value) {
        this.name = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CODE_MEDICATION_HJID")
    public CodeableConcept getCode() {
        return code;
    }

    public void setCode(CodeableConcept value) {
        this.code = ((CodeableConceptImpl) value);
    }

    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ISBRAND_MEDICATION_HJID")
    public Boolean getIsBrand() {
        return isBrand;
    }

    public void setIsBrand(Boolean value) {
        this.isBrand = ((BooleanImpl) value);
    }

    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "MANUFACTURER_MEDICATION_HJID")
    public ResourceReference getManufacturer() {
        return manufacturer;
    }

    public void setManufacturer(ResourceReference value) {
        this.manufacturer = ((ResourceReferenceImpl) value);
    }

    @ManyToOne(targetEntity = MedicationKind.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "KIND_MEDICATION_HJID")
    public MedicationKind getKind() {
        return kind;
    }

    public void setKind(MedicationKind value) {
        this.kind = ((MedicationKindImpl) value);
    }

    @ManyToOne(targetEntity = MedicationProduct.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PRODUCT_MEDICATION_HJID")
    public MedicationProduct getProduct() {
        return product;
    }

    public void setProduct(MedicationProduct value) {
        this.product = ((MedicationProductImpl) value);
    }

    @ManyToOne(targetEntity = MedicationPackage.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PACKAGE_MEDICATION_HJID")
    public MedicationPackage getPackage() {
        return _package;
    }

    public void setPackage(MedicationPackage value) {
        this._package = ((MedicationPackageImpl) value);
    }

    public MedicationImpl withName(org.hl7.fhir.model.String value) {
        setName(value);
        return this;
    }

    public MedicationImpl withCode(CodeableConcept value) {
        setCode(value);
        return this;
    }

    public MedicationImpl withIsBrand(Boolean value) {
        setIsBrand(value);
        return this;
    }

    public MedicationImpl withManufacturer(ResourceReference value) {
        setManufacturer(value);
        return this;
    }

    public MedicationImpl withKind(MedicationKind value) {
        setKind(value);
        return this;
    }

    public MedicationImpl withProduct(MedicationProduct value) {
        setProduct(value);
        return this;
    }

    public MedicationImpl withPackage(MedicationPackage value) {
        setPackage(value);
        return this;
    }

    @Override
    public MedicationImpl withLanguage(Code value) {
        setLanguage(value);
        return this;
    }

    @Override
    public MedicationImpl withText(Narrative value) {
        setText(value);
        return this;
    }

    @Override
    public MedicationImpl withContaineds(ResourceInline... values) {
        if (values!= null) {
            for (ResourceInline value: values) {
                getContaineds().add(value);
            }
        }
        return this;
    }

    @Override
    public MedicationImpl withContaineds(Collection<ResourceInline> values) {
        if (values!= null) {
            getContaineds().addAll(values);
        }
        return this;
    }

    @Override
    public MedicationImpl withContaineds(List<ResourceInline> containeds) {
        setContaineds(containeds);
        return this;
    }

    @Override
    public MedicationImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public MedicationImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public MedicationImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public MedicationImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public MedicationImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public MedicationImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public MedicationImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof MedicationImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final MedicationImpl that = ((MedicationImpl) object);
        {
            org.hl7.fhir.model.String lhsName;
            lhsName = this.getName();
            org.hl7.fhir.model.String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            CodeableConcept lhsCode;
            lhsCode = this.getCode();
            CodeableConcept rhsCode;
            rhsCode = that.getCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                return false;
            }
        }
        {
            Boolean lhsIsBrand;
            lhsIsBrand = this.getIsBrand();
            Boolean rhsIsBrand;
            rhsIsBrand = that.getIsBrand();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isBrand", lhsIsBrand), LocatorUtils.property(thatLocator, "isBrand", rhsIsBrand), lhsIsBrand, rhsIsBrand)) {
                return false;
            }
        }
        {
            ResourceReference lhsManufacturer;
            lhsManufacturer = this.getManufacturer();
            ResourceReference rhsManufacturer;
            rhsManufacturer = that.getManufacturer();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "manufacturer", lhsManufacturer), LocatorUtils.property(thatLocator, "manufacturer", rhsManufacturer), lhsManufacturer, rhsManufacturer)) {
                return false;
            }
        }
        {
            MedicationKind lhsKind;
            lhsKind = this.getKind();
            MedicationKind rhsKind;
            rhsKind = that.getKind();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "kind", lhsKind), LocatorUtils.property(thatLocator, "kind", rhsKind), lhsKind, rhsKind)) {
                return false;
            }
        }
        {
            MedicationProduct lhsProduct;
            lhsProduct = this.getProduct();
            MedicationProduct rhsProduct;
            rhsProduct = that.getProduct();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "product", lhsProduct), LocatorUtils.property(thatLocator, "product", rhsProduct), lhsProduct, rhsProduct)) {
                return false;
            }
        }
        {
            MedicationPackage lhsPackage;
            lhsPackage = this.getPackage();
            MedicationPackage rhsPackage;
            rhsPackage = that.getPackage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "_package", lhsPackage), LocatorUtils.property(thatLocator, "_package", rhsPackage), lhsPackage, rhsPackage)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            org.hl7.fhir.model.String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            CodeableConcept theCode;
            theCode = this.getCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
        }
        {
            Boolean theIsBrand;
            theIsBrand = this.getIsBrand();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isBrand", theIsBrand), currentHashCode, theIsBrand);
        }
        {
            ResourceReference theManufacturer;
            theManufacturer = this.getManufacturer();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "manufacturer", theManufacturer), currentHashCode, theManufacturer);
        }
        {
            MedicationKind theKind;
            theKind = this.getKind();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "kind", theKind), currentHashCode, theKind);
        }
        {
            MedicationProduct theProduct;
            theProduct = this.getProduct();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "product", theProduct), currentHashCode, theProduct);
        }
        {
            MedicationPackage thePackage;
            thePackage = this.getPackage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "_package", thePackage), currentHashCode, thePackage);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
