//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.ExtensionContext;
import org.hl7.fhir.model.ProfileDefinition;
import org.hl7.fhir.model.ProfileExtensionDefn;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile.ExtensionDefn", propOrder = {
    "code",
    "display",
    "contextType",
    "contexts",
    "definition"
})
public class ProfileExtensionDefnImpl
    extends BackboneElementImpl
    implements Serializable, ProfileExtensionDefn, Equals, HashCode
{

    @XmlElement(required = true, type = CodeImpl.class)
    protected CodeImpl code;
    @XmlElement(type = StringImpl.class)
    protected StringImpl display;
    @XmlElement(required = true, type = ExtensionContextImpl.class)
    protected ExtensionContextImpl contextType;
    @XmlElement(name = "context", required = true, type = StringImpl.class)
    protected List<org.hl7.fhir.model.String> contexts;
    @XmlElement(required = true, type = ProfileDefinitionImpl.class)
    protected ProfileDefinitionImpl definition;

    @ManyToOne(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CODE_PROFILEEXTENSIONDEFN_HJ_0")
    public Code getCode() {
        return code;
    }

    public void setCode(Code value) {
        this.code = ((CodeImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DISPLAY_PROFILEEXTENSIONDEFN_0")
    public org.hl7.fhir.model.String getDisplay() {
        return display;
    }

    public void setDisplay(org.hl7.fhir.model.String value) {
        this.display = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = ExtensionContext.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTEXTTYPE_PROFILEEXTENSION_0")
    public ExtensionContext getContextType() {
        return contextType;
    }

    public void setContextType(ExtensionContext value) {
        this.contextType = ((ExtensionContextImpl) value);
    }

    @OneToMany(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTEXTS_PROFILEEXTENSIONDEF_0")
    public List<org.hl7.fhir.model.String> getContexts() {
        if (contexts == null) {
            contexts = new ArrayList<org.hl7.fhir.model.String>();
        }
        return this.contexts;
    }

    public void setContexts(List<org.hl7.fhir.model.String> contexts) {
        this.contexts = contexts;
    }

    @ManyToOne(targetEntity = ProfileDefinition.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DEFINITION_PROFILEEXTENSIOND_0")
    public ProfileDefinition getDefinition() {
        return definition;
    }

    public void setDefinition(ProfileDefinition value) {
        this.definition = ((ProfileDefinitionImpl) value);
    }

    public ProfileExtensionDefnImpl withCode(Code value) {
        setCode(value);
        return this;
    }

    public ProfileExtensionDefnImpl withDisplay(org.hl7.fhir.model.String value) {
        setDisplay(value);
        return this;
    }

    public ProfileExtensionDefnImpl withContextType(ExtensionContext value) {
        setContextType(value);
        return this;
    }

    public ProfileExtensionDefnImpl withContexts(org.hl7.fhir.model.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.model.String value: values) {
                getContexts().add(value);
            }
        }
        return this;
    }

    public ProfileExtensionDefnImpl withContexts(Collection<org.hl7.fhir.model.String> values) {
        if (values!= null) {
            getContexts().addAll(values);
        }
        return this;
    }

    public ProfileExtensionDefnImpl withContexts(List<org.hl7.fhir.model.String> contexts) {
        setContexts(contexts);
        return this;
    }

    public ProfileExtensionDefnImpl withDefinition(ProfileDefinition value) {
        setDefinition(value);
        return this;
    }

    @Override
    public ProfileExtensionDefnImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileExtensionDefnImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileExtensionDefnImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public ProfileExtensionDefnImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileExtensionDefnImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileExtensionDefnImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public ProfileExtensionDefnImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ProfileExtensionDefnImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ProfileExtensionDefnImpl that = ((ProfileExtensionDefnImpl) object);
        {
            Code lhsCode;
            lhsCode = this.getCode();
            Code rhsCode;
            rhsCode = that.getCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsDisplay;
            lhsDisplay = this.getDisplay();
            org.hl7.fhir.model.String rhsDisplay;
            rhsDisplay = that.getDisplay();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "display", lhsDisplay), LocatorUtils.property(thatLocator, "display", rhsDisplay), lhsDisplay, rhsDisplay)) {
                return false;
            }
        }
        {
            ExtensionContext lhsContextType;
            lhsContextType = this.getContextType();
            ExtensionContext rhsContextType;
            rhsContextType = that.getContextType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contextType", lhsContextType), LocatorUtils.property(thatLocator, "contextType", rhsContextType), lhsContextType, rhsContextType)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.model.String> lhsContexts;
            lhsContexts = (((this.contexts!= null)&&(!this.contexts.isEmpty()))?this.getContexts():null);
            List<org.hl7.fhir.model.String> rhsContexts;
            rhsContexts = (((that.contexts!= null)&&(!that.contexts.isEmpty()))?that.getContexts():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contexts", lhsContexts), LocatorUtils.property(thatLocator, "contexts", rhsContexts), lhsContexts, rhsContexts)) {
                return false;
            }
        }
        {
            ProfileDefinition lhsDefinition;
            lhsDefinition = this.getDefinition();
            ProfileDefinition rhsDefinition;
            rhsDefinition = that.getDefinition();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "definition", lhsDefinition), LocatorUtils.property(thatLocator, "definition", rhsDefinition), lhsDefinition, rhsDefinition)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Code theCode;
            theCode = this.getCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
        }
        {
            org.hl7.fhir.model.String theDisplay;
            theDisplay = this.getDisplay();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "display", theDisplay), currentHashCode, theDisplay);
        }
        {
            ExtensionContext theContextType;
            theContextType = this.getContextType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contextType", theContextType), currentHashCode, theContextType);
        }
        {
            List<org.hl7.fhir.model.String> theContexts;
            theContexts = (((this.contexts!= null)&&(!this.contexts.isEmpty()))?this.getContexts():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contexts", theContexts), currentHashCode, theContexts);
        }
        {
            ProfileDefinition theDefinition;
            theDefinition = this.getDefinition();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "definition", theDefinition), currentHashCode, theDefinition);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
