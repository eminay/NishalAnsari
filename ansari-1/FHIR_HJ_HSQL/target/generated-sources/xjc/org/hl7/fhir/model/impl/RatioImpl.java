//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.Quantity;
import org.hl7.fhir.model.Ratio;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Ratio", propOrder = {
    "numerator",
    "denominator"
})
public class RatioImpl
    extends ElementImpl
    implements Serializable, Ratio, Equals, HashCode
{

    @XmlElement(type = QuantityImpl.class)
    protected QuantityImpl numerator;
    @XmlElement(type = QuantityImpl.class)
    protected QuantityImpl denominator;

    @ManyToOne(targetEntity = Quantity.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NUMERATOR_RATIO_HJID")
    public Quantity getNumerator() {
        return numerator;
    }

    public void setNumerator(Quantity value) {
        this.numerator = ((QuantityImpl) value);
    }

    @ManyToOne(targetEntity = Quantity.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DENOMINATOR_RATIO_HJID")
    public Quantity getDenominator() {
        return denominator;
    }

    public void setDenominator(Quantity value) {
        this.denominator = ((QuantityImpl) value);
    }

    public RatioImpl withNumerator(Quantity value) {
        setNumerator(value);
        return this;
    }

    public RatioImpl withDenominator(Quantity value) {
        setDenominator(value);
        return this;
    }

    @Override
    public RatioImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public RatioImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public RatioImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public RatioImpl withId(String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof RatioImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final RatioImpl that = ((RatioImpl) object);
        {
            Quantity lhsNumerator;
            lhsNumerator = this.getNumerator();
            Quantity rhsNumerator;
            rhsNumerator = that.getNumerator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "numerator", lhsNumerator), LocatorUtils.property(thatLocator, "numerator", rhsNumerator), lhsNumerator, rhsNumerator)) {
                return false;
            }
        }
        {
            Quantity lhsDenominator;
            lhsDenominator = this.getDenominator();
            Quantity rhsDenominator;
            rhsDenominator = that.getDenominator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "denominator", lhsDenominator), LocatorUtils.property(thatLocator, "denominator", rhsDenominator), lhsDenominator, rhsDenominator)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Quantity theNumerator;
            theNumerator = this.getNumerator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "numerator", theNumerator), currentHashCode, theNumerator);
        }
        {
            Quantity theDenominator;
            theDenominator = this.getDenominator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "denominator", theDenominator), currentHashCode, theDenominator);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
