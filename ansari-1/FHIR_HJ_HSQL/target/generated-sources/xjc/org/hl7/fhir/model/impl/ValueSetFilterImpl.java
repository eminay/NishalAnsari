//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.FilterOperator;
import org.hl7.fhir.model.ValueSetFilter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ValueSet.Filter", propOrder = {
    "property",
    "op",
    "value"
})
public class ValueSetFilterImpl
    extends BackboneElementImpl
    implements Serializable, ValueSetFilter, Equals, HashCode
{

    @XmlElement(required = true, type = CodeImpl.class)
    protected CodeImpl property;
    @XmlElement(required = true, type = FilterOperatorImpl.class)
    protected FilterOperatorImpl op;
    @XmlElement(required = true, type = CodeImpl.class)
    protected CodeImpl value;

    @ManyToOne(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PROPERTY_VALUESETFILTER_HJID")
    public Code getProperty() {
        return property;
    }

    public void setProperty(Code value) {
        this.property = ((CodeImpl) value);
    }

    @ManyToOne(targetEntity = FilterOperator.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "OP_VALUESETFILTER_HJID")
    public FilterOperator getOp() {
        return op;
    }

    public void setOp(FilterOperator value) {
        this.op = ((FilterOperatorImpl) value);
    }

    @ManyToOne(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUE__VALUESETFILTER_HJID")
    public Code getValue() {
        return value;
    }

    public void setValue(Code value) {
        this.value = ((CodeImpl) value);
    }

    public ValueSetFilterImpl withProperty(Code value) {
        setProperty(value);
        return this;
    }

    public ValueSetFilterImpl withOp(FilterOperator value) {
        setOp(value);
        return this;
    }

    public ValueSetFilterImpl withValue(Code value) {
        setValue(value);
        return this;
    }

    @Override
    public ValueSetFilterImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ValueSetFilterImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ValueSetFilterImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public ValueSetFilterImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ValueSetFilterImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ValueSetFilterImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public ValueSetFilterImpl withId(String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ValueSetFilterImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ValueSetFilterImpl that = ((ValueSetFilterImpl) object);
        {
            Code lhsProperty;
            lhsProperty = this.getProperty();
            Code rhsProperty;
            rhsProperty = that.getProperty();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "property", lhsProperty), LocatorUtils.property(thatLocator, "property", rhsProperty), lhsProperty, rhsProperty)) {
                return false;
            }
        }
        {
            FilterOperator lhsOp;
            lhsOp = this.getOp();
            FilterOperator rhsOp;
            rhsOp = that.getOp();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "op", lhsOp), LocatorUtils.property(thatLocator, "op", rhsOp), lhsOp, rhsOp)) {
                return false;
            }
        }
        {
            Code lhsValue;
            lhsValue = this.getValue();
            Code rhsValue;
            rhsValue = that.getValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Code theProperty;
            theProperty = this.getProperty();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "property", theProperty), currentHashCode, theProperty);
        }
        {
            FilterOperator theOp;
            theOp = this.getOp();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "op", theOp), currentHashCode, theOp);
        }
        {
            Code theValue;
            theValue = this.getValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
