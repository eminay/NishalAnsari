//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.ConformanceOperation;
import org.hl7.fhir.model.ConformanceResource;
import org.hl7.fhir.model.ConformanceSearchParam;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Conformance.Resource", propOrder = {
    "type",
    "profile",
    "operations",
    "readHistory",
    "updateCreate",
    "searchIncludes",
    "searchParams"
})
public class ConformanceResourceImpl
    extends BackboneElementImpl
    implements Serializable, ConformanceResource, Equals, HashCode
{

    @XmlElement(required = true, type = CodeImpl.class)
    protected CodeImpl type;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl profile;
    @XmlElement(name = "operation", required = true, type = ConformanceOperationImpl.class)
    protected List<ConformanceOperation> operations;
    @XmlElement(type = BooleanImpl.class)
    protected BooleanImpl readHistory;
    @XmlElement(type = BooleanImpl.class)
    protected BooleanImpl updateCreate;
    @XmlElement(name = "searchInclude", type = StringImpl.class)
    protected List<org.hl7.fhir.model.String> searchIncludes;
    @XmlElement(name = "searchParam", type = ConformanceSearchParamImpl.class)
    protected List<ConformanceSearchParam> searchParams;

    @ManyToOne(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TYPE__CONFORMANCERESOURCE_HJ_0")
    public Code getType() {
        return type;
    }

    public void setType(Code value) {
        this.type = ((CodeImpl) value);
    }

    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PROFILE_CONFORMANCERESOURCE__0")
    public ResourceReference getProfile() {
        return profile;
    }

    public void setProfile(ResourceReference value) {
        this.profile = ((ResourceReferenceImpl) value);
    }

    @OneToMany(targetEntity = ConformanceOperation.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "OPERATIONS_CONFORMANCERESOUR_0")
    public List<ConformanceOperation> getOperations() {
        if (operations == null) {
            operations = new ArrayList<ConformanceOperation>();
        }
        return this.operations;
    }

    public void setOperations(List<ConformanceOperation> operations) {
        this.operations = operations;
    }

    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "READHISTORY_CONFORMANCERESOU_0")
    public Boolean getReadHistory() {
        return readHistory;
    }

    public void setReadHistory(Boolean value) {
        this.readHistory = ((BooleanImpl) value);
    }

    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "UPDATECREATE_CONFORMANCERESO_0")
    public Boolean getUpdateCreate() {
        return updateCreate;
    }

    public void setUpdateCreate(Boolean value) {
        this.updateCreate = ((BooleanImpl) value);
    }

    @OneToMany(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SEARCHINCLUDES_CONFORMANCERE_0")
    public List<org.hl7.fhir.model.String> getSearchIncludes() {
        if (searchIncludes == null) {
            searchIncludes = new ArrayList<org.hl7.fhir.model.String>();
        }
        return this.searchIncludes;
    }

    public void setSearchIncludes(List<org.hl7.fhir.model.String> searchIncludes) {
        this.searchIncludes = searchIncludes;
    }

    @OneToMany(targetEntity = ConformanceSearchParam.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SEARCHPARAMS_CONFORMANCERESO_0")
    public List<ConformanceSearchParam> getSearchParams() {
        if (searchParams == null) {
            searchParams = new ArrayList<ConformanceSearchParam>();
        }
        return this.searchParams;
    }

    public void setSearchParams(List<ConformanceSearchParam> searchParams) {
        this.searchParams = searchParams;
    }

    public ConformanceResourceImpl withType(Code value) {
        setType(value);
        return this;
    }

    public ConformanceResourceImpl withProfile(ResourceReference value) {
        setProfile(value);
        return this;
    }

    public ConformanceResourceImpl withOperations(ConformanceOperation... values) {
        if (values!= null) {
            for (ConformanceOperation value: values) {
                getOperations().add(value);
            }
        }
        return this;
    }

    public ConformanceResourceImpl withOperations(Collection<ConformanceOperation> values) {
        if (values!= null) {
            getOperations().addAll(values);
        }
        return this;
    }

    public ConformanceResourceImpl withOperations(List<ConformanceOperation> operations) {
        setOperations(operations);
        return this;
    }

    public ConformanceResourceImpl withReadHistory(Boolean value) {
        setReadHistory(value);
        return this;
    }

    public ConformanceResourceImpl withUpdateCreate(Boolean value) {
        setUpdateCreate(value);
        return this;
    }

    public ConformanceResourceImpl withSearchIncludes(org.hl7.fhir.model.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.model.String value: values) {
                getSearchIncludes().add(value);
            }
        }
        return this;
    }

    public ConformanceResourceImpl withSearchIncludes(Collection<org.hl7.fhir.model.String> values) {
        if (values!= null) {
            getSearchIncludes().addAll(values);
        }
        return this;
    }

    public ConformanceResourceImpl withSearchIncludes(List<org.hl7.fhir.model.String> searchIncludes) {
        setSearchIncludes(searchIncludes);
        return this;
    }

    public ConformanceResourceImpl withSearchParams(ConformanceSearchParam... values) {
        if (values!= null) {
            for (ConformanceSearchParam value: values) {
                getSearchParams().add(value);
            }
        }
        return this;
    }

    public ConformanceResourceImpl withSearchParams(Collection<ConformanceSearchParam> values) {
        if (values!= null) {
            getSearchParams().addAll(values);
        }
        return this;
    }

    public ConformanceResourceImpl withSearchParams(List<ConformanceSearchParam> searchParams) {
        setSearchParams(searchParams);
        return this;
    }

    @Override
    public ConformanceResourceImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ConformanceResourceImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ConformanceResourceImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public ConformanceResourceImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ConformanceResourceImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ConformanceResourceImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public ConformanceResourceImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ConformanceResourceImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ConformanceResourceImpl that = ((ConformanceResourceImpl) object);
        {
            Code lhsType;
            lhsType = this.getType();
            Code rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            ResourceReference lhsProfile;
            lhsProfile = this.getProfile();
            ResourceReference rhsProfile;
            rhsProfile = that.getProfile();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "profile", lhsProfile), LocatorUtils.property(thatLocator, "profile", rhsProfile), lhsProfile, rhsProfile)) {
                return false;
            }
        }
        {
            List<ConformanceOperation> lhsOperations;
            lhsOperations = (((this.operations!= null)&&(!this.operations.isEmpty()))?this.getOperations():null);
            List<ConformanceOperation> rhsOperations;
            rhsOperations = (((that.operations!= null)&&(!that.operations.isEmpty()))?that.getOperations():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "operations", lhsOperations), LocatorUtils.property(thatLocator, "operations", rhsOperations), lhsOperations, rhsOperations)) {
                return false;
            }
        }
        {
            Boolean lhsReadHistory;
            lhsReadHistory = this.getReadHistory();
            Boolean rhsReadHistory;
            rhsReadHistory = that.getReadHistory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "readHistory", lhsReadHistory), LocatorUtils.property(thatLocator, "readHistory", rhsReadHistory), lhsReadHistory, rhsReadHistory)) {
                return false;
            }
        }
        {
            Boolean lhsUpdateCreate;
            lhsUpdateCreate = this.getUpdateCreate();
            Boolean rhsUpdateCreate;
            rhsUpdateCreate = that.getUpdateCreate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "updateCreate", lhsUpdateCreate), LocatorUtils.property(thatLocator, "updateCreate", rhsUpdateCreate), lhsUpdateCreate, rhsUpdateCreate)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.model.String> lhsSearchIncludes;
            lhsSearchIncludes = (((this.searchIncludes!= null)&&(!this.searchIncludes.isEmpty()))?this.getSearchIncludes():null);
            List<org.hl7.fhir.model.String> rhsSearchIncludes;
            rhsSearchIncludes = (((that.searchIncludes!= null)&&(!that.searchIncludes.isEmpty()))?that.getSearchIncludes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "searchIncludes", lhsSearchIncludes), LocatorUtils.property(thatLocator, "searchIncludes", rhsSearchIncludes), lhsSearchIncludes, rhsSearchIncludes)) {
                return false;
            }
        }
        {
            List<ConformanceSearchParam> lhsSearchParams;
            lhsSearchParams = (((this.searchParams!= null)&&(!this.searchParams.isEmpty()))?this.getSearchParams():null);
            List<ConformanceSearchParam> rhsSearchParams;
            rhsSearchParams = (((that.searchParams!= null)&&(!that.searchParams.isEmpty()))?that.getSearchParams():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "searchParams", lhsSearchParams), LocatorUtils.property(thatLocator, "searchParams", rhsSearchParams), lhsSearchParams, rhsSearchParams)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Code theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            ResourceReference theProfile;
            theProfile = this.getProfile();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "profile", theProfile), currentHashCode, theProfile);
        }
        {
            List<ConformanceOperation> theOperations;
            theOperations = (((this.operations!= null)&&(!this.operations.isEmpty()))?this.getOperations():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "operations", theOperations), currentHashCode, theOperations);
        }
        {
            Boolean theReadHistory;
            theReadHistory = this.getReadHistory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "readHistory", theReadHistory), currentHashCode, theReadHistory);
        }
        {
            Boolean theUpdateCreate;
            theUpdateCreate = this.getUpdateCreate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "updateCreate", theUpdateCreate), currentHashCode, theUpdateCreate);
        }
        {
            List<org.hl7.fhir.model.String> theSearchIncludes;
            theSearchIncludes = (((this.searchIncludes!= null)&&(!this.searchIncludes.isEmpty()))?this.getSearchIncludes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "searchIncludes", theSearchIncludes), currentHashCode, theSearchIncludes);
        }
        {
            List<ConformanceSearchParam> theSearchParams;
            theSearchParams = (((this.searchParams!= null)&&(!this.searchParams.isEmpty()))?this.getSearchParams():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "searchParams", theSearchParams), currentHashCode, theSearchParams);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
