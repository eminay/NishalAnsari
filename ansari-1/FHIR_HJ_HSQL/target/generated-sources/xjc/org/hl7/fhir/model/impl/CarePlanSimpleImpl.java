//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.CarePlanActivityCategory;
import org.hl7.fhir.model.CarePlanSimple;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.Period;
import org.hl7.fhir.model.Quantity;
import org.hl7.fhir.model.ResourceReference;
import org.hl7.fhir.model.Schedule;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CarePlan.Simple", propOrder = {
    "category",
    "code",
    "timingString",
    "timingPeriod",
    "timingSchedule",
    "location",
    "performers",
    "product",
    "dailyAmount",
    "quantity",
    "details"
})
public class CarePlanSimpleImpl
    extends BackboneElementImpl
    implements Serializable, CarePlanSimple, Equals, HashCode
{

    @XmlElement(required = true, type = CarePlanActivityCategoryImpl.class)
    protected CarePlanActivityCategoryImpl category;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl code;
    @XmlElement(type = StringImpl.class)
    protected StringImpl timingString;
    @XmlElement(type = PeriodImpl.class)
    protected PeriodImpl timingPeriod;
    @XmlElement(type = ScheduleImpl.class)
    protected ScheduleImpl timingSchedule;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl location;
    @XmlElement(name = "performer", type = ResourceReferenceImpl.class)
    protected List<ResourceReference> performers;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl product;
    @XmlElement(type = QuantityImpl.class)
    protected QuantityImpl dailyAmount;
    @XmlElement(type = QuantityImpl.class)
    protected QuantityImpl quantity;
    @XmlElement(type = StringImpl.class)
    protected StringImpl details;

    @ManyToOne(targetEntity = CarePlanActivityCategory.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CATEGORY_CAREPLANSIMPLE_HJID")
    public CarePlanActivityCategory getCategory() {
        return category;
    }

    public void setCategory(CarePlanActivityCategory value) {
        this.category = ((CarePlanActivityCategoryImpl) value);
    }

    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CODE_CAREPLANSIMPLE_HJID")
    public CodeableConcept getCode() {
        return code;
    }

    public void setCode(CodeableConcept value) {
        this.code = ((CodeableConceptImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TIMINGSTRING_CAREPLANSIMPLE__0")
    public org.hl7.fhir.model.String getTimingString() {
        return timingString;
    }

    public void setTimingString(org.hl7.fhir.model.String value) {
        this.timingString = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = Period.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TIMINGPERIOD_CAREPLANSIMPLE__0")
    public Period getTimingPeriod() {
        return timingPeriod;
    }

    public void setTimingPeriod(Period value) {
        this.timingPeriod = ((PeriodImpl) value);
    }

    @ManyToOne(targetEntity = Schedule.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TIMINGSCHEDULE_CAREPLANSIMPL_0")
    public Schedule getTimingSchedule() {
        return timingSchedule;
    }

    public void setTimingSchedule(Schedule value) {
        this.timingSchedule = ((ScheduleImpl) value);
    }

    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LOCATION__CAREPLANSIMPLE_HJID")
    public ResourceReference getLocation() {
        return location;
    }

    public void setLocation(ResourceReference value) {
        this.location = ((ResourceReferenceImpl) value);
    }

    @OneToMany(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERFORMERS_CAREPLANSIMPLE_HJ_0")
    public List<ResourceReference> getPerformers() {
        if (performers == null) {
            performers = new ArrayList<ResourceReference>();
        }
        return this.performers;
    }

    public void setPerformers(List<ResourceReference> performers) {
        this.performers = performers;
    }

    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PRODUCT_CAREPLANSIMPLE_HJID")
    public ResourceReference getProduct() {
        return product;
    }

    public void setProduct(ResourceReference value) {
        this.product = ((ResourceReferenceImpl) value);
    }

    @ManyToOne(targetEntity = Quantity.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DAILYAMOUNT_CAREPLANSIMPLE_H_0")
    public Quantity getDailyAmount() {
        return dailyAmount;
    }

    public void setDailyAmount(Quantity value) {
        this.dailyAmount = ((QuantityImpl) value);
    }

    @ManyToOne(targetEntity = Quantity.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "QUANTITY_CAREPLANSIMPLE_HJID")
    public Quantity getQuantity() {
        return quantity;
    }

    public void setQuantity(Quantity value) {
        this.quantity = ((QuantityImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DETAILS_CAREPLANSIMPLE_HJID")
    public org.hl7.fhir.model.String getDetails() {
        return details;
    }

    public void setDetails(org.hl7.fhir.model.String value) {
        this.details = ((StringImpl) value);
    }

    public CarePlanSimpleImpl withCategory(CarePlanActivityCategory value) {
        setCategory(value);
        return this;
    }

    public CarePlanSimpleImpl withCode(CodeableConcept value) {
        setCode(value);
        return this;
    }

    public CarePlanSimpleImpl withTimingString(org.hl7.fhir.model.String value) {
        setTimingString(value);
        return this;
    }

    public CarePlanSimpleImpl withTimingPeriod(Period value) {
        setTimingPeriod(value);
        return this;
    }

    public CarePlanSimpleImpl withTimingSchedule(Schedule value) {
        setTimingSchedule(value);
        return this;
    }

    public CarePlanSimpleImpl withLocation(ResourceReference value) {
        setLocation(value);
        return this;
    }

    public CarePlanSimpleImpl withPerformers(ResourceReference... values) {
        if (values!= null) {
            for (ResourceReference value: values) {
                getPerformers().add(value);
            }
        }
        return this;
    }

    public CarePlanSimpleImpl withPerformers(Collection<ResourceReference> values) {
        if (values!= null) {
            getPerformers().addAll(values);
        }
        return this;
    }

    public CarePlanSimpleImpl withPerformers(List<ResourceReference> performers) {
        setPerformers(performers);
        return this;
    }

    public CarePlanSimpleImpl withProduct(ResourceReference value) {
        setProduct(value);
        return this;
    }

    public CarePlanSimpleImpl withDailyAmount(Quantity value) {
        setDailyAmount(value);
        return this;
    }

    public CarePlanSimpleImpl withQuantity(Quantity value) {
        setQuantity(value);
        return this;
    }

    public CarePlanSimpleImpl withDetails(org.hl7.fhir.model.String value) {
        setDetails(value);
        return this;
    }

    @Override
    public CarePlanSimpleImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public CarePlanSimpleImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public CarePlanSimpleImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public CarePlanSimpleImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public CarePlanSimpleImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public CarePlanSimpleImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public CarePlanSimpleImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CarePlanSimpleImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CarePlanSimpleImpl that = ((CarePlanSimpleImpl) object);
        {
            CarePlanActivityCategory lhsCategory;
            lhsCategory = this.getCategory();
            CarePlanActivityCategory rhsCategory;
            rhsCategory = that.getCategory();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "category", lhsCategory), LocatorUtils.property(thatLocator, "category", rhsCategory), lhsCategory, rhsCategory)) {
                return false;
            }
        }
        {
            CodeableConcept lhsCode;
            lhsCode = this.getCode();
            CodeableConcept rhsCode;
            rhsCode = that.getCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsTimingString;
            lhsTimingString = this.getTimingString();
            org.hl7.fhir.model.String rhsTimingString;
            rhsTimingString = that.getTimingString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timingString", lhsTimingString), LocatorUtils.property(thatLocator, "timingString", rhsTimingString), lhsTimingString, rhsTimingString)) {
                return false;
            }
        }
        {
            Period lhsTimingPeriod;
            lhsTimingPeriod = this.getTimingPeriod();
            Period rhsTimingPeriod;
            rhsTimingPeriod = that.getTimingPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timingPeriod", lhsTimingPeriod), LocatorUtils.property(thatLocator, "timingPeriod", rhsTimingPeriod), lhsTimingPeriod, rhsTimingPeriod)) {
                return false;
            }
        }
        {
            Schedule lhsTimingSchedule;
            lhsTimingSchedule = this.getTimingSchedule();
            Schedule rhsTimingSchedule;
            rhsTimingSchedule = that.getTimingSchedule();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "timingSchedule", lhsTimingSchedule), LocatorUtils.property(thatLocator, "timingSchedule", rhsTimingSchedule), lhsTimingSchedule, rhsTimingSchedule)) {
                return false;
            }
        }
        {
            ResourceReference lhsLocation;
            lhsLocation = this.getLocation();
            ResourceReference rhsLocation;
            rhsLocation = that.getLocation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "location", lhsLocation), LocatorUtils.property(thatLocator, "location", rhsLocation), lhsLocation, rhsLocation)) {
                return false;
            }
        }
        {
            List<ResourceReference> lhsPerformers;
            lhsPerformers = (((this.performers!= null)&&(!this.performers.isEmpty()))?this.getPerformers():null);
            List<ResourceReference> rhsPerformers;
            rhsPerformers = (((that.performers!= null)&&(!that.performers.isEmpty()))?that.getPerformers():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "performers", lhsPerformers), LocatorUtils.property(thatLocator, "performers", rhsPerformers), lhsPerformers, rhsPerformers)) {
                return false;
            }
        }
        {
            ResourceReference lhsProduct;
            lhsProduct = this.getProduct();
            ResourceReference rhsProduct;
            rhsProduct = that.getProduct();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "product", lhsProduct), LocatorUtils.property(thatLocator, "product", rhsProduct), lhsProduct, rhsProduct)) {
                return false;
            }
        }
        {
            Quantity lhsDailyAmount;
            lhsDailyAmount = this.getDailyAmount();
            Quantity rhsDailyAmount;
            rhsDailyAmount = that.getDailyAmount();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dailyAmount", lhsDailyAmount), LocatorUtils.property(thatLocator, "dailyAmount", rhsDailyAmount), lhsDailyAmount, rhsDailyAmount)) {
                return false;
            }
        }
        {
            Quantity lhsQuantity;
            lhsQuantity = this.getQuantity();
            Quantity rhsQuantity;
            rhsQuantity = that.getQuantity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "quantity", lhsQuantity), LocatorUtils.property(thatLocator, "quantity", rhsQuantity), lhsQuantity, rhsQuantity)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsDetails;
            lhsDetails = this.getDetails();
            org.hl7.fhir.model.String rhsDetails;
            rhsDetails = that.getDetails();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "details", lhsDetails), LocatorUtils.property(thatLocator, "details", rhsDetails), lhsDetails, rhsDetails)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            CarePlanActivityCategory theCategory;
            theCategory = this.getCategory();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "category", theCategory), currentHashCode, theCategory);
        }
        {
            CodeableConcept theCode;
            theCode = this.getCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
        }
        {
            org.hl7.fhir.model.String theTimingString;
            theTimingString = this.getTimingString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timingString", theTimingString), currentHashCode, theTimingString);
        }
        {
            Period theTimingPeriod;
            theTimingPeriod = this.getTimingPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timingPeriod", theTimingPeriod), currentHashCode, theTimingPeriod);
        }
        {
            Schedule theTimingSchedule;
            theTimingSchedule = this.getTimingSchedule();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "timingSchedule", theTimingSchedule), currentHashCode, theTimingSchedule);
        }
        {
            ResourceReference theLocation;
            theLocation = this.getLocation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "location", theLocation), currentHashCode, theLocation);
        }
        {
            List<ResourceReference> thePerformers;
            thePerformers = (((this.performers!= null)&&(!this.performers.isEmpty()))?this.getPerformers():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "performers", thePerformers), currentHashCode, thePerformers);
        }
        {
            ResourceReference theProduct;
            theProduct = this.getProduct();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "product", theProduct), currentHashCode, theProduct);
        }
        {
            Quantity theDailyAmount;
            theDailyAmount = this.getDailyAmount();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dailyAmount", theDailyAmount), currentHashCode, theDailyAmount);
        }
        {
            Quantity theQuantity;
            theQuantity = this.getQuantity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "quantity", theQuantity), currentHashCode, theQuantity);
        }
        {
            org.hl7.fhir.model.String theDetails;
            theDetails = this.getDetails();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "details", theDetails), currentHashCode, theDetails);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
