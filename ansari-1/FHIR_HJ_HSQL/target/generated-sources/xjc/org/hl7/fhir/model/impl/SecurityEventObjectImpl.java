//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Base64Binary;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.Identifier;
import org.hl7.fhir.model.ResourceReference;
import org.hl7.fhir.model.SecurityEventDetail;
import org.hl7.fhir.model.SecurityEventObject;
import org.hl7.fhir.model.SecurityEventObjectLifecycle;
import org.hl7.fhir.model.SecurityEventObjectRole;
import org.hl7.fhir.model.SecurityEventObjectType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "SecurityEvent.Object", propOrder = {
    "identifier",
    "reference",
    "type",
    "role",
    "lifecycle",
    "sensitivity",
    "name",
    "description",
    "query",
    "details"
})
public class SecurityEventObjectImpl
    extends BackboneElementImpl
    implements Serializable, SecurityEventObject, Equals, HashCode
{

    @XmlElement(type = IdentifierImpl.class)
    protected IdentifierImpl identifier;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl reference;
    @XmlElement(type = SecurityEventObjectTypeImpl.class)
    protected SecurityEventObjectTypeImpl type;
    @XmlElement(type = SecurityEventObjectRoleImpl.class)
    protected SecurityEventObjectRoleImpl role;
    @XmlElement(type = SecurityEventObjectLifecycleImpl.class)
    protected SecurityEventObjectLifecycleImpl lifecycle;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl sensitivity;
    @XmlElement(type = StringImpl.class)
    protected StringImpl name;
    @XmlElement(type = StringImpl.class)
    protected StringImpl description;
    @XmlElement(type = Base64BinaryImpl.class)
    protected Base64BinaryImpl query;
    @XmlElement(name = "detail", type = SecurityEventDetailImpl.class)
    protected List<SecurityEventDetail> details;

    @ManyToOne(targetEntity = Identifier.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IDENTIFIER_SECURITYEVENTOBJE_0")
    public Identifier getIdentifier() {
        return identifier;
    }

    public void setIdentifier(Identifier value) {
        this.identifier = ((IdentifierImpl) value);
    }

    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REFERENCE_SECURITYEVENTOBJEC_0")
    public ResourceReference getReference() {
        return reference;
    }

    public void setReference(ResourceReference value) {
        this.reference = ((ResourceReferenceImpl) value);
    }

    @ManyToOne(targetEntity = SecurityEventObjectType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TYPE__SECURITYEVENTOBJECT_HJ_0")
    public SecurityEventObjectType getType() {
        return type;
    }

    public void setType(SecurityEventObjectType value) {
        this.type = ((SecurityEventObjectTypeImpl) value);
    }

    @ManyToOne(targetEntity = SecurityEventObjectRole.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ROLE__SECURITYEVENTOBJECT_HJ_0")
    public SecurityEventObjectRole getRole() {
        return role;
    }

    public void setRole(SecurityEventObjectRole value) {
        this.role = ((SecurityEventObjectRoleImpl) value);
    }

    @ManyToOne(targetEntity = SecurityEventObjectLifecycle.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LIFECYCLE_SECURITYEVENTOBJEC_0")
    public SecurityEventObjectLifecycle getLifecycle() {
        return lifecycle;
    }

    public void setLifecycle(SecurityEventObjectLifecycle value) {
        this.lifecycle = ((SecurityEventObjectLifecycleImpl) value);
    }

    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SENSITIVITY_SECURITYEVENTOBJ_0")
    public CodeableConcept getSensitivity() {
        return sensitivity;
    }

    public void setSensitivity(CodeableConcept value) {
        this.sensitivity = ((CodeableConceptImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__SECURITYEVENTOBJECT_HJ_0")
    public org.hl7.fhir.model.String getName() {
        return name;
    }

    public void setName(org.hl7.fhir.model.String value) {
        this.name = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DESCRIPTION_SECURITYEVENTOBJ_0")
    public org.hl7.fhir.model.String getDescription() {
        return description;
    }

    public void setDescription(org.hl7.fhir.model.String value) {
        this.description = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = Base64Binary.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "QUERY_SECURITYEVENTOBJECT_HJ_0")
    public Base64Binary getQuery() {
        return query;
    }

    public void setQuery(Base64Binary value) {
        this.query = ((Base64BinaryImpl) value);
    }

    @OneToMany(targetEntity = SecurityEventDetail.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DETAILS_SECURITYEVENTOBJECT__0")
    public List<SecurityEventDetail> getDetails() {
        if (details == null) {
            details = new ArrayList<SecurityEventDetail>();
        }
        return this.details;
    }

    public void setDetails(List<SecurityEventDetail> details) {
        this.details = details;
    }

    public SecurityEventObjectImpl withIdentifier(Identifier value) {
        setIdentifier(value);
        return this;
    }

    public SecurityEventObjectImpl withReference(ResourceReference value) {
        setReference(value);
        return this;
    }

    public SecurityEventObjectImpl withType(SecurityEventObjectType value) {
        setType(value);
        return this;
    }

    public SecurityEventObjectImpl withRole(SecurityEventObjectRole value) {
        setRole(value);
        return this;
    }

    public SecurityEventObjectImpl withLifecycle(SecurityEventObjectLifecycle value) {
        setLifecycle(value);
        return this;
    }

    public SecurityEventObjectImpl withSensitivity(CodeableConcept value) {
        setSensitivity(value);
        return this;
    }

    public SecurityEventObjectImpl withName(org.hl7.fhir.model.String value) {
        setName(value);
        return this;
    }

    public SecurityEventObjectImpl withDescription(org.hl7.fhir.model.String value) {
        setDescription(value);
        return this;
    }

    public SecurityEventObjectImpl withQuery(Base64Binary value) {
        setQuery(value);
        return this;
    }

    public SecurityEventObjectImpl withDetails(SecurityEventDetail... values) {
        if (values!= null) {
            for (SecurityEventDetail value: values) {
                getDetails().add(value);
            }
        }
        return this;
    }

    public SecurityEventObjectImpl withDetails(Collection<SecurityEventDetail> values) {
        if (values!= null) {
            getDetails().addAll(values);
        }
        return this;
    }

    public SecurityEventObjectImpl withDetails(List<SecurityEventDetail> details) {
        setDetails(details);
        return this;
    }

    @Override
    public SecurityEventObjectImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public SecurityEventObjectImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public SecurityEventObjectImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public SecurityEventObjectImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public SecurityEventObjectImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public SecurityEventObjectImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public SecurityEventObjectImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof SecurityEventObjectImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final SecurityEventObjectImpl that = ((SecurityEventObjectImpl) object);
        {
            Identifier lhsIdentifier;
            lhsIdentifier = this.getIdentifier();
            Identifier rhsIdentifier;
            rhsIdentifier = that.getIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "identifier", lhsIdentifier), LocatorUtils.property(thatLocator, "identifier", rhsIdentifier), lhsIdentifier, rhsIdentifier)) {
                return false;
            }
        }
        {
            ResourceReference lhsReference;
            lhsReference = this.getReference();
            ResourceReference rhsReference;
            rhsReference = that.getReference();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "reference", lhsReference), LocatorUtils.property(thatLocator, "reference", rhsReference), lhsReference, rhsReference)) {
                return false;
            }
        }
        {
            SecurityEventObjectType lhsType;
            lhsType = this.getType();
            SecurityEventObjectType rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            SecurityEventObjectRole lhsRole;
            lhsRole = this.getRole();
            SecurityEventObjectRole rhsRole;
            rhsRole = that.getRole();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "role", lhsRole), LocatorUtils.property(thatLocator, "role", rhsRole), lhsRole, rhsRole)) {
                return false;
            }
        }
        {
            SecurityEventObjectLifecycle lhsLifecycle;
            lhsLifecycle = this.getLifecycle();
            SecurityEventObjectLifecycle rhsLifecycle;
            rhsLifecycle = that.getLifecycle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lifecycle", lhsLifecycle), LocatorUtils.property(thatLocator, "lifecycle", rhsLifecycle), lhsLifecycle, rhsLifecycle)) {
                return false;
            }
        }
        {
            CodeableConcept lhsSensitivity;
            lhsSensitivity = this.getSensitivity();
            CodeableConcept rhsSensitivity;
            rhsSensitivity = that.getSensitivity();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "sensitivity", lhsSensitivity), LocatorUtils.property(thatLocator, "sensitivity", rhsSensitivity), lhsSensitivity, rhsSensitivity)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsName;
            lhsName = this.getName();
            org.hl7.fhir.model.String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsDescription;
            lhsDescription = this.getDescription();
            org.hl7.fhir.model.String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            Base64Binary lhsQuery;
            lhsQuery = this.getQuery();
            Base64Binary rhsQuery;
            rhsQuery = that.getQuery();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "query", lhsQuery), LocatorUtils.property(thatLocator, "query", rhsQuery), lhsQuery, rhsQuery)) {
                return false;
            }
        }
        {
            List<SecurityEventDetail> lhsDetails;
            lhsDetails = (((this.details!= null)&&(!this.details.isEmpty()))?this.getDetails():null);
            List<SecurityEventDetail> rhsDetails;
            rhsDetails = (((that.details!= null)&&(!that.details.isEmpty()))?that.getDetails():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "details", lhsDetails), LocatorUtils.property(thatLocator, "details", rhsDetails), lhsDetails, rhsDetails)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Identifier theIdentifier;
            theIdentifier = this.getIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "identifier", theIdentifier), currentHashCode, theIdentifier);
        }
        {
            ResourceReference theReference;
            theReference = this.getReference();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "reference", theReference), currentHashCode, theReference);
        }
        {
            SecurityEventObjectType theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            SecurityEventObjectRole theRole;
            theRole = this.getRole();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "role", theRole), currentHashCode, theRole);
        }
        {
            SecurityEventObjectLifecycle theLifecycle;
            theLifecycle = this.getLifecycle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lifecycle", theLifecycle), currentHashCode, theLifecycle);
        }
        {
            CodeableConcept theSensitivity;
            theSensitivity = this.getSensitivity();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "sensitivity", theSensitivity), currentHashCode, theSensitivity);
        }
        {
            org.hl7.fhir.model.String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            org.hl7.fhir.model.String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            Base64Binary theQuery;
            theQuery = this.getQuery();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "query", theQuery), currentHashCode, theQuery);
        }
        {
            List<SecurityEventDetail> theDetails;
            theDetails = (((this.details!= null)&&(!this.details.isEmpty()))?this.getDetails():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "details", theDetails), currentHashCode, theDetails);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
