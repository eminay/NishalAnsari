//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.ProfileSearchParam;
import org.hl7.fhir.model.SearchParamType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile.SearchParam", propOrder = {
    "name",
    "type",
    "documentation",
    "xpath",
    "targets"
})
public class ProfileSearchParamImpl
    extends BackboneElementImpl
    implements Serializable, ProfileSearchParam, Equals, HashCode
{

    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl name;
    @XmlElement(required = true, type = SearchParamTypeImpl.class)
    protected SearchParamTypeImpl type;
    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl documentation;
    @XmlElement(type = StringImpl.class)
    protected StringImpl xpath;
    @XmlElement(name = "target", type = CodeImpl.class)
    protected List<Code> targets;

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__PROFILESEARCHPARAM_HJID")
    public org.hl7.fhir.model.String getName() {
        return name;
    }

    public void setName(org.hl7.fhir.model.String value) {
        this.name = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = SearchParamType.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TYPE__PROFILESEARCHPARAM_HJID")
    public SearchParamType getType() {
        return type;
    }

    public void setType(SearchParamType value) {
        this.type = ((SearchParamTypeImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DOCUMENTATION_PROFILESEARCHP_0")
    public org.hl7.fhir.model.String getDocumentation() {
        return documentation;
    }

    public void setDocumentation(org.hl7.fhir.model.String value) {
        this.documentation = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "XPATH_PROFILESEARCHPARAM_HJID")
    public org.hl7.fhir.model.String getXpath() {
        return xpath;
    }

    public void setXpath(org.hl7.fhir.model.String value) {
        this.xpath = ((StringImpl) value);
    }

    @OneToMany(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TARGETS_PROFILESEARCHPARAM_H_0")
    public List<Code> getTargets() {
        if (targets == null) {
            targets = new ArrayList<Code>();
        }
        return this.targets;
    }

    public void setTargets(List<Code> targets) {
        this.targets = targets;
    }

    public ProfileSearchParamImpl withName(org.hl7.fhir.model.String value) {
        setName(value);
        return this;
    }

    public ProfileSearchParamImpl withType(SearchParamType value) {
        setType(value);
        return this;
    }

    public ProfileSearchParamImpl withDocumentation(org.hl7.fhir.model.String value) {
        setDocumentation(value);
        return this;
    }

    public ProfileSearchParamImpl withXpath(org.hl7.fhir.model.String value) {
        setXpath(value);
        return this;
    }

    public ProfileSearchParamImpl withTargets(Code... values) {
        if (values!= null) {
            for (Code value: values) {
                getTargets().add(value);
            }
        }
        return this;
    }

    public ProfileSearchParamImpl withTargets(Collection<Code> values) {
        if (values!= null) {
            getTargets().addAll(values);
        }
        return this;
    }

    public ProfileSearchParamImpl withTargets(List<Code> targets) {
        setTargets(targets);
        return this;
    }

    @Override
    public ProfileSearchParamImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileSearchParamImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileSearchParamImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public ProfileSearchParamImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileSearchParamImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileSearchParamImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public ProfileSearchParamImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ProfileSearchParamImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ProfileSearchParamImpl that = ((ProfileSearchParamImpl) object);
        {
            org.hl7.fhir.model.String lhsName;
            lhsName = this.getName();
            org.hl7.fhir.model.String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            SearchParamType lhsType;
            lhsType = this.getType();
            SearchParamType rhsType;
            rhsType = that.getType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "type", lhsType), LocatorUtils.property(thatLocator, "type", rhsType), lhsType, rhsType)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsDocumentation;
            lhsDocumentation = this.getDocumentation();
            org.hl7.fhir.model.String rhsDocumentation;
            rhsDocumentation = that.getDocumentation();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "documentation", lhsDocumentation), LocatorUtils.property(thatLocator, "documentation", rhsDocumentation), lhsDocumentation, rhsDocumentation)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsXpath;
            lhsXpath = this.getXpath();
            org.hl7.fhir.model.String rhsXpath;
            rhsXpath = that.getXpath();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "xpath", lhsXpath), LocatorUtils.property(thatLocator, "xpath", rhsXpath), lhsXpath, rhsXpath)) {
                return false;
            }
        }
        {
            List<Code> lhsTargets;
            lhsTargets = (((this.targets!= null)&&(!this.targets.isEmpty()))?this.getTargets():null);
            List<Code> rhsTargets;
            rhsTargets = (((that.targets!= null)&&(!that.targets.isEmpty()))?that.getTargets():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "targets", lhsTargets), LocatorUtils.property(thatLocator, "targets", rhsTargets), lhsTargets, rhsTargets)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            org.hl7.fhir.model.String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            SearchParamType theType;
            theType = this.getType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "type", theType), currentHashCode, theType);
        }
        {
            org.hl7.fhir.model.String theDocumentation;
            theDocumentation = this.getDocumentation();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "documentation", theDocumentation), currentHashCode, theDocumentation);
        }
        {
            org.hl7.fhir.model.String theXpath;
            theXpath = this.getXpath();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "xpath", theXpath), currentHashCode, theXpath);
        }
        {
            List<Code> theTargets;
            theTargets = (((this.targets!= null)&&(!this.targets.isEmpty()))?this.getTargets():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "targets", theTargets), currentHashCode, theTargets);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
