//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.CarePlanGoal;
import org.hl7.fhir.model.CarePlanGoalStatus;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CarePlan.Goal", propOrder = {
    "description",
    "status",
    "notes",
    "concerns"
})
public class CarePlanGoalImpl
    extends BackboneElementImpl
    implements Serializable, CarePlanGoal, Equals, HashCode
{

    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl description;
    @XmlElement(type = CarePlanGoalStatusImpl.class)
    protected CarePlanGoalStatusImpl status;
    @XmlElement(type = StringImpl.class)
    protected StringImpl notes;
    @XmlElement(name = "concern", type = ResourceReferenceImpl.class)
    protected List<ResourceReference> concerns;

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DESCRIPTION_CAREPLANGOAL_HJID")
    public org.hl7.fhir.model.String getDescription() {
        return description;
    }

    public void setDescription(org.hl7.fhir.model.String value) {
        this.description = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = CarePlanGoalStatus.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATUS_CAREPLANGOAL_HJID")
    public CarePlanGoalStatus getStatus() {
        return status;
    }

    public void setStatus(CarePlanGoalStatus value) {
        this.status = ((CarePlanGoalStatusImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NOTES_CAREPLANGOAL_HJID")
    public org.hl7.fhir.model.String getNotes() {
        return notes;
    }

    public void setNotes(org.hl7.fhir.model.String value) {
        this.notes = ((StringImpl) value);
    }

    @OneToMany(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONCERNS_CAREPLANGOAL_HJID")
    public List<ResourceReference> getConcerns() {
        if (concerns == null) {
            concerns = new ArrayList<ResourceReference>();
        }
        return this.concerns;
    }

    public void setConcerns(List<ResourceReference> concerns) {
        this.concerns = concerns;
    }

    public CarePlanGoalImpl withDescription(org.hl7.fhir.model.String value) {
        setDescription(value);
        return this;
    }

    public CarePlanGoalImpl withStatus(CarePlanGoalStatus value) {
        setStatus(value);
        return this;
    }

    public CarePlanGoalImpl withNotes(org.hl7.fhir.model.String value) {
        setNotes(value);
        return this;
    }

    public CarePlanGoalImpl withConcerns(ResourceReference... values) {
        if (values!= null) {
            for (ResourceReference value: values) {
                getConcerns().add(value);
            }
        }
        return this;
    }

    public CarePlanGoalImpl withConcerns(Collection<ResourceReference> values) {
        if (values!= null) {
            getConcerns().addAll(values);
        }
        return this;
    }

    public CarePlanGoalImpl withConcerns(List<ResourceReference> concerns) {
        setConcerns(concerns);
        return this;
    }

    @Override
    public CarePlanGoalImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public CarePlanGoalImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public CarePlanGoalImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public CarePlanGoalImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public CarePlanGoalImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public CarePlanGoalImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public CarePlanGoalImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CarePlanGoalImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CarePlanGoalImpl that = ((CarePlanGoalImpl) object);
        {
            org.hl7.fhir.model.String lhsDescription;
            lhsDescription = this.getDescription();
            org.hl7.fhir.model.String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            CarePlanGoalStatus lhsStatus;
            lhsStatus = this.getStatus();
            CarePlanGoalStatus rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsNotes;
            lhsNotes = this.getNotes();
            org.hl7.fhir.model.String rhsNotes;
            rhsNotes = that.getNotes();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "notes", lhsNotes), LocatorUtils.property(thatLocator, "notes", rhsNotes), lhsNotes, rhsNotes)) {
                return false;
            }
        }
        {
            List<ResourceReference> lhsConcerns;
            lhsConcerns = (((this.concerns!= null)&&(!this.concerns.isEmpty()))?this.getConcerns():null);
            List<ResourceReference> rhsConcerns;
            rhsConcerns = (((that.concerns!= null)&&(!that.concerns.isEmpty()))?that.getConcerns():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "concerns", lhsConcerns), LocatorUtils.property(thatLocator, "concerns", rhsConcerns), lhsConcerns, rhsConcerns)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            org.hl7.fhir.model.String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            CarePlanGoalStatus theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            org.hl7.fhir.model.String theNotes;
            theNotes = this.getNotes();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "notes", theNotes), currentHashCode, theNotes);
        }
        {
            List<ResourceReference> theConcerns;
            theConcerns = (((this.concerns!= null)&&(!this.concerns.isEmpty()))?this.getConcerns():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "concerns", theConcerns), currentHashCode, theConcerns);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
