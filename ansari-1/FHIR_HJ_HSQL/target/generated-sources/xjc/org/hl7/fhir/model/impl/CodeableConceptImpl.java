//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Coding;
import org.hl7.fhir.model.Extension;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "CodeableConcept", propOrder = {
    "codings",
    "text"
})
public class CodeableConceptImpl
    extends ElementImpl
    implements Serializable, CodeableConcept, Equals, HashCode
{

    @XmlElement(name = "coding", type = CodingImpl.class)
    protected List<Coding> codings;
    @XmlElement(type = StringImpl.class)
    protected StringImpl text;

    @OneToMany(targetEntity = Coding.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CODINGS_CODEABLECONCEPT_HJID")
    public List<Coding> getCodings() {
        if (codings == null) {
            codings = new ArrayList<Coding>();
        }
        return this.codings;
    }

    public void setCodings(List<Coding> codings) {
        this.codings = codings;
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TEXT_CODEABLECONCEPT_HJID")
    public org.hl7.fhir.model.String getText() {
        return text;
    }

    public void setText(org.hl7.fhir.model.String value) {
        this.text = ((StringImpl) value);
    }

    public CodeableConceptImpl withCodings(Coding... values) {
        if (values!= null) {
            for (Coding value: values) {
                getCodings().add(value);
            }
        }
        return this;
    }

    public CodeableConceptImpl withCodings(Collection<Coding> values) {
        if (values!= null) {
            getCodings().addAll(values);
        }
        return this;
    }

    public CodeableConceptImpl withCodings(List<Coding> codings) {
        setCodings(codings);
        return this;
    }

    public CodeableConceptImpl withText(org.hl7.fhir.model.String value) {
        setText(value);
        return this;
    }

    @Override
    public CodeableConceptImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public CodeableConceptImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public CodeableConceptImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public CodeableConceptImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof CodeableConceptImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final CodeableConceptImpl that = ((CodeableConceptImpl) object);
        {
            List<Coding> lhsCodings;
            lhsCodings = (((this.codings!= null)&&(!this.codings.isEmpty()))?this.getCodings():null);
            List<Coding> rhsCodings;
            rhsCodings = (((that.codings!= null)&&(!that.codings.isEmpty()))?that.getCodings():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "codings", lhsCodings), LocatorUtils.property(thatLocator, "codings", rhsCodings), lhsCodings, rhsCodings)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsText;
            lhsText = this.getText();
            org.hl7.fhir.model.String rhsText;
            rhsText = that.getText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "text", lhsText), LocatorUtils.property(thatLocator, "text", rhsText), lhsText, rhsText)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<Coding> theCodings;
            theCodings = (((this.codings!= null)&&(!this.codings.isEmpty()))?this.getCodings():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "codings", theCodings), currentHashCode, theCodings);
        }
        {
            org.hl7.fhir.model.String theText;
            theText = this.getText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "text", theText), currentHashCode, theText);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
