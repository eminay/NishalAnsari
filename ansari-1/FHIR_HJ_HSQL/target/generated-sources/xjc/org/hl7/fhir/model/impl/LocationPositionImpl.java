//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Decimal;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.LocationPosition;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Location.Position", propOrder = {
    "longitude",
    "latitude",
    "altitude"
})
public class LocationPositionImpl
    extends BackboneElementImpl
    implements Serializable, LocationPosition, Equals, HashCode
{

    @XmlElement(required = true, type = DecimalImpl.class)
    protected DecimalImpl longitude;
    @XmlElement(required = true, type = DecimalImpl.class)
    protected DecimalImpl latitude;
    @XmlElement(type = DecimalImpl.class)
    protected DecimalImpl altitude;

    @ManyToOne(targetEntity = Decimal.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LONGITUDE_LOCATIONPOSITION_H_0")
    public Decimal getLongitude() {
        return longitude;
    }

    public void setLongitude(Decimal value) {
        this.longitude = ((DecimalImpl) value);
    }

    @ManyToOne(targetEntity = Decimal.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LATITUDE_LOCATIONPOSITION_HJ_0")
    public Decimal getLatitude() {
        return latitude;
    }

    public void setLatitude(Decimal value) {
        this.latitude = ((DecimalImpl) value);
    }

    @ManyToOne(targetEntity = Decimal.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ALTITUDE_LOCATIONPOSITION_HJ_0")
    public Decimal getAltitude() {
        return altitude;
    }

    public void setAltitude(Decimal value) {
        this.altitude = ((DecimalImpl) value);
    }

    public LocationPositionImpl withLongitude(Decimal value) {
        setLongitude(value);
        return this;
    }

    public LocationPositionImpl withLatitude(Decimal value) {
        setLatitude(value);
        return this;
    }

    public LocationPositionImpl withAltitude(Decimal value) {
        setAltitude(value);
        return this;
    }

    @Override
    public LocationPositionImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public LocationPositionImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public LocationPositionImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public LocationPositionImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public LocationPositionImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public LocationPositionImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public LocationPositionImpl withId(String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof LocationPositionImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final LocationPositionImpl that = ((LocationPositionImpl) object);
        {
            Decimal lhsLongitude;
            lhsLongitude = this.getLongitude();
            Decimal rhsLongitude;
            rhsLongitude = that.getLongitude();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "longitude", lhsLongitude), LocatorUtils.property(thatLocator, "longitude", rhsLongitude), lhsLongitude, rhsLongitude)) {
                return false;
            }
        }
        {
            Decimal lhsLatitude;
            lhsLatitude = this.getLatitude();
            Decimal rhsLatitude;
            rhsLatitude = that.getLatitude();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "latitude", lhsLatitude), LocatorUtils.property(thatLocator, "latitude", rhsLatitude), lhsLatitude, rhsLatitude)) {
                return false;
            }
        }
        {
            Decimal lhsAltitude;
            lhsAltitude = this.getAltitude();
            Decimal rhsAltitude;
            rhsAltitude = that.getAltitude();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "altitude", lhsAltitude), LocatorUtils.property(thatLocator, "altitude", rhsAltitude), lhsAltitude, rhsAltitude)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Decimal theLongitude;
            theLongitude = this.getLongitude();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "longitude", theLongitude), currentHashCode, theLongitude);
        }
        {
            Decimal theLatitude;
            theLatitude = this.getLatitude();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "latitude", theLatitude), currentHashCode, theLatitude);
        }
        {
            Decimal theAltitude;
            theAltitude = this.getAltitude();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "altitude", theAltitude), currentHashCode, theAltitude);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
