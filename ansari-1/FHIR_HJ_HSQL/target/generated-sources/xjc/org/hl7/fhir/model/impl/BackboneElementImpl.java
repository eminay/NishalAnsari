//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.BackboneElement;
import org.hl7.fhir.model.Extension;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "BackboneElement", propOrder = {
    "modifierExtensions"
})
@XmlSeeAlso({
    ProvenanceAgentImpl.class,
    ProvenanceEntityImpl.class,
    ConditionStageImpl.class,
    ConditionEvidenceImpl.class,
    ConditionLocationImpl.class,
    ConditionRelatedItemImpl.class,
    CarePlanParticipantImpl.class,
    CarePlanGoalImpl.class,
    CarePlanActivityImpl.class,
    SupplyDispenseImpl.class,
    QueryResponseImpl.class,
    OrderWhenImpl.class,
    OrganizationContactImpl.class,
    ProcedurePerformerImpl.class,
    ProcedureRelatedItemImpl.class,
    SubstanceInstanceImpl.class,
    SubstanceIngredientImpl.class,
    DiagnosticReportImageImpl.class,
    GroupCharacteristicImpl.class,
    ValueSetDefineImpl.class,
    ValueSetComposeImpl.class,
    ValueSetExpansionImpl.class,
    MedicationProductImpl.class,
    MedicationPackageImpl.class,
    MessageHeaderResponseImpl.class,
    MessageHeaderSourceImpl.class,
    MessageHeaderDestinationImpl.class,
    ImmunizationRecommendationRecommendationImpl.class,
    MedicationDispenseDispenseImpl.class,
    MedicationDispenseSubstitutionImpl.class,
    MedicationPrescriptionDosageInstructionImpl.class,
    MedicationPrescriptionDispenseImpl.class,
    MedicationPrescriptionSubstitutionImpl.class,
    MedicationAdministrationDosageImpl.class,
    EncounterParticipantImpl.class,
    EncounterHospitalizationImpl.class,
    EncounterLocationImpl.class,
    SecurityEventEventImpl.class,
    SecurityEventParticipantImpl.class,
    SecurityEventSourceImpl.class,
    SecurityEventObjectImpl.class,
    MedicationStatementDosageImpl.class,
    ListEntryImpl.class,
    QuestionnaireGroupImpl.class,
    CompositionAttesterImpl.class,
    CompositionEventImpl.class,
    CompositionSectionImpl.class,
    OperationOutcomeIssueImpl.class,
    DeviceObservationReportVirtualDeviceImpl.class,
    ConformanceSoftwareImpl.class,
    ConformanceImplementationImpl.class,
    ConformanceRestImpl.class,
    ConformanceMessagingImpl.class,
    ConformanceDocumentImpl.class,
    FamilyHistoryRelationImpl.class,
    ProfileMappingImpl.class,
    ProfileStructureImpl.class,
    ProfileExtensionDefnImpl.class,
    ProfileQueryImpl.class,
    LocationPositionImpl.class,
    ObservationReferenceRangeImpl.class,
    ObservationRelatedImpl.class,
    DocumentReferenceRelatesToImpl.class,
    DocumentReferenceServiceImpl.class,
    DocumentReferenceContextImpl.class,
    ImmunizationExplanationImpl.class,
    ImmunizationReactionImpl.class,
    ImmunizationVaccinationProtocolImpl.class,
    SpecimenSourceImpl.class,
    SpecimenCollectionImpl.class,
    SpecimenTreatmentImpl.class,
    SpecimenContainerImpl.class,
    PatientContactImpl.class,
    PatientAnimalImpl.class,
    PatientLinkImpl.class,
    ConceptMapConceptImpl.class,
    PractitionerQualificationImpl.class,
    AdverseReactionSymptomImpl.class,
    AdverseReactionExposureImpl.class,
    ImagingStudySeriesImpl.class,
    DiagnosticOrderEventImpl.class,
    DiagnosticOrderItemImpl.class,
    SecurityEventDetailImpl.class,
    ProfileTypeImpl.class,
    ConceptMapMapImpl.class,
    DeviceObservationReportChannelImpl.class,
    MedicationContentImpl.class,
    ConformanceCertificateImpl.class,
    EncounterAccomodationImpl.class,
    ConformanceOperation1Impl.class,
    ProfileConstraintImpl.class,
    ValueSetIncludeImpl.class,
    ProfileElementImpl.class,
    DocumentReferenceParameterImpl.class,
    ProfileMapping1Impl.class,
    ValueSetFilterImpl.class,
    MedicationIngredientImpl.class,
    DeviceObservationReportMetricImpl.class,
    ConformanceSearchParamImpl.class,
    ImmunizationRecommendationProtocolImpl.class,
    ConformanceOperationImpl.class,
    FamilyHistoryConditionImpl.class,
    ImagingStudyInstanceImpl.class,
    ProfileBindingImpl.class,
    CarePlanSimpleImpl.class,
    ValueSetContainsImpl.class,
    ConformanceSecurityImpl.class,
    ConformanceResourceImpl.class,
    ProfileSlicingImpl.class,
    SecurityEventNetworkImpl.class,
    ConformanceQueryImpl.class,
    ProfileSearchParamImpl.class,
    ConceptMapDependsOnImpl.class,
    QuestionnaireQuestionImpl.class,
    ConformanceEventImpl.class,
    ValueSetConceptImpl.class,
    MedicationDispenseDosageImpl.class,
    ProfileDefinitionImpl.class,
    ImmunizationRecommendationDateCriterionImpl.class,
    ResourceImpl.class
})
public class BackboneElementImpl
    extends ElementImpl
    implements Serializable, BackboneElement, Equals, HashCode
{

    @XmlElement(name = "modifierExtension", type = ExtensionImpl.class)
    protected List<Extension> modifierExtensions;

    @OneToMany(targetEntity = Extension.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "MODIFIEREXTENSIONS_BACKBONEE_0")
    public List<Extension> getModifierExtensions() {
        if (modifierExtensions == null) {
            modifierExtensions = new ArrayList<Extension>();
        }
        return this.modifierExtensions;
    }

    public void setModifierExtensions(List<Extension> modifierExtensions) {
        this.modifierExtensions = modifierExtensions;
    }

    public BackboneElementImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    public BackboneElementImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    public BackboneElementImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public BackboneElementImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public BackboneElementImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public BackboneElementImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public BackboneElementImpl withId(String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof BackboneElementImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final BackboneElementImpl that = ((BackboneElementImpl) object);
        {
            List<Extension> lhsModifierExtensions;
            lhsModifierExtensions = (((this.modifierExtensions!= null)&&(!this.modifierExtensions.isEmpty()))?this.getModifierExtensions():null);
            List<Extension> rhsModifierExtensions;
            rhsModifierExtensions = (((that.modifierExtensions!= null)&&(!that.modifierExtensions.isEmpty()))?that.getModifierExtensions():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "modifierExtensions", lhsModifierExtensions), LocatorUtils.property(thatLocator, "modifierExtensions", rhsModifierExtensions), lhsModifierExtensions, rhsModifierExtensions)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            List<Extension> theModifierExtensions;
            theModifierExtensions = (((this.modifierExtensions!= null)&&(!this.modifierExtensions.isEmpty()))?this.getModifierExtensions():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "modifierExtensions", theModifierExtensions), currentHashCode, theModifierExtensions);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
