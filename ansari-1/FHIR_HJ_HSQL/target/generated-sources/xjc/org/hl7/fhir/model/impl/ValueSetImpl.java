//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.Contact;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.Narrative;
import org.hl7.fhir.model.ResourceInline;
import org.hl7.fhir.model.ValueSet;
import org.hl7.fhir.model.ValueSetCompose;
import org.hl7.fhir.model.ValueSetDefine;
import org.hl7.fhir.model.ValueSetExpansion;
import org.hl7.fhir.model.ValueSetStatus;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ValueSet", propOrder = {
    "identifier",
    "version",
    "name",
    "publisher",
    "telecoms",
    "description",
    "copyright",
    "status",
    "experimental",
    "extensible",
    "date",
    "define",
    "compose",
    "expansion"
})
@XmlRootElement(name = "ValueSet")
public class ValueSetImpl
    extends ResourceImpl
    implements Serializable, ValueSet, Equals, HashCode
{

    @XmlElement(type = StringImpl.class)
    protected StringImpl identifier;
    @XmlElement(type = StringImpl.class)
    protected StringImpl version;
    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl name;
    @XmlElement(type = StringImpl.class)
    protected StringImpl publisher;
    @XmlElement(name = "telecom", type = ContactImpl.class)
    protected List<Contact> telecoms;
    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl description;
    @XmlElement(type = StringImpl.class)
    protected StringImpl copyright;
    @XmlElement(required = true, type = ValueSetStatusImpl.class)
    protected ValueSetStatusImpl status;
    @XmlElement(type = BooleanImpl.class)
    protected BooleanImpl experimental;
    @XmlElement(type = BooleanImpl.class)
    protected BooleanImpl extensible;
    @XmlElement(type = DateTimeImpl.class)
    protected DateTimeImpl date;
    @XmlElement(type = ValueSetDefineImpl.class)
    protected ValueSetDefineImpl define;
    @XmlElement(type = ValueSetComposeImpl.class)
    protected ValueSetComposeImpl compose;
    @XmlElement(type = ValueSetExpansionImpl.class)
    protected ValueSetExpansionImpl expansion;

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "IDENTIFIER_VALUESET_HJID")
    public org.hl7.fhir.model.String getIdentifier() {
        return identifier;
    }

    public void setIdentifier(org.hl7.fhir.model.String value) {
        this.identifier = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VERSION__VALUESET_HJID")
    public org.hl7.fhir.model.String getVersion() {
        return version;
    }

    public void setVersion(org.hl7.fhir.model.String value) {
        this.version = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__VALUESET_HJID")
    public org.hl7.fhir.model.String getName() {
        return name;
    }

    public void setName(org.hl7.fhir.model.String value) {
        this.name = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PUBLISHER_VALUESET_HJID")
    public org.hl7.fhir.model.String getPublisher() {
        return publisher;
    }

    public void setPublisher(org.hl7.fhir.model.String value) {
        this.publisher = ((StringImpl) value);
    }

    @OneToMany(targetEntity = Contact.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TELECOMS_VALUESET_HJID")
    public List<Contact> getTelecoms() {
        if (telecoms == null) {
            telecoms = new ArrayList<Contact>();
        }
        return this.telecoms;
    }

    public void setTelecoms(List<Contact> telecoms) {
        this.telecoms = telecoms;
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DESCRIPTION_VALUESET_HJID")
    public org.hl7.fhir.model.String getDescription() {
        return description;
    }

    public void setDescription(org.hl7.fhir.model.String value) {
        this.description = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "COPYRIGHT_VALUESET_HJID")
    public org.hl7.fhir.model.String getCopyright() {
        return copyright;
    }

    public void setCopyright(org.hl7.fhir.model.String value) {
        this.copyright = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = ValueSetStatus.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "STATUS_VALUESET_HJID")
    public ValueSetStatus getStatus() {
        return status;
    }

    public void setStatus(ValueSetStatus value) {
        this.status = ((ValueSetStatusImpl) value);
    }

    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "EXPERIMENTAL_VALUESET_HJID")
    public Boolean getExperimental() {
        return experimental;
    }

    public void setExperimental(Boolean value) {
        this.experimental = ((BooleanImpl) value);
    }

    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "EXTENSIBLE_VALUESET_HJID")
    public Boolean getExtensible() {
        return extensible;
    }

    public void setExtensible(Boolean value) {
        this.extensible = ((BooleanImpl) value);
    }

    @ManyToOne(targetEntity = DateTime.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATE__VALUESET_HJID")
    public DateTime getDate() {
        return date;
    }

    public void setDate(DateTime value) {
        this.date = ((DateTimeImpl) value);
    }

    @ManyToOne(targetEntity = ValueSetDefine.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DEFINE_VALUESET_HJID")
    public ValueSetDefine getDefine() {
        return define;
    }

    public void setDefine(ValueSetDefine value) {
        this.define = ((ValueSetDefineImpl) value);
    }

    @ManyToOne(targetEntity = ValueSetCompose.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "COMPOSE_VALUESET_HJID")
    public ValueSetCompose getCompose() {
        return compose;
    }

    public void setCompose(ValueSetCompose value) {
        this.compose = ((ValueSetComposeImpl) value);
    }

    @ManyToOne(targetEntity = ValueSetExpansion.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "EXPANSION_VALUESET_HJID")
    public ValueSetExpansion getExpansion() {
        return expansion;
    }

    public void setExpansion(ValueSetExpansion value) {
        this.expansion = ((ValueSetExpansionImpl) value);
    }

    public ValueSetImpl withIdentifier(org.hl7.fhir.model.String value) {
        setIdentifier(value);
        return this;
    }

    public ValueSetImpl withVersion(org.hl7.fhir.model.String value) {
        setVersion(value);
        return this;
    }

    public ValueSetImpl withName(org.hl7.fhir.model.String value) {
        setName(value);
        return this;
    }

    public ValueSetImpl withPublisher(org.hl7.fhir.model.String value) {
        setPublisher(value);
        return this;
    }

    public ValueSetImpl withTelecoms(Contact... values) {
        if (values!= null) {
            for (Contact value: values) {
                getTelecoms().add(value);
            }
        }
        return this;
    }

    public ValueSetImpl withTelecoms(Collection<Contact> values) {
        if (values!= null) {
            getTelecoms().addAll(values);
        }
        return this;
    }

    public ValueSetImpl withTelecoms(List<Contact> telecoms) {
        setTelecoms(telecoms);
        return this;
    }

    public ValueSetImpl withDescription(org.hl7.fhir.model.String value) {
        setDescription(value);
        return this;
    }

    public ValueSetImpl withCopyright(org.hl7.fhir.model.String value) {
        setCopyright(value);
        return this;
    }

    public ValueSetImpl withStatus(ValueSetStatus value) {
        setStatus(value);
        return this;
    }

    public ValueSetImpl withExperimental(Boolean value) {
        setExperimental(value);
        return this;
    }

    public ValueSetImpl withExtensible(Boolean value) {
        setExtensible(value);
        return this;
    }

    public ValueSetImpl withDate(DateTime value) {
        setDate(value);
        return this;
    }

    public ValueSetImpl withDefine(ValueSetDefine value) {
        setDefine(value);
        return this;
    }

    public ValueSetImpl withCompose(ValueSetCompose value) {
        setCompose(value);
        return this;
    }

    public ValueSetImpl withExpansion(ValueSetExpansion value) {
        setExpansion(value);
        return this;
    }

    @Override
    public ValueSetImpl withLanguage(Code value) {
        setLanguage(value);
        return this;
    }

    @Override
    public ValueSetImpl withText(Narrative value) {
        setText(value);
        return this;
    }

    @Override
    public ValueSetImpl withContaineds(ResourceInline... values) {
        if (values!= null) {
            for (ResourceInline value: values) {
                getContaineds().add(value);
            }
        }
        return this;
    }

    @Override
    public ValueSetImpl withContaineds(Collection<ResourceInline> values) {
        if (values!= null) {
            getContaineds().addAll(values);
        }
        return this;
    }

    @Override
    public ValueSetImpl withContaineds(List<ResourceInline> containeds) {
        setContaineds(containeds);
        return this;
    }

    @Override
    public ValueSetImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ValueSetImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ValueSetImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public ValueSetImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ValueSetImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ValueSetImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public ValueSetImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ValueSetImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ValueSetImpl that = ((ValueSetImpl) object);
        {
            org.hl7.fhir.model.String lhsIdentifier;
            lhsIdentifier = this.getIdentifier();
            org.hl7.fhir.model.String rhsIdentifier;
            rhsIdentifier = that.getIdentifier();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "identifier", lhsIdentifier), LocatorUtils.property(thatLocator, "identifier", rhsIdentifier), lhsIdentifier, rhsIdentifier)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsVersion;
            lhsVersion = this.getVersion();
            org.hl7.fhir.model.String rhsVersion;
            rhsVersion = that.getVersion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "version", lhsVersion), LocatorUtils.property(thatLocator, "version", rhsVersion), lhsVersion, rhsVersion)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsName;
            lhsName = this.getName();
            org.hl7.fhir.model.String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsPublisher;
            lhsPublisher = this.getPublisher();
            org.hl7.fhir.model.String rhsPublisher;
            rhsPublisher = that.getPublisher();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "publisher", lhsPublisher), LocatorUtils.property(thatLocator, "publisher", rhsPublisher), lhsPublisher, rhsPublisher)) {
                return false;
            }
        }
        {
            List<Contact> lhsTelecoms;
            lhsTelecoms = (((this.telecoms!= null)&&(!this.telecoms.isEmpty()))?this.getTelecoms():null);
            List<Contact> rhsTelecoms;
            rhsTelecoms = (((that.telecoms!= null)&&(!that.telecoms.isEmpty()))?that.getTelecoms():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "telecoms", lhsTelecoms), LocatorUtils.property(thatLocator, "telecoms", rhsTelecoms), lhsTelecoms, rhsTelecoms)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsDescription;
            lhsDescription = this.getDescription();
            org.hl7.fhir.model.String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsCopyright;
            lhsCopyright = this.getCopyright();
            org.hl7.fhir.model.String rhsCopyright;
            rhsCopyright = that.getCopyright();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "copyright", lhsCopyright), LocatorUtils.property(thatLocator, "copyright", rhsCopyright), lhsCopyright, rhsCopyright)) {
                return false;
            }
        }
        {
            ValueSetStatus lhsStatus;
            lhsStatus = this.getStatus();
            ValueSetStatus rhsStatus;
            rhsStatus = that.getStatus();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "status", lhsStatus), LocatorUtils.property(thatLocator, "status", rhsStatus), lhsStatus, rhsStatus)) {
                return false;
            }
        }
        {
            Boolean lhsExperimental;
            lhsExperimental = this.getExperimental();
            Boolean rhsExperimental;
            rhsExperimental = that.getExperimental();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "experimental", lhsExperimental), LocatorUtils.property(thatLocator, "experimental", rhsExperimental), lhsExperimental, rhsExperimental)) {
                return false;
            }
        }
        {
            Boolean lhsExtensible;
            lhsExtensible = this.getExtensible();
            Boolean rhsExtensible;
            rhsExtensible = that.getExtensible();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "extensible", lhsExtensible), LocatorUtils.property(thatLocator, "extensible", rhsExtensible), lhsExtensible, rhsExtensible)) {
                return false;
            }
        }
        {
            DateTime lhsDate;
            lhsDate = this.getDate();
            DateTime rhsDate;
            rhsDate = that.getDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "date", lhsDate), LocatorUtils.property(thatLocator, "date", rhsDate), lhsDate, rhsDate)) {
                return false;
            }
        }
        {
            ValueSetDefine lhsDefine;
            lhsDefine = this.getDefine();
            ValueSetDefine rhsDefine;
            rhsDefine = that.getDefine();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "define", lhsDefine), LocatorUtils.property(thatLocator, "define", rhsDefine), lhsDefine, rhsDefine)) {
                return false;
            }
        }
        {
            ValueSetCompose lhsCompose;
            lhsCompose = this.getCompose();
            ValueSetCompose rhsCompose;
            rhsCompose = that.getCompose();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "compose", lhsCompose), LocatorUtils.property(thatLocator, "compose", rhsCompose), lhsCompose, rhsCompose)) {
                return false;
            }
        }
        {
            ValueSetExpansion lhsExpansion;
            lhsExpansion = this.getExpansion();
            ValueSetExpansion rhsExpansion;
            rhsExpansion = that.getExpansion();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "expansion", lhsExpansion), LocatorUtils.property(thatLocator, "expansion", rhsExpansion), lhsExpansion, rhsExpansion)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            org.hl7.fhir.model.String theIdentifier;
            theIdentifier = this.getIdentifier();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "identifier", theIdentifier), currentHashCode, theIdentifier);
        }
        {
            org.hl7.fhir.model.String theVersion;
            theVersion = this.getVersion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "version", theVersion), currentHashCode, theVersion);
        }
        {
            org.hl7.fhir.model.String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            org.hl7.fhir.model.String thePublisher;
            thePublisher = this.getPublisher();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "publisher", thePublisher), currentHashCode, thePublisher);
        }
        {
            List<Contact> theTelecoms;
            theTelecoms = (((this.telecoms!= null)&&(!this.telecoms.isEmpty()))?this.getTelecoms():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "telecoms", theTelecoms), currentHashCode, theTelecoms);
        }
        {
            org.hl7.fhir.model.String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            org.hl7.fhir.model.String theCopyright;
            theCopyright = this.getCopyright();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "copyright", theCopyright), currentHashCode, theCopyright);
        }
        {
            ValueSetStatus theStatus;
            theStatus = this.getStatus();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "status", theStatus), currentHashCode, theStatus);
        }
        {
            Boolean theExperimental;
            theExperimental = this.getExperimental();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "experimental", theExperimental), currentHashCode, theExperimental);
        }
        {
            Boolean theExtensible;
            theExtensible = this.getExtensible();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "extensible", theExtensible), currentHashCode, theExtensible);
        }
        {
            DateTime theDate;
            theDate = this.getDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "date", theDate), currentHashCode, theDate);
        }
        {
            ValueSetDefine theDefine;
            theDefine = this.getDefine();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "define", theDefine), currentHashCode, theDefine);
        }
        {
            ValueSetCompose theCompose;
            theCompose = this.getCompose();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "compose", theCompose), currentHashCode, theCompose);
        }
        {
            ValueSetExpansion theExpansion;
            theExpansion = this.getExpansion();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "expansion", theExpansion), currentHashCode, theExpansion);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
