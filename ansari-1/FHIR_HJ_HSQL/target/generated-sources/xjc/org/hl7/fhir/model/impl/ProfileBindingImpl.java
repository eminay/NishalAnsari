//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.BindingConformance;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.ProfileBinding;
import org.hl7.fhir.model.ResourceReference;
import org.hl7.fhir.model.Uri;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile.Binding", propOrder = {
    "name",
    "isExtensible",
    "conformance",
    "description",
    "referenceResource",
    "referenceUri"
})
public class ProfileBindingImpl
    extends BackboneElementImpl
    implements Serializable, ProfileBinding, Equals, HashCode
{

    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl name;
    @XmlElement(required = true, type = BooleanImpl.class)
    protected BooleanImpl isExtensible;
    @XmlElement(type = BindingConformanceImpl.class)
    protected BindingConformanceImpl conformance;
    @XmlElement(type = StringImpl.class)
    protected StringImpl description;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl referenceResource;
    @XmlElement(type = UriImpl.class)
    protected UriImpl referenceUri;

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__PROFILEBINDING_HJID")
    public org.hl7.fhir.model.String getName() {
        return name;
    }

    public void setName(org.hl7.fhir.model.String value) {
        this.name = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "ISEXTENSIBLE_PROFILEBINDING__0")
    public Boolean getIsExtensible() {
        return isExtensible;
    }

    public void setIsExtensible(Boolean value) {
        this.isExtensible = ((BooleanImpl) value);
    }

    @ManyToOne(targetEntity = BindingConformance.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONFORMANCE_PROFILEBINDING_H_0")
    public BindingConformance getConformance() {
        return conformance;
    }

    public void setConformance(BindingConformance value) {
        this.conformance = ((BindingConformanceImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DESCRIPTION_PROFILEBINDING_H_0")
    public org.hl7.fhir.model.String getDescription() {
        return description;
    }

    public void setDescription(org.hl7.fhir.model.String value) {
        this.description = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = ResourceReference.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REFERENCERESOURCE_PROFILEBIN_0")
    public ResourceReference getReferenceResource() {
        return referenceResource;
    }

    public void setReferenceResource(ResourceReference value) {
        this.referenceResource = ((ResourceReferenceImpl) value);
    }

    @ManyToOne(targetEntity = Uri.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REFERENCEURI_PROFILEBINDING__0")
    public Uri getReferenceUri() {
        return referenceUri;
    }

    public void setReferenceUri(Uri value) {
        this.referenceUri = ((UriImpl) value);
    }

    public ProfileBindingImpl withName(org.hl7.fhir.model.String value) {
        setName(value);
        return this;
    }

    public ProfileBindingImpl withIsExtensible(Boolean value) {
        setIsExtensible(value);
        return this;
    }

    public ProfileBindingImpl withConformance(BindingConformance value) {
        setConformance(value);
        return this;
    }

    public ProfileBindingImpl withDescription(org.hl7.fhir.model.String value) {
        setDescription(value);
        return this;
    }

    public ProfileBindingImpl withReferenceResource(ResourceReference value) {
        setReferenceResource(value);
        return this;
    }

    public ProfileBindingImpl withReferenceUri(Uri value) {
        setReferenceUri(value);
        return this;
    }

    @Override
    public ProfileBindingImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileBindingImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileBindingImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public ProfileBindingImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileBindingImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileBindingImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public ProfileBindingImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ProfileBindingImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ProfileBindingImpl that = ((ProfileBindingImpl) object);
        {
            org.hl7.fhir.model.String lhsName;
            lhsName = this.getName();
            org.hl7.fhir.model.String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            Boolean lhsIsExtensible;
            lhsIsExtensible = this.getIsExtensible();
            Boolean rhsIsExtensible;
            rhsIsExtensible = that.getIsExtensible();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "isExtensible", lhsIsExtensible), LocatorUtils.property(thatLocator, "isExtensible", rhsIsExtensible), lhsIsExtensible, rhsIsExtensible)) {
                return false;
            }
        }
        {
            BindingConformance lhsConformance;
            lhsConformance = this.getConformance();
            BindingConformance rhsConformance;
            rhsConformance = that.getConformance();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "conformance", lhsConformance), LocatorUtils.property(thatLocator, "conformance", rhsConformance), lhsConformance, rhsConformance)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsDescription;
            lhsDescription = this.getDescription();
            org.hl7.fhir.model.String rhsDescription;
            rhsDescription = that.getDescription();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "description", lhsDescription), LocatorUtils.property(thatLocator, "description", rhsDescription), lhsDescription, rhsDescription)) {
                return false;
            }
        }
        {
            ResourceReference lhsReferenceResource;
            lhsReferenceResource = this.getReferenceResource();
            ResourceReference rhsReferenceResource;
            rhsReferenceResource = that.getReferenceResource();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referenceResource", lhsReferenceResource), LocatorUtils.property(thatLocator, "referenceResource", rhsReferenceResource), lhsReferenceResource, rhsReferenceResource)) {
                return false;
            }
        }
        {
            Uri lhsReferenceUri;
            lhsReferenceUri = this.getReferenceUri();
            Uri rhsReferenceUri;
            rhsReferenceUri = that.getReferenceUri();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "referenceUri", lhsReferenceUri), LocatorUtils.property(thatLocator, "referenceUri", rhsReferenceUri), lhsReferenceUri, rhsReferenceUri)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            org.hl7.fhir.model.String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            Boolean theIsExtensible;
            theIsExtensible = this.getIsExtensible();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "isExtensible", theIsExtensible), currentHashCode, theIsExtensible);
        }
        {
            BindingConformance theConformance;
            theConformance = this.getConformance();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "conformance", theConformance), currentHashCode, theConformance);
        }
        {
            org.hl7.fhir.model.String theDescription;
            theDescription = this.getDescription();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "description", theDescription), currentHashCode, theDescription);
        }
        {
            ResourceReference theReferenceResource;
            theReferenceResource = this.getReferenceResource();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referenceResource", theReferenceResource), currentHashCode, theReferenceResource);
        }
        {
            Uri theReferenceUri;
            theReferenceUri = this.getReferenceUri();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "referenceUri", theReferenceUri), currentHashCode, theReferenceUri);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
