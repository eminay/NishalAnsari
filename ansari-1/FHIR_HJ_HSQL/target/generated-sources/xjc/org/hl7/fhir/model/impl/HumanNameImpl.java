//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.HumanName;
import org.hl7.fhir.model.NameUse;
import org.hl7.fhir.model.Period;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "HumanName", propOrder = {
    "use",
    "text",
    "families",
    "givens",
    "prefixes",
    "suffixes",
    "period"
})
public class HumanNameImpl
    extends ElementImpl
    implements Serializable, HumanName, Equals, HashCode
{

    @XmlElement(type = NameUseImpl.class)
    protected NameUseImpl use;
    @XmlElement(type = StringImpl.class)
    protected StringImpl text;
    @XmlElement(name = "family", type = StringImpl.class)
    protected List<org.hl7.fhir.model.String> families;
    @XmlElement(name = "given", type = StringImpl.class)
    protected List<org.hl7.fhir.model.String> givens;
    @XmlElement(name = "prefix", type = StringImpl.class)
    protected List<org.hl7.fhir.model.String> prefixes;
    @XmlElement(name = "suffix", type = StringImpl.class)
    protected List<org.hl7.fhir.model.String> suffixes;
    @XmlElement(type = PeriodImpl.class)
    protected PeriodImpl period;

    @ManyToOne(targetEntity = NameUse.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "USE__HUMANNAME_HJID")
    public NameUse getUse() {
        return use;
    }

    public void setUse(NameUse value) {
        this.use = ((NameUseImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TEXT_HUMANNAME_HJID")
    public org.hl7.fhir.model.String getText() {
        return text;
    }

    public void setText(org.hl7.fhir.model.String value) {
        this.text = ((StringImpl) value);
    }

    @OneToMany(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "FAMILIES_HUMANNAME_HJID")
    public List<org.hl7.fhir.model.String> getFamilies() {
        if (families == null) {
            families = new ArrayList<org.hl7.fhir.model.String>();
        }
        return this.families;
    }

    public void setFamilies(List<org.hl7.fhir.model.String> families) {
        this.families = families;
    }

    @OneToMany(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "GIVENS_HUMANNAME_HJID")
    public List<org.hl7.fhir.model.String> getGivens() {
        if (givens == null) {
            givens = new ArrayList<org.hl7.fhir.model.String>();
        }
        return this.givens;
    }

    public void setGivens(List<org.hl7.fhir.model.String> givens) {
        this.givens = givens;
    }

    @OneToMany(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PREFIXES_HUMANNAME_HJID")
    public List<org.hl7.fhir.model.String> getPrefixes() {
        if (prefixes == null) {
            prefixes = new ArrayList<org.hl7.fhir.model.String>();
        }
        return this.prefixes;
    }

    public void setPrefixes(List<org.hl7.fhir.model.String> prefixes) {
        this.prefixes = prefixes;
    }

    @OneToMany(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SUFFIXES_HUMANNAME_HJID")
    public List<org.hl7.fhir.model.String> getSuffixes() {
        if (suffixes == null) {
            suffixes = new ArrayList<org.hl7.fhir.model.String>();
        }
        return this.suffixes;
    }

    public void setSuffixes(List<org.hl7.fhir.model.String> suffixes) {
        this.suffixes = suffixes;
    }

    @ManyToOne(targetEntity = Period.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PERIOD_HUMANNAME_HJID")
    public Period getPeriod() {
        return period;
    }

    public void setPeriod(Period value) {
        this.period = ((PeriodImpl) value);
    }

    public HumanNameImpl withUse(NameUse value) {
        setUse(value);
        return this;
    }

    public HumanNameImpl withText(org.hl7.fhir.model.String value) {
        setText(value);
        return this;
    }

    public HumanNameImpl withFamilies(org.hl7.fhir.model.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.model.String value: values) {
                getFamilies().add(value);
            }
        }
        return this;
    }

    public HumanNameImpl withFamilies(Collection<org.hl7.fhir.model.String> values) {
        if (values!= null) {
            getFamilies().addAll(values);
        }
        return this;
    }

    public HumanNameImpl withFamilies(List<org.hl7.fhir.model.String> families) {
        setFamilies(families);
        return this;
    }

    public HumanNameImpl withGivens(org.hl7.fhir.model.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.model.String value: values) {
                getGivens().add(value);
            }
        }
        return this;
    }

    public HumanNameImpl withGivens(Collection<org.hl7.fhir.model.String> values) {
        if (values!= null) {
            getGivens().addAll(values);
        }
        return this;
    }

    public HumanNameImpl withGivens(List<org.hl7.fhir.model.String> givens) {
        setGivens(givens);
        return this;
    }

    public HumanNameImpl withPrefixes(org.hl7.fhir.model.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.model.String value: values) {
                getPrefixes().add(value);
            }
        }
        return this;
    }

    public HumanNameImpl withPrefixes(Collection<org.hl7.fhir.model.String> values) {
        if (values!= null) {
            getPrefixes().addAll(values);
        }
        return this;
    }

    public HumanNameImpl withPrefixes(List<org.hl7.fhir.model.String> prefixes) {
        setPrefixes(prefixes);
        return this;
    }

    public HumanNameImpl withSuffixes(org.hl7.fhir.model.String... values) {
        if (values!= null) {
            for (org.hl7.fhir.model.String value: values) {
                getSuffixes().add(value);
            }
        }
        return this;
    }

    public HumanNameImpl withSuffixes(Collection<org.hl7.fhir.model.String> values) {
        if (values!= null) {
            getSuffixes().addAll(values);
        }
        return this;
    }

    public HumanNameImpl withSuffixes(List<org.hl7.fhir.model.String> suffixes) {
        setSuffixes(suffixes);
        return this;
    }

    public HumanNameImpl withPeriod(Period value) {
        setPeriod(value);
        return this;
    }

    @Override
    public HumanNameImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public HumanNameImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public HumanNameImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public HumanNameImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof HumanNameImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final HumanNameImpl that = ((HumanNameImpl) object);
        {
            NameUse lhsUse;
            lhsUse = this.getUse();
            NameUse rhsUse;
            rhsUse = that.getUse();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "use", lhsUse), LocatorUtils.property(thatLocator, "use", rhsUse), lhsUse, rhsUse)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsText;
            lhsText = this.getText();
            org.hl7.fhir.model.String rhsText;
            rhsText = that.getText();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "text", lhsText), LocatorUtils.property(thatLocator, "text", rhsText), lhsText, rhsText)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.model.String> lhsFamilies;
            lhsFamilies = (((this.families!= null)&&(!this.families.isEmpty()))?this.getFamilies():null);
            List<org.hl7.fhir.model.String> rhsFamilies;
            rhsFamilies = (((that.families!= null)&&(!that.families.isEmpty()))?that.getFamilies():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "families", lhsFamilies), LocatorUtils.property(thatLocator, "families", rhsFamilies), lhsFamilies, rhsFamilies)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.model.String> lhsGivens;
            lhsGivens = (((this.givens!= null)&&(!this.givens.isEmpty()))?this.getGivens():null);
            List<org.hl7.fhir.model.String> rhsGivens;
            rhsGivens = (((that.givens!= null)&&(!that.givens.isEmpty()))?that.getGivens():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "givens", lhsGivens), LocatorUtils.property(thatLocator, "givens", rhsGivens), lhsGivens, rhsGivens)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.model.String> lhsPrefixes;
            lhsPrefixes = (((this.prefixes!= null)&&(!this.prefixes.isEmpty()))?this.getPrefixes():null);
            List<org.hl7.fhir.model.String> rhsPrefixes;
            rhsPrefixes = (((that.prefixes!= null)&&(!that.prefixes.isEmpty()))?that.getPrefixes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "prefixes", lhsPrefixes), LocatorUtils.property(thatLocator, "prefixes", rhsPrefixes), lhsPrefixes, rhsPrefixes)) {
                return false;
            }
        }
        {
            List<org.hl7.fhir.model.String> lhsSuffixes;
            lhsSuffixes = (((this.suffixes!= null)&&(!this.suffixes.isEmpty()))?this.getSuffixes():null);
            List<org.hl7.fhir.model.String> rhsSuffixes;
            rhsSuffixes = (((that.suffixes!= null)&&(!that.suffixes.isEmpty()))?that.getSuffixes():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "suffixes", lhsSuffixes), LocatorUtils.property(thatLocator, "suffixes", rhsSuffixes), lhsSuffixes, rhsSuffixes)) {
                return false;
            }
        }
        {
            Period lhsPeriod;
            lhsPeriod = this.getPeriod();
            Period rhsPeriod;
            rhsPeriod = that.getPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "period", lhsPeriod), LocatorUtils.property(thatLocator, "period", rhsPeriod), lhsPeriod, rhsPeriod)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            NameUse theUse;
            theUse = this.getUse();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "use", theUse), currentHashCode, theUse);
        }
        {
            org.hl7.fhir.model.String theText;
            theText = this.getText();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "text", theText), currentHashCode, theText);
        }
        {
            List<org.hl7.fhir.model.String> theFamilies;
            theFamilies = (((this.families!= null)&&(!this.families.isEmpty()))?this.getFamilies():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "families", theFamilies), currentHashCode, theFamilies);
        }
        {
            List<org.hl7.fhir.model.String> theGivens;
            theGivens = (((this.givens!= null)&&(!this.givens.isEmpty()))?this.getGivens():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "givens", theGivens), currentHashCode, theGivens);
        }
        {
            List<org.hl7.fhir.model.String> thePrefixes;
            thePrefixes = (((this.prefixes!= null)&&(!this.prefixes.isEmpty()))?this.getPrefixes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "prefixes", thePrefixes), currentHashCode, thePrefixes);
        }
        {
            List<org.hl7.fhir.model.String> theSuffixes;
            theSuffixes = (((this.suffixes!= null)&&(!this.suffixes.isEmpty()))?this.getSuffixes():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "suffixes", theSuffixes), currentHashCode, theSuffixes);
        }
        {
            Period thePeriod;
            thePeriod = this.getPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "period", thePeriod), currentHashCode, thePeriod);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
