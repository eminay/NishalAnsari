//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Age;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Date;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.FamilyHistoryCondition;
import org.hl7.fhir.model.FamilyHistoryRelation;
import org.hl7.fhir.model.Period;
import org.hl7.fhir.model.Range;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "FamilyHistory.Relation", propOrder = {
    "name",
    "relationship",
    "bornString",
    "bornDate",
    "bornPeriod",
    "deceasedString",
    "deceasedDate",
    "deceasedRange",
    "deceasedAge",
    "deceasedBoolean",
    "note",
    "conditions"
})
public class FamilyHistoryRelationImpl
    extends BackboneElementImpl
    implements Serializable, FamilyHistoryRelation, Equals, HashCode
{

    @XmlElement(type = StringImpl.class)
    protected StringImpl name;
    @XmlElement(required = true, type = CodeableConceptImpl.class)
    protected CodeableConceptImpl relationship;
    @XmlElement(type = StringImpl.class)
    protected StringImpl bornString;
    @XmlElement(type = DateImpl.class)
    protected DateImpl bornDate;
    @XmlElement(type = PeriodImpl.class)
    protected PeriodImpl bornPeriod;
    @XmlElement(type = StringImpl.class)
    protected StringImpl deceasedString;
    @XmlElement(type = DateImpl.class)
    protected DateImpl deceasedDate;
    @XmlElement(type = RangeImpl.class)
    protected RangeImpl deceasedRange;
    @XmlElement(type = AgeImpl.class)
    protected AgeImpl deceasedAge;
    @XmlElement(type = BooleanImpl.class)
    protected BooleanImpl deceasedBoolean;
    @XmlElement(type = StringImpl.class)
    protected StringImpl note;
    @XmlElement(name = "condition", type = FamilyHistoryConditionImpl.class)
    protected List<FamilyHistoryCondition> conditions;

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__FAMILYHISTORYRELATION__0")
    public org.hl7.fhir.model.String getName() {
        return name;
    }

    public void setName(org.hl7.fhir.model.String value) {
        this.name = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = CodeableConcept.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "RELATIONSHIP_FAMILYHISTORYRE_0")
    public CodeableConcept getRelationship() {
        return relationship;
    }

    public void setRelationship(CodeableConcept value) {
        this.relationship = ((CodeableConceptImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "BORNSTRING_FAMILYHISTORYRELA_0")
    public org.hl7.fhir.model.String getBornString() {
        return bornString;
    }

    public void setBornString(org.hl7.fhir.model.String value) {
        this.bornString = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = Date.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "BORNDATE_FAMILYHISTORYRELATI_0")
    public Date getBornDate() {
        return bornDate;
    }

    public void setBornDate(Date value) {
        this.bornDate = ((DateImpl) value);
    }

    @ManyToOne(targetEntity = Period.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "BORNPERIOD_FAMILYHISTORYRELA_0")
    public Period getBornPeriod() {
        return bornPeriod;
    }

    public void setBornPeriod(Period value) {
        this.bornPeriod = ((PeriodImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DECEASEDSTRING_FAMILYHISTORY_0")
    public org.hl7.fhir.model.String getDeceasedString() {
        return deceasedString;
    }

    public void setDeceasedString(org.hl7.fhir.model.String value) {
        this.deceasedString = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = Date.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DECEASEDDATE_FAMILYHISTORYRE_0")
    public Date getDeceasedDate() {
        return deceasedDate;
    }

    public void setDeceasedDate(Date value) {
        this.deceasedDate = ((DateImpl) value);
    }

    @ManyToOne(targetEntity = Range.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DECEASEDRANGE_FAMILYHISTORYR_0")
    public Range getDeceasedRange() {
        return deceasedRange;
    }

    public void setDeceasedRange(Range value) {
        this.deceasedRange = ((RangeImpl) value);
    }

    @ManyToOne(targetEntity = Age.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DECEASEDAGE_FAMILYHISTORYREL_0")
    public Age getDeceasedAge() {
        return deceasedAge;
    }

    public void setDeceasedAge(Age value) {
        this.deceasedAge = ((AgeImpl) value);
    }

    @ManyToOne(targetEntity = Boolean.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DECEASEDBOOLEAN_FAMILYHISTOR_0")
    public Boolean getDeceasedBoolean() {
        return deceasedBoolean;
    }

    public void setDeceasedBoolean(Boolean value) {
        this.deceasedBoolean = ((BooleanImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NOTE_FAMILYHISTORYRELATION_H_0")
    public org.hl7.fhir.model.String getNote() {
        return note;
    }

    public void setNote(org.hl7.fhir.model.String value) {
        this.note = ((StringImpl) value);
    }

    @OneToMany(targetEntity = FamilyHistoryCondition.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONDITIONS_FAMILYHISTORYRELA_0")
    public List<FamilyHistoryCondition> getConditions() {
        if (conditions == null) {
            conditions = new ArrayList<FamilyHistoryCondition>();
        }
        return this.conditions;
    }

    public void setConditions(List<FamilyHistoryCondition> conditions) {
        this.conditions = conditions;
    }

    public FamilyHistoryRelationImpl withName(org.hl7.fhir.model.String value) {
        setName(value);
        return this;
    }

    public FamilyHistoryRelationImpl withRelationship(CodeableConcept value) {
        setRelationship(value);
        return this;
    }

    public FamilyHistoryRelationImpl withBornString(org.hl7.fhir.model.String value) {
        setBornString(value);
        return this;
    }

    public FamilyHistoryRelationImpl withBornDate(Date value) {
        setBornDate(value);
        return this;
    }

    public FamilyHistoryRelationImpl withBornPeriod(Period value) {
        setBornPeriod(value);
        return this;
    }

    public FamilyHistoryRelationImpl withDeceasedString(org.hl7.fhir.model.String value) {
        setDeceasedString(value);
        return this;
    }

    public FamilyHistoryRelationImpl withDeceasedDate(Date value) {
        setDeceasedDate(value);
        return this;
    }

    public FamilyHistoryRelationImpl withDeceasedRange(Range value) {
        setDeceasedRange(value);
        return this;
    }

    public FamilyHistoryRelationImpl withDeceasedAge(Age value) {
        setDeceasedAge(value);
        return this;
    }

    public FamilyHistoryRelationImpl withDeceasedBoolean(Boolean value) {
        setDeceasedBoolean(value);
        return this;
    }

    public FamilyHistoryRelationImpl withNote(org.hl7.fhir.model.String value) {
        setNote(value);
        return this;
    }

    public FamilyHistoryRelationImpl withConditions(FamilyHistoryCondition... values) {
        if (values!= null) {
            for (FamilyHistoryCondition value: values) {
                getConditions().add(value);
            }
        }
        return this;
    }

    public FamilyHistoryRelationImpl withConditions(Collection<FamilyHistoryCondition> values) {
        if (values!= null) {
            getConditions().addAll(values);
        }
        return this;
    }

    public FamilyHistoryRelationImpl withConditions(List<FamilyHistoryCondition> conditions) {
        setConditions(conditions);
        return this;
    }

    @Override
    public FamilyHistoryRelationImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public FamilyHistoryRelationImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public FamilyHistoryRelationImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public FamilyHistoryRelationImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public FamilyHistoryRelationImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public FamilyHistoryRelationImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public FamilyHistoryRelationImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof FamilyHistoryRelationImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final FamilyHistoryRelationImpl that = ((FamilyHistoryRelationImpl) object);
        {
            org.hl7.fhir.model.String lhsName;
            lhsName = this.getName();
            org.hl7.fhir.model.String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            CodeableConcept lhsRelationship;
            lhsRelationship = this.getRelationship();
            CodeableConcept rhsRelationship;
            rhsRelationship = that.getRelationship();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "relationship", lhsRelationship), LocatorUtils.property(thatLocator, "relationship", rhsRelationship), lhsRelationship, rhsRelationship)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsBornString;
            lhsBornString = this.getBornString();
            org.hl7.fhir.model.String rhsBornString;
            rhsBornString = that.getBornString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bornString", lhsBornString), LocatorUtils.property(thatLocator, "bornString", rhsBornString), lhsBornString, rhsBornString)) {
                return false;
            }
        }
        {
            Date lhsBornDate;
            lhsBornDate = this.getBornDate();
            Date rhsBornDate;
            rhsBornDate = that.getBornDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bornDate", lhsBornDate), LocatorUtils.property(thatLocator, "bornDate", rhsBornDate), lhsBornDate, rhsBornDate)) {
                return false;
            }
        }
        {
            Period lhsBornPeriod;
            lhsBornPeriod = this.getBornPeriod();
            Period rhsBornPeriod;
            rhsBornPeriod = that.getBornPeriod();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "bornPeriod", lhsBornPeriod), LocatorUtils.property(thatLocator, "bornPeriod", rhsBornPeriod), lhsBornPeriod, rhsBornPeriod)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsDeceasedString;
            lhsDeceasedString = this.getDeceasedString();
            org.hl7.fhir.model.String rhsDeceasedString;
            rhsDeceasedString = that.getDeceasedString();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deceasedString", lhsDeceasedString), LocatorUtils.property(thatLocator, "deceasedString", rhsDeceasedString), lhsDeceasedString, rhsDeceasedString)) {
                return false;
            }
        }
        {
            Date lhsDeceasedDate;
            lhsDeceasedDate = this.getDeceasedDate();
            Date rhsDeceasedDate;
            rhsDeceasedDate = that.getDeceasedDate();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deceasedDate", lhsDeceasedDate), LocatorUtils.property(thatLocator, "deceasedDate", rhsDeceasedDate), lhsDeceasedDate, rhsDeceasedDate)) {
                return false;
            }
        }
        {
            Range lhsDeceasedRange;
            lhsDeceasedRange = this.getDeceasedRange();
            Range rhsDeceasedRange;
            rhsDeceasedRange = that.getDeceasedRange();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deceasedRange", lhsDeceasedRange), LocatorUtils.property(thatLocator, "deceasedRange", rhsDeceasedRange), lhsDeceasedRange, rhsDeceasedRange)) {
                return false;
            }
        }
        {
            Age lhsDeceasedAge;
            lhsDeceasedAge = this.getDeceasedAge();
            Age rhsDeceasedAge;
            rhsDeceasedAge = that.getDeceasedAge();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deceasedAge", lhsDeceasedAge), LocatorUtils.property(thatLocator, "deceasedAge", rhsDeceasedAge), lhsDeceasedAge, rhsDeceasedAge)) {
                return false;
            }
        }
        {
            Boolean lhsDeceasedBoolean;
            lhsDeceasedBoolean = this.getDeceasedBoolean();
            Boolean rhsDeceasedBoolean;
            rhsDeceasedBoolean = that.getDeceasedBoolean();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "deceasedBoolean", lhsDeceasedBoolean), LocatorUtils.property(thatLocator, "deceasedBoolean", rhsDeceasedBoolean), lhsDeceasedBoolean, rhsDeceasedBoolean)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsNote;
            lhsNote = this.getNote();
            org.hl7.fhir.model.String rhsNote;
            rhsNote = that.getNote();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "note", lhsNote), LocatorUtils.property(thatLocator, "note", rhsNote), lhsNote, rhsNote)) {
                return false;
            }
        }
        {
            List<FamilyHistoryCondition> lhsConditions;
            lhsConditions = (((this.conditions!= null)&&(!this.conditions.isEmpty()))?this.getConditions():null);
            List<FamilyHistoryCondition> rhsConditions;
            rhsConditions = (((that.conditions!= null)&&(!that.conditions.isEmpty()))?that.getConditions():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "conditions", lhsConditions), LocatorUtils.property(thatLocator, "conditions", rhsConditions), lhsConditions, rhsConditions)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            org.hl7.fhir.model.String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            CodeableConcept theRelationship;
            theRelationship = this.getRelationship();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "relationship", theRelationship), currentHashCode, theRelationship);
        }
        {
            org.hl7.fhir.model.String theBornString;
            theBornString = this.getBornString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bornString", theBornString), currentHashCode, theBornString);
        }
        {
            Date theBornDate;
            theBornDate = this.getBornDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bornDate", theBornDate), currentHashCode, theBornDate);
        }
        {
            Period theBornPeriod;
            theBornPeriod = this.getBornPeriod();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "bornPeriod", theBornPeriod), currentHashCode, theBornPeriod);
        }
        {
            org.hl7.fhir.model.String theDeceasedString;
            theDeceasedString = this.getDeceasedString();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deceasedString", theDeceasedString), currentHashCode, theDeceasedString);
        }
        {
            Date theDeceasedDate;
            theDeceasedDate = this.getDeceasedDate();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deceasedDate", theDeceasedDate), currentHashCode, theDeceasedDate);
        }
        {
            Range theDeceasedRange;
            theDeceasedRange = this.getDeceasedRange();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deceasedRange", theDeceasedRange), currentHashCode, theDeceasedRange);
        }
        {
            Age theDeceasedAge;
            theDeceasedAge = this.getDeceasedAge();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deceasedAge", theDeceasedAge), currentHashCode, theDeceasedAge);
        }
        {
            Boolean theDeceasedBoolean;
            theDeceasedBoolean = this.getDeceasedBoolean();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "deceasedBoolean", theDeceasedBoolean), currentHashCode, theDeceasedBoolean);
        }
        {
            org.hl7.fhir.model.String theNote;
            theNote = this.getNote();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "note", theNote), currentHashCode, theNote);
        }
        {
            List<FamilyHistoryCondition> theConditions;
            theConditions = (((this.conditions!= null)&&(!this.conditions.isEmpty()))?this.getConditions():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "conditions", theConditions), currentHashCode, theConditions);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
