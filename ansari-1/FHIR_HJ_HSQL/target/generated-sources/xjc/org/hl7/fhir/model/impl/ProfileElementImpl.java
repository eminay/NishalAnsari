//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.ProfileDefinition;
import org.hl7.fhir.model.ProfileElement;
import org.hl7.fhir.model.ProfileSlicing;
import org.hl7.fhir.model.PropertyRepresentation;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile.Element", propOrder = {
    "path",
    "representations",
    "name",
    "slicing",
    "definition"
})
public class ProfileElementImpl
    extends BackboneElementImpl
    implements Serializable, ProfileElement, Equals, HashCode
{

    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl path;
    @XmlElement(name = "representation", type = PropertyRepresentationImpl.class)
    protected List<PropertyRepresentation> representations;
    @XmlElement(type = StringImpl.class)
    protected StringImpl name;
    @XmlElement(type = ProfileSlicingImpl.class)
    protected ProfileSlicingImpl slicing;
    @XmlElement(type = ProfileDefinitionImpl.class)
    protected ProfileDefinitionImpl definition;

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "PATH__PROFILEELEMENT_HJID")
    public org.hl7.fhir.model.String getPath() {
        return path;
    }

    public void setPath(org.hl7.fhir.model.String value) {
        this.path = ((StringImpl) value);
    }

    @OneToMany(targetEntity = PropertyRepresentation.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "REPRESENTATIONS_PROFILEELEME_0")
    public List<PropertyRepresentation> getRepresentations() {
        if (representations == null) {
            representations = new ArrayList<PropertyRepresentation>();
        }
        return this.representations;
    }

    public void setRepresentations(List<PropertyRepresentation> representations) {
        this.representations = representations;
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "NAME__PROFILEELEMENT_HJID")
    public org.hl7.fhir.model.String getName() {
        return name;
    }

    public void setName(org.hl7.fhir.model.String value) {
        this.name = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = ProfileSlicing.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SLICING_PROFILEELEMENT_HJID")
    public ProfileSlicing getSlicing() {
        return slicing;
    }

    public void setSlicing(ProfileSlicing value) {
        this.slicing = ((ProfileSlicingImpl) value);
    }

    @ManyToOne(targetEntity = ProfileDefinition.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DEFINITION_PROFILEELEMENT_HJ_0")
    public ProfileDefinition getDefinition() {
        return definition;
    }

    public void setDefinition(ProfileDefinition value) {
        this.definition = ((ProfileDefinitionImpl) value);
    }

    public ProfileElementImpl withPath(org.hl7.fhir.model.String value) {
        setPath(value);
        return this;
    }

    public ProfileElementImpl withRepresentations(PropertyRepresentation... values) {
        if (values!= null) {
            for (PropertyRepresentation value: values) {
                getRepresentations().add(value);
            }
        }
        return this;
    }

    public ProfileElementImpl withRepresentations(Collection<PropertyRepresentation> values) {
        if (values!= null) {
            getRepresentations().addAll(values);
        }
        return this;
    }

    public ProfileElementImpl withRepresentations(List<PropertyRepresentation> representations) {
        setRepresentations(representations);
        return this;
    }

    public ProfileElementImpl withName(org.hl7.fhir.model.String value) {
        setName(value);
        return this;
    }

    public ProfileElementImpl withSlicing(ProfileSlicing value) {
        setSlicing(value);
        return this;
    }

    public ProfileElementImpl withDefinition(ProfileDefinition value) {
        setDefinition(value);
        return this;
    }

    @Override
    public ProfileElementImpl withModifierExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getModifierExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileElementImpl withModifierExtensions(Collection<Extension> values) {
        if (values!= null) {
            getModifierExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileElementImpl withModifierExtensions(List<Extension> modifierExtensions) {
        setModifierExtensions(modifierExtensions);
        return this;
    }

    @Override
    public ProfileElementImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public ProfileElementImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public ProfileElementImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public ProfileElementImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ProfileElementImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final ProfileElementImpl that = ((ProfileElementImpl) object);
        {
            org.hl7.fhir.model.String lhsPath;
            lhsPath = this.getPath();
            org.hl7.fhir.model.String rhsPath;
            rhsPath = that.getPath();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "path", lhsPath), LocatorUtils.property(thatLocator, "path", rhsPath), lhsPath, rhsPath)) {
                return false;
            }
        }
        {
            List<PropertyRepresentation> lhsRepresentations;
            lhsRepresentations = (((this.representations!= null)&&(!this.representations.isEmpty()))?this.getRepresentations():null);
            List<PropertyRepresentation> rhsRepresentations;
            rhsRepresentations = (((that.representations!= null)&&(!that.representations.isEmpty()))?that.getRepresentations():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "representations", lhsRepresentations), LocatorUtils.property(thatLocator, "representations", rhsRepresentations), lhsRepresentations, rhsRepresentations)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsName;
            lhsName = this.getName();
            org.hl7.fhir.model.String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            ProfileSlicing lhsSlicing;
            lhsSlicing = this.getSlicing();
            ProfileSlicing rhsSlicing;
            rhsSlicing = that.getSlicing();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "slicing", lhsSlicing), LocatorUtils.property(thatLocator, "slicing", rhsSlicing), lhsSlicing, rhsSlicing)) {
                return false;
            }
        }
        {
            ProfileDefinition lhsDefinition;
            lhsDefinition = this.getDefinition();
            ProfileDefinition rhsDefinition;
            rhsDefinition = that.getDefinition();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "definition", lhsDefinition), LocatorUtils.property(thatLocator, "definition", rhsDefinition), lhsDefinition, rhsDefinition)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            org.hl7.fhir.model.String thePath;
            thePath = this.getPath();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "path", thePath), currentHashCode, thePath);
        }
        {
            List<PropertyRepresentation> theRepresentations;
            theRepresentations = (((this.representations!= null)&&(!this.representations.isEmpty()))?this.getRepresentations():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "representations", theRepresentations), currentHashCode, theRepresentations);
        }
        {
            org.hl7.fhir.model.String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            ProfileSlicing theSlicing;
            theSlicing = this.getSlicing();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "slicing", theSlicing), currentHashCode, theSlicing);
        }
        {
            ProfileDefinition theDefinition;
            theDefinition = this.getDefinition();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "definition", theDefinition), currentHashCode, theDefinition);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
