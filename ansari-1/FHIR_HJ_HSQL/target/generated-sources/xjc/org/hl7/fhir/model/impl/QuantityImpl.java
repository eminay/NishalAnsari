//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.Decimal;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.Quantity;
import org.hl7.fhir.model.QuantityCompararator;
import org.hl7.fhir.model.Uri;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Quantity", propOrder = {
    "value",
    "comparator",
    "units",
    "system",
    "code"
})
@XmlSeeAlso({
    AgeImpl.class,
    TimeDurationImpl.class,
    MoneyImpl.class,
    DistanceImpl.class,
    CountImpl.class
})
public class QuantityImpl
    extends ElementImpl
    implements Serializable, Quantity, Equals, HashCode
{

    @XmlElement(type = DecimalImpl.class)
    protected DecimalImpl value;
    @XmlElement(type = QuantityCompararatorImpl.class)
    protected QuantityCompararatorImpl comparator;
    @XmlElement(type = StringImpl.class)
    protected StringImpl units;
    @XmlElement(type = UriImpl.class)
    protected UriImpl system;
    @XmlElement(type = CodeImpl.class)
    protected CodeImpl code;

    @ManyToOne(targetEntity = Decimal.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "VALUE__QUANTITY_HJID")
    public Decimal getValue() {
        return value;
    }

    public void setValue(Decimal value) {
        this.value = ((DecimalImpl) value);
    }

    @ManyToOne(targetEntity = QuantityCompararator.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "COMPARATOR_QUANTITY_HJID")
    public QuantityCompararator getComparator() {
        return comparator;
    }

    public void setComparator(QuantityCompararator value) {
        this.comparator = ((QuantityCompararatorImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "UNITS_QUANTITY_HJID")
    public org.hl7.fhir.model.String getUnits() {
        return units;
    }

    public void setUnits(org.hl7.fhir.model.String value) {
        this.units = ((StringImpl) value);
    }

    @ManyToOne(targetEntity = Uri.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SYSTEM__QUANTITY_HJID")
    public Uri getSystem() {
        return system;
    }

    public void setSystem(Uri value) {
        this.system = ((UriImpl) value);
    }

    @ManyToOne(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CODE_QUANTITY_HJID")
    public Code getCode() {
        return code;
    }

    public void setCode(Code value) {
        this.code = ((CodeImpl) value);
    }

    public QuantityImpl withValue(Decimal value) {
        setValue(value);
        return this;
    }

    public QuantityImpl withComparator(QuantityCompararator value) {
        setComparator(value);
        return this;
    }

    public QuantityImpl withUnits(org.hl7.fhir.model.String value) {
        setUnits(value);
        return this;
    }

    public QuantityImpl withSystem(Uri value) {
        setSystem(value);
        return this;
    }

    public QuantityImpl withCode(Code value) {
        setCode(value);
        return this;
    }

    @Override
    public QuantityImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public QuantityImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public QuantityImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public QuantityImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof QuantityImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final QuantityImpl that = ((QuantityImpl) object);
        {
            Decimal lhsValue;
            lhsValue = this.getValue();
            Decimal rhsValue;
            rhsValue = that.getValue();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "value", lhsValue), LocatorUtils.property(thatLocator, "value", rhsValue), lhsValue, rhsValue)) {
                return false;
            }
        }
        {
            QuantityCompararator lhsComparator;
            lhsComparator = this.getComparator();
            QuantityCompararator rhsComparator;
            rhsComparator = that.getComparator();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "comparator", lhsComparator), LocatorUtils.property(thatLocator, "comparator", rhsComparator), lhsComparator, rhsComparator)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsUnits;
            lhsUnits = this.getUnits();
            org.hl7.fhir.model.String rhsUnits;
            rhsUnits = that.getUnits();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "units", lhsUnits), LocatorUtils.property(thatLocator, "units", rhsUnits), lhsUnits, rhsUnits)) {
                return false;
            }
        }
        {
            Uri lhsSystem;
            lhsSystem = this.getSystem();
            Uri rhsSystem;
            rhsSystem = that.getSystem();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "system", lhsSystem), LocatorUtils.property(thatLocator, "system", rhsSystem), lhsSystem, rhsSystem)) {
                return false;
            }
        }
        {
            Code lhsCode;
            lhsCode = this.getCode();
            Code rhsCode;
            rhsCode = that.getCode();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "code", lhsCode), LocatorUtils.property(thatLocator, "code", rhsCode), lhsCode, rhsCode)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Decimal theValue;
            theValue = this.getValue();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "value", theValue), currentHashCode, theValue);
        }
        {
            QuantityCompararator theComparator;
            theComparator = this.getComparator();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "comparator", theComparator), currentHashCode, theComparator);
        }
        {
            org.hl7.fhir.model.String theUnits;
            theUnits = this.getUnits();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "units", theUnits), currentHashCode, theUnits);
        }
        {
            Uri theSystem;
            theSystem = this.getSystem();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "system", theSystem), currentHashCode, theSystem);
        }
        {
            Code theCode;
            theCode = this.getCode();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "code", theCode), currentHashCode, theCode);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
