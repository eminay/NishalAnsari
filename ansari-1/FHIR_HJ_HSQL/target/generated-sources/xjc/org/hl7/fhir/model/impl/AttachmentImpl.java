//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package org.hl7.fhir.model.impl;

import java.io.Serializable;
import java.util.Collection;
import java.util.List;
import javax.persistence.CascadeType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Attachment;
import org.hl7.fhir.model.Base64Binary;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.Extension;
import org.hl7.fhir.model.Integer;
import org.hl7.fhir.model.Uri;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Attachment", propOrder = {
    "contentType",
    "language",
    "data",
    "url",
    "size",
    "hash",
    "title"
})
public class AttachmentImpl
    extends ElementImpl
    implements Serializable, Attachment, Equals, HashCode
{

    @XmlElement(required = true, type = CodeImpl.class)
    protected CodeImpl contentType;
    @XmlElement(type = CodeImpl.class)
    protected CodeImpl language;
    @XmlElement(type = Base64BinaryImpl.class)
    protected Base64BinaryImpl data;
    @XmlElement(type = UriImpl.class)
    protected UriImpl url;
    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl size;
    @XmlElement(type = Base64BinaryImpl.class)
    protected Base64BinaryImpl hash;
    @XmlElement(type = StringImpl.class)
    protected StringImpl title;

    @ManyToOne(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "CONTENTTYPE_ATTACHMENT_HJID")
    public Code getContentType() {
        return contentType;
    }

    public void setContentType(Code value) {
        this.contentType = ((CodeImpl) value);
    }

    @ManyToOne(targetEntity = Code.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "LANGUAGE__ATTACHMENT_HJID")
    public Code getLanguage() {
        return language;
    }

    public void setLanguage(Code value) {
        this.language = ((CodeImpl) value);
    }

    @ManyToOne(targetEntity = Base64Binary.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "DATA__ATTACHMENT_HJID")
    public Base64Binary getData() {
        return data;
    }

    public void setData(Base64Binary value) {
        this.data = ((Base64BinaryImpl) value);
    }

    @ManyToOne(targetEntity = Uri.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "URL_ATTACHMENT_HJID")
    public Uri getUrl() {
        return url;
    }

    public void setUrl(Uri value) {
        this.url = ((UriImpl) value);
    }

    @ManyToOne(targetEntity = Integer.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "SIZE__ATTACHMENT_HJID")
    public Integer getSize() {
        return size;
    }

    public void setSize(Integer value) {
        this.size = ((IntegerImpl) value);
    }

    @ManyToOne(targetEntity = Base64Binary.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "HASH_ATTACHMENT_HJID")
    public Base64Binary getHash() {
        return hash;
    }

    public void setHash(Base64Binary value) {
        this.hash = ((Base64BinaryImpl) value);
    }

    @ManyToOne(targetEntity = org.hl7.fhir.model.String.class, cascade = {
        CascadeType.ALL
    })
    @JoinColumn(name = "TITLE_ATTACHMENT_HJID")
    public org.hl7.fhir.model.String getTitle() {
        return title;
    }

    public void setTitle(org.hl7.fhir.model.String value) {
        this.title = ((StringImpl) value);
    }

    public AttachmentImpl withContentType(Code value) {
        setContentType(value);
        return this;
    }

    public AttachmentImpl withLanguage(Code value) {
        setLanguage(value);
        return this;
    }

    public AttachmentImpl withData(Base64Binary value) {
        setData(value);
        return this;
    }

    public AttachmentImpl withUrl(Uri value) {
        setUrl(value);
        return this;
    }

    public AttachmentImpl withSize(Integer value) {
        setSize(value);
        return this;
    }

    public AttachmentImpl withHash(Base64Binary value) {
        setHash(value);
        return this;
    }

    public AttachmentImpl withTitle(org.hl7.fhir.model.String value) {
        setTitle(value);
        return this;
    }

    @Override
    public AttachmentImpl withExtensions(Extension... values) {
        if (values!= null) {
            for (Extension value: values) {
                getExtensions().add(value);
            }
        }
        return this;
    }

    @Override
    public AttachmentImpl withExtensions(Collection<Extension> values) {
        if (values!= null) {
            getExtensions().addAll(values);
        }
        return this;
    }

    @Override
    public AttachmentImpl withExtensions(List<Extension> extensions) {
        setExtensions(extensions);
        return this;
    }

    @Override
    public AttachmentImpl withId(java.lang.String value) {
        setId(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof AttachmentImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        if (!super.equals(thisLocator, thatLocator, object, strategy)) {
            return false;
        }
        final AttachmentImpl that = ((AttachmentImpl) object);
        {
            Code lhsContentType;
            lhsContentType = this.getContentType();
            Code rhsContentType;
            rhsContentType = that.getContentType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "contentType", lhsContentType), LocatorUtils.property(thatLocator, "contentType", rhsContentType), lhsContentType, rhsContentType)) {
                return false;
            }
        }
        {
            Code lhsLanguage;
            lhsLanguage = this.getLanguage();
            Code rhsLanguage;
            rhsLanguage = that.getLanguage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "language", lhsLanguage), LocatorUtils.property(thatLocator, "language", rhsLanguage), lhsLanguage, rhsLanguage)) {
                return false;
            }
        }
        {
            Base64Binary lhsData;
            lhsData = this.getData();
            Base64Binary rhsData;
            rhsData = that.getData();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "data", lhsData), LocatorUtils.property(thatLocator, "data", rhsData), lhsData, rhsData)) {
                return false;
            }
        }
        {
            Uri lhsUrl;
            lhsUrl = this.getUrl();
            Uri rhsUrl;
            rhsUrl = that.getUrl();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "url", lhsUrl), LocatorUtils.property(thatLocator, "url", rhsUrl), lhsUrl, rhsUrl)) {
                return false;
            }
        }
        {
            Integer lhsSize;
            lhsSize = this.getSize();
            Integer rhsSize;
            rhsSize = that.getSize();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "size", lhsSize), LocatorUtils.property(thatLocator, "size", rhsSize), lhsSize, rhsSize)) {
                return false;
            }
        }
        {
            Base64Binary lhsHash;
            lhsHash = this.getHash();
            Base64Binary rhsHash;
            rhsHash = that.getHash();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "hash", lhsHash), LocatorUtils.property(thatLocator, "hash", rhsHash), lhsHash, rhsHash)) {
                return false;
            }
        }
        {
            org.hl7.fhir.model.String lhsTitle;
            lhsTitle = this.getTitle();
            org.hl7.fhir.model.String rhsTitle;
            rhsTitle = that.getTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTitle), LocatorUtils.property(thatLocator, "title", rhsTitle), lhsTitle, rhsTitle)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = super.hashCode(locator, strategy);
        {
            Code theContentType;
            theContentType = this.getContentType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "contentType", theContentType), currentHashCode, theContentType);
        }
        {
            Code theLanguage;
            theLanguage = this.getLanguage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "language", theLanguage), currentHashCode, theLanguage);
        }
        {
            Base64Binary theData;
            theData = this.getData();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "data", theData), currentHashCode, theData);
        }
        {
            Uri theUrl;
            theUrl = this.getUrl();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "url", theUrl), currentHashCode, theUrl);
        }
        {
            Integer theSize;
            theSize = this.getSize();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "size", theSize), currentHashCode, theSize);
        }
        {
            Base64Binary theHash;
            theHash = this.getHash();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "hash", theHash), currentHashCode, theHash);
        }
        {
            org.hl7.fhir.model.String theTitle;
            theTitle = this.getTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTitle), currentHashCode, theTitle);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
