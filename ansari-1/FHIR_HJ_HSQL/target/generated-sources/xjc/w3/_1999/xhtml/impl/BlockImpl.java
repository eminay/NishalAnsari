//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package w3._1999.xhtml.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import w3._1999.xhtml.Block;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Block", propOrder = {
    "psAndH1SAndH2S"
})
@XmlSeeAlso({
    BlockquoteImpl.class
})
public class BlockImpl implements Serializable, Equals, HashCode, Block
{

    @XmlElements({
        @XmlElement(name = "p", type = PImpl.class),
        @XmlElement(name = "h1", type = H1Impl.class),
        @XmlElement(name = "h2", type = H2Impl.class),
        @XmlElement(name = "h3", type = H3Impl.class),
        @XmlElement(name = "h4", type = H4Impl.class),
        @XmlElement(name = "h5", type = H5Impl.class),
        @XmlElement(name = "h6", type = H6Impl.class),
        @XmlElement(name = "div", type = DivImpl.class),
        @XmlElement(name = "ul", type = UlImpl.class),
        @XmlElement(name = "ol", type = OlImpl.class),
        @XmlElement(name = "dl", type = DlImpl.class),
        @XmlElement(name = "pre", type = PreImpl.class),
        @XmlElement(name = "hr", type = HrImpl.class),
        @XmlElement(name = "blockquote", type = BlockquoteImpl.class),
        @XmlElement(name = "table", type = TableImpl.class)
    })
    protected List<Object> psAndH1SAndH2S;

    public List<Object> getPSAndH1SAndH2S() {
        if (psAndH1SAndH2S == null) {
            psAndH1SAndH2S = new ArrayList<Object>();
        }
        return this.psAndH1SAndH2S;
    }

    public void setPSAndH1SAndH2S(List<Object> psAndH1SAndH2S) {
        this.psAndH1SAndH2S = psAndH1SAndH2S;
    }

    public BlockImpl withPSAndH1SAndH2S(Object... values) {
        if (values!= null) {
            for (Object value: values) {
                getPSAndH1SAndH2S().add(value);
            }
        }
        return this;
    }

    public BlockImpl withPSAndH1SAndH2S(Collection<Object> values) {
        if (values!= null) {
            getPSAndH1SAndH2S().addAll(values);
        }
        return this;
    }

    public BlockImpl withPSAndH1SAndH2S(List<Object> psAndH1SAndH2S) {
        setPSAndH1SAndH2S(psAndH1SAndH2S);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof BlockImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final BlockImpl that = ((BlockImpl) object);
        {
            List<Object> lhsPSAndH1SAndH2S;
            lhsPSAndH1SAndH2S = (((this.psAndH1SAndH2S!= null)&&(!this.psAndH1SAndH2S.isEmpty()))?this.getPSAndH1SAndH2S():null);
            List<Object> rhsPSAndH1SAndH2S;
            rhsPSAndH1SAndH2S = (((that.psAndH1SAndH2S!= null)&&(!that.psAndH1SAndH2S.isEmpty()))?that.getPSAndH1SAndH2S():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "psAndH1SAndH2S", lhsPSAndH1SAndH2S), LocatorUtils.property(thatLocator, "psAndH1SAndH2S", rhsPSAndH1SAndH2S), lhsPSAndH1SAndH2S, rhsPSAndH1SAndH2S)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<Object> thePSAndH1SAndH2S;
            thePSAndH1SAndH2S = (((this.psAndH1SAndH2S!= null)&&(!this.psAndH1SAndH2S.isEmpty()))?this.getPSAndH1SAndH2S():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "psAndH1SAndH2S", thePSAndH1SAndH2S), currentHashCode, thePSAndH1SAndH2S);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
