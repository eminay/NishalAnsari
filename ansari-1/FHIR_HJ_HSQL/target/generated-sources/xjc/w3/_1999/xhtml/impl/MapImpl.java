//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package w3._1999.xhtml.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlElements;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import w3._1999.xhtml.Area;
import w3._1999.xhtml.Map;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "", propOrder = {
    "areas",
    "psAndH1SAndH2S"
})
@XmlRootElement(name = "map")
public class MapImpl implements Serializable, Equals, HashCode, Map
{

    @XmlElement(name = "area", type = AreaImpl.class)
    protected List<Area> areas;
    @XmlElements({
        @XmlElement(name = "p", type = PImpl.class),
        @XmlElement(name = "h1", type = H1Impl.class),
        @XmlElement(name = "h2", type = H2Impl.class),
        @XmlElement(name = "h3", type = H3Impl.class),
        @XmlElement(name = "h4", type = H4Impl.class),
        @XmlElement(name = "h5", type = H5Impl.class),
        @XmlElement(name = "h6", type = H6Impl.class),
        @XmlElement(name = "div", type = DivImpl.class),
        @XmlElement(name = "ul", type = UlImpl.class),
        @XmlElement(name = "ol", type = OlImpl.class),
        @XmlElement(name = "dl", type = DlImpl.class),
        @XmlElement(name = "pre", type = PreImpl.class),
        @XmlElement(name = "hr", type = HrImpl.class),
        @XmlElement(name = "blockquote", type = BlockquoteImpl.class),
        @XmlElement(name = "table", type = TableImpl.class)
    })
    protected List<Object> psAndH1SAndH2S;
    @XmlAttribute(name = "id", required = true)
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlAttribute(name = "class")
    @XmlSchemaType(name = "anySimpleType")
    protected String clazz;
    @XmlAttribute(name = "style")
    protected String style;
    @XmlAttribute(name = "title")
    protected String title;
    @XmlAttribute(name = "name")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlSchemaType(name = "NMTOKEN")
    protected String name;
    @XmlAttribute(name = "lang")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String language;
    @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
    protected String lang;
    @XmlAttribute(name = "dir")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String dir;

    public List<Area> getAreas() {
        if (areas == null) {
            areas = new ArrayList<Area>();
        }
        return this.areas;
    }

    public void setAreas(List<Area> areas) {
        this.areas = areas;
    }

    public List<Object> getPSAndH1SAndH2S() {
        if (psAndH1SAndH2S == null) {
            psAndH1SAndH2S = new ArrayList<Object>();
        }
        return this.psAndH1SAndH2S;
    }

    public void setPSAndH1SAndH2S(List<Object> psAndH1SAndH2S) {
        this.psAndH1SAndH2S = psAndH1SAndH2S;
    }

    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

    public String getClazz() {
        return clazz;
    }

    public void setClazz(String value) {
        this.clazz = value;
    }

    public String getStyle() {
        return style;
    }

    public void setStyle(String value) {
        this.style = value;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String value) {
        this.title = value;
    }

    public String getName() {
        return name;
    }

    public void setName(String value) {
        this.name = value;
    }

    public String getLanguage() {
        return language;
    }

    public void setLanguage(String value) {
        this.language = value;
    }

    public String getLang() {
        return lang;
    }

    public void setLang(String value) {
        this.lang = value;
    }

    public String getDir() {
        return dir;
    }

    public void setDir(String value) {
        this.dir = value;
    }

    public MapImpl withAreas(Area... values) {
        if (values!= null) {
            for (Area value: values) {
                getAreas().add(value);
            }
        }
        return this;
    }

    public MapImpl withAreas(Collection<Area> values) {
        if (values!= null) {
            getAreas().addAll(values);
        }
        return this;
    }

    public MapImpl withAreas(List<Area> areas) {
        setAreas(areas);
        return this;
    }

    public MapImpl withPSAndH1SAndH2S(Object... values) {
        if (values!= null) {
            for (Object value: values) {
                getPSAndH1SAndH2S().add(value);
            }
        }
        return this;
    }

    public MapImpl withPSAndH1SAndH2S(Collection<Object> values) {
        if (values!= null) {
            getPSAndH1SAndH2S().addAll(values);
        }
        return this;
    }

    public MapImpl withPSAndH1SAndH2S(List<Object> psAndH1SAndH2S) {
        setPSAndH1SAndH2S(psAndH1SAndH2S);
        return this;
    }

    public MapImpl withId(String value) {
        setId(value);
        return this;
    }

    public MapImpl withClazz(String value) {
        setClazz(value);
        return this;
    }

    public MapImpl withStyle(String value) {
        setStyle(value);
        return this;
    }

    public MapImpl withTitle(String value) {
        setTitle(value);
        return this;
    }

    public MapImpl withName(String value) {
        setName(value);
        return this;
    }

    public MapImpl withLanguage(String value) {
        setLanguage(value);
        return this;
    }

    public MapImpl withLang(String value) {
        setLang(value);
        return this;
    }

    public MapImpl withDir(String value) {
        setDir(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof MapImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final MapImpl that = ((MapImpl) object);
        {
            List<Area> lhsAreas;
            lhsAreas = (((this.areas!= null)&&(!this.areas.isEmpty()))?this.getAreas():null);
            List<Area> rhsAreas;
            rhsAreas = (((that.areas!= null)&&(!that.areas.isEmpty()))?that.getAreas():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "areas", lhsAreas), LocatorUtils.property(thatLocator, "areas", rhsAreas), lhsAreas, rhsAreas)) {
                return false;
            }
        }
        {
            List<Object> lhsPSAndH1SAndH2S;
            lhsPSAndH1SAndH2S = (((this.psAndH1SAndH2S!= null)&&(!this.psAndH1SAndH2S.isEmpty()))?this.getPSAndH1SAndH2S():null);
            List<Object> rhsPSAndH1SAndH2S;
            rhsPSAndH1SAndH2S = (((that.psAndH1SAndH2S!= null)&&(!that.psAndH1SAndH2S.isEmpty()))?that.getPSAndH1SAndH2S():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "psAndH1SAndH2S", lhsPSAndH1SAndH2S), LocatorUtils.property(thatLocator, "psAndH1SAndH2S", rhsPSAndH1SAndH2S), lhsPSAndH1SAndH2S, rhsPSAndH1SAndH2S)) {
                return false;
            }
        }
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            String lhsClazz;
            lhsClazz = this.getClazz();
            String rhsClazz;
            rhsClazz = that.getClazz();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "clazz", lhsClazz), LocatorUtils.property(thatLocator, "clazz", rhsClazz), lhsClazz, rhsClazz)) {
                return false;
            }
        }
        {
            String lhsStyle;
            lhsStyle = this.getStyle();
            String rhsStyle;
            rhsStyle = that.getStyle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "style", lhsStyle), LocatorUtils.property(thatLocator, "style", rhsStyle), lhsStyle, rhsStyle)) {
                return false;
            }
        }
        {
            String lhsTitle;
            lhsTitle = this.getTitle();
            String rhsTitle;
            rhsTitle = that.getTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTitle), LocatorUtils.property(thatLocator, "title", rhsTitle), lhsTitle, rhsTitle)) {
                return false;
            }
        }
        {
            String lhsName;
            lhsName = this.getName();
            String rhsName;
            rhsName = that.getName();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "name", lhsName), LocatorUtils.property(thatLocator, "name", rhsName), lhsName, rhsName)) {
                return false;
            }
        }
        {
            String lhsLanguage;
            lhsLanguage = this.getLanguage();
            String rhsLanguage;
            rhsLanguage = that.getLanguage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "language", lhsLanguage), LocatorUtils.property(thatLocator, "language", rhsLanguage), lhsLanguage, rhsLanguage)) {
                return false;
            }
        }
        {
            String lhsLang;
            lhsLang = this.getLang();
            String rhsLang;
            rhsLang = that.getLang();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lang", lhsLang), LocatorUtils.property(thatLocator, "lang", rhsLang), lhsLang, rhsLang)) {
                return false;
            }
        }
        {
            String lhsDir;
            lhsDir = this.getDir();
            String rhsDir;
            rhsDir = that.getDir();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dir", lhsDir), LocatorUtils.property(thatLocator, "dir", rhsDir), lhsDir, rhsDir)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            List<Area> theAreas;
            theAreas = (((this.areas!= null)&&(!this.areas.isEmpty()))?this.getAreas():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "areas", theAreas), currentHashCode, theAreas);
        }
        {
            List<Object> thePSAndH1SAndH2S;
            thePSAndH1SAndH2S = (((this.psAndH1SAndH2S!= null)&&(!this.psAndH1SAndH2S.isEmpty()))?this.getPSAndH1SAndH2S():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "psAndH1SAndH2S", thePSAndH1SAndH2S), currentHashCode, thePSAndH1SAndH2S);
        }
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            String theClazz;
            theClazz = this.getClazz();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "clazz", theClazz), currentHashCode, theClazz);
        }
        {
            String theStyle;
            theStyle = this.getStyle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "style", theStyle), currentHashCode, theStyle);
        }
        {
            String theTitle;
            theTitle = this.getTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTitle), currentHashCode, theTitle);
        }
        {
            String theName;
            theName = this.getName();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "name", theName), currentHashCode, theName);
        }
        {
            String theLanguage;
            theLanguage = this.getLanguage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "language", theLanguage), currentHashCode, theLanguage);
        }
        {
            String theLang;
            theLang = this.getLang();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lang", theLang), currentHashCode, theLang);
        }
        {
            String theDir;
            theDir = this.getDir();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dir", theDir), currentHashCode, theDir);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
