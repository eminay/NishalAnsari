//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 10:05:24 PM MST 
//


package w3._1999.xhtml.impl;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Collection;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlAttribute;
import javax.xml.bind.annotation.XmlID;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlSchemaType;
import javax.xml.bind.annotation.XmlType;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;
import w3._1999.xhtml.Img;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "")
@XmlRootElement(name = "img")
public class ImgImpl implements Serializable, Equals, HashCode, Img
{

    @XmlAttribute(name = "src", required = true)
    protected String src;
    @XmlAttribute(name = "alt", required = true)
    protected String alt;
    @XmlAttribute(name = "longdesc")
    protected String longdesc;
    @XmlAttribute(name = "height")
    protected String height;
    @XmlAttribute(name = "width")
    protected String width;
    @XmlAttribute(name = "usemap")
    protected String usemap;
    @XmlAttribute(name = "ismap")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String ismap;
    @XmlAttribute(name = "lang")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String language;
    @XmlAttribute(name = "lang", namespace = "http://www.w3.org/XML/1998/namespace")
    protected String lang;
    @XmlAttribute(name = "dir")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    protected String dir;
    @XmlAttribute(name = "id")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    @XmlID
    @XmlSchemaType(name = "ID")
    protected String id;
    @XmlAttribute(name = "class")
    protected List<String> clazzs;
    @XmlAttribute(name = "style")
    protected String style;
    @XmlAttribute(name = "title")
    protected String title;

    public String getSrc() {
        return src;
    }

    public void setSrc(String value) {
        this.src = value;
    }

    public String getAlt() {
        return alt;
    }

    public void setAlt(String value) {
        this.alt = value;
    }

    public String getLongdesc() {
        return longdesc;
    }

    public void setLongdesc(String value) {
        this.longdesc = value;
    }

    public String getHeight() {
        return height;
    }

    public void setHeight(String value) {
        this.height = value;
    }

    public String getWidth() {
        return width;
    }

    public void setWidth(String value) {
        this.width = value;
    }

    public String getUsemap() {
        return usemap;
    }

    public void setUsemap(String value) {
        this.usemap = value;
    }

    public String getIsmap() {
        return ismap;
    }

    public void setIsmap(String value) {
        this.ismap = value;
    }

    public String getLanguage() {
        return language;
    }

    public void setLanguage(String value) {
        this.language = value;
    }

    public String getLang() {
        return lang;
    }

    public void setLang(String value) {
        this.lang = value;
    }

    public String getDir() {
        return dir;
    }

    public void setDir(String value) {
        this.dir = value;
    }

    public String getId() {
        return id;
    }

    public void setId(String value) {
        this.id = value;
    }

    public List<String> getClazzs() {
        if (clazzs == null) {
            clazzs = new ArrayList<String>();
        }
        return this.clazzs;
    }

    public void setClazzs(List<String> clazzs) {
        this.clazzs = clazzs;
    }

    public String getStyle() {
        return style;
    }

    public void setStyle(String value) {
        this.style = value;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String value) {
        this.title = value;
    }

    public ImgImpl withSrc(String value) {
        setSrc(value);
        return this;
    }

    public ImgImpl withAlt(String value) {
        setAlt(value);
        return this;
    }

    public ImgImpl withLongdesc(String value) {
        setLongdesc(value);
        return this;
    }

    public ImgImpl withHeight(String value) {
        setHeight(value);
        return this;
    }

    public ImgImpl withWidth(String value) {
        setWidth(value);
        return this;
    }

    public ImgImpl withUsemap(String value) {
        setUsemap(value);
        return this;
    }

    public ImgImpl withIsmap(String value) {
        setIsmap(value);
        return this;
    }

    public ImgImpl withLanguage(String value) {
        setLanguage(value);
        return this;
    }

    public ImgImpl withLang(String value) {
        setLang(value);
        return this;
    }

    public ImgImpl withDir(String value) {
        setDir(value);
        return this;
    }

    public ImgImpl withId(String value) {
        setId(value);
        return this;
    }

    public ImgImpl withClazzs(String... values) {
        if (values!= null) {
            for (String value: values) {
                getClazzs().add(value);
            }
        }
        return this;
    }

    public ImgImpl withClazzs(Collection<String> values) {
        if (values!= null) {
            getClazzs().addAll(values);
        }
        return this;
    }

    public ImgImpl withClazzs(List<String> clazzs) {
        setClazzs(clazzs);
        return this;
    }

    public ImgImpl withStyle(String value) {
        setStyle(value);
        return this;
    }

    public ImgImpl withTitle(String value) {
        setTitle(value);
        return this;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof ImgImpl)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final ImgImpl that = ((ImgImpl) object);
        {
            String lhsSrc;
            lhsSrc = this.getSrc();
            String rhsSrc;
            rhsSrc = that.getSrc();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "src", lhsSrc), LocatorUtils.property(thatLocator, "src", rhsSrc), lhsSrc, rhsSrc)) {
                return false;
            }
        }
        {
            String lhsAlt;
            lhsAlt = this.getAlt();
            String rhsAlt;
            rhsAlt = that.getAlt();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "alt", lhsAlt), LocatorUtils.property(thatLocator, "alt", rhsAlt), lhsAlt, rhsAlt)) {
                return false;
            }
        }
        {
            String lhsLongdesc;
            lhsLongdesc = this.getLongdesc();
            String rhsLongdesc;
            rhsLongdesc = that.getLongdesc();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "longdesc", lhsLongdesc), LocatorUtils.property(thatLocator, "longdesc", rhsLongdesc), lhsLongdesc, rhsLongdesc)) {
                return false;
            }
        }
        {
            String lhsHeight;
            lhsHeight = this.getHeight();
            String rhsHeight;
            rhsHeight = that.getHeight();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "height", lhsHeight), LocatorUtils.property(thatLocator, "height", rhsHeight), lhsHeight, rhsHeight)) {
                return false;
            }
        }
        {
            String lhsWidth;
            lhsWidth = this.getWidth();
            String rhsWidth;
            rhsWidth = that.getWidth();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "width", lhsWidth), LocatorUtils.property(thatLocator, "width", rhsWidth), lhsWidth, rhsWidth)) {
                return false;
            }
        }
        {
            String lhsUsemap;
            lhsUsemap = this.getUsemap();
            String rhsUsemap;
            rhsUsemap = that.getUsemap();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "usemap", lhsUsemap), LocatorUtils.property(thatLocator, "usemap", rhsUsemap), lhsUsemap, rhsUsemap)) {
                return false;
            }
        }
        {
            String lhsIsmap;
            lhsIsmap = this.getIsmap();
            String rhsIsmap;
            rhsIsmap = that.getIsmap();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "ismap", lhsIsmap), LocatorUtils.property(thatLocator, "ismap", rhsIsmap), lhsIsmap, rhsIsmap)) {
                return false;
            }
        }
        {
            String lhsLanguage;
            lhsLanguage = this.getLanguage();
            String rhsLanguage;
            rhsLanguage = that.getLanguage();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "language", lhsLanguage), LocatorUtils.property(thatLocator, "language", rhsLanguage), lhsLanguage, rhsLanguage)) {
                return false;
            }
        }
        {
            String lhsLang;
            lhsLang = this.getLang();
            String rhsLang;
            rhsLang = that.getLang();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "lang", lhsLang), LocatorUtils.property(thatLocator, "lang", rhsLang), lhsLang, rhsLang)) {
                return false;
            }
        }
        {
            String lhsDir;
            lhsDir = this.getDir();
            String rhsDir;
            rhsDir = that.getDir();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "dir", lhsDir), LocatorUtils.property(thatLocator, "dir", rhsDir), lhsDir, rhsDir)) {
                return false;
            }
        }
        {
            String lhsId;
            lhsId = this.getId();
            String rhsId;
            rhsId = that.getId();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            List<String> lhsClazzs;
            lhsClazzs = (((this.clazzs!= null)&&(!this.clazzs.isEmpty()))?this.getClazzs():null);
            List<String> rhsClazzs;
            rhsClazzs = (((that.clazzs!= null)&&(!that.clazzs.isEmpty()))?that.getClazzs():null);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "clazzs", lhsClazzs), LocatorUtils.property(thatLocator, "clazzs", rhsClazzs), lhsClazzs, rhsClazzs)) {
                return false;
            }
        }
        {
            String lhsStyle;
            lhsStyle = this.getStyle();
            String rhsStyle;
            rhsStyle = that.getStyle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "style", lhsStyle), LocatorUtils.property(thatLocator, "style", rhsStyle), lhsStyle, rhsStyle)) {
                return false;
            }
        }
        {
            String lhsTitle;
            lhsTitle = this.getTitle();
            String rhsTitle;
            rhsTitle = that.getTitle();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "title", lhsTitle), LocatorUtils.property(thatLocator, "title", rhsTitle), lhsTitle, rhsTitle)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            String theSrc;
            theSrc = this.getSrc();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "src", theSrc), currentHashCode, theSrc);
        }
        {
            String theAlt;
            theAlt = this.getAlt();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "alt", theAlt), currentHashCode, theAlt);
        }
        {
            String theLongdesc;
            theLongdesc = this.getLongdesc();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "longdesc", theLongdesc), currentHashCode, theLongdesc);
        }
        {
            String theHeight;
            theHeight = this.getHeight();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "height", theHeight), currentHashCode, theHeight);
        }
        {
            String theWidth;
            theWidth = this.getWidth();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "width", theWidth), currentHashCode, theWidth);
        }
        {
            String theUsemap;
            theUsemap = this.getUsemap();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "usemap", theUsemap), currentHashCode, theUsemap);
        }
        {
            String theIsmap;
            theIsmap = this.getIsmap();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "ismap", theIsmap), currentHashCode, theIsmap);
        }
        {
            String theLanguage;
            theLanguage = this.getLanguage();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "language", theLanguage), currentHashCode, theLanguage);
        }
        {
            String theLang;
            theLang = this.getLang();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "lang", theLang), currentHashCode, theLang);
        }
        {
            String theDir;
            theDir = this.getDir();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "dir", theDir), currentHashCode, theDir);
        }
        {
            String theId;
            theId = this.getId();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            List<String> theClazzs;
            theClazzs = (((this.clazzs!= null)&&(!this.clazzs.isEmpty()))?this.getClazzs():null);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "clazzs", theClazzs), currentHashCode, theClazzs);
        }
        {
            String theStyle;
            theStyle = this.getStyle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "style", theStyle), currentHashCode, theStyle);
        }
        {
            String theTitle;
            theTitle = this.getTitle();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "title", theTitle), currentHashCode, theTitle);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
