//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.Coding;
import org.hl7.fhir.model.Contact;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.Id;
import org.hl7.fhir.model.Profile;
import org.hl7.fhir.model.ProfileExtensionDefn;
import org.hl7.fhir.model.ProfileMapping;
import org.hl7.fhir.model.ProfileQuery;
import org.hl7.fhir.model.ProfileStructure;
import org.hl7.fhir.model.ResourceProfileStatus;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile", propOrder = {
    "identifier",
    "version",
    "name",
    "publisher",
    "telecoms",
    "description",
    "codes",
    "status",
    "experimental",
    "date",
    "requirements",
    "fhirVersion",
    "mappings",
    "structures",
    "extensionDefns",
    "queries"
})
@XmlRootElement(name = "Profile")
public class ProfileImpl
    extends ResourceImpl
    implements Profile, ToString
{

    @XmlElement(type = StringImpl.class)
    protected StringImpl identifier;
    @XmlElement(type = StringImpl.class)
    protected StringImpl version;
    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl name;
    @XmlElement(type = StringImpl.class)
    protected StringImpl publisher;
    @XmlElement(name = "telecom", type = ContactImpl.class)
    protected List<Contact> telecoms;
    @XmlElement(type = StringImpl.class)
    protected StringImpl description;
    @XmlElement(name = "code", type = CodingImpl.class)
    protected List<Coding> codes;
    @XmlElement(required = true, type = ResourceProfileStatusImpl.class)
    protected ResourceProfileStatusImpl status;
    @XmlElement(type = BooleanImpl.class)
    protected BooleanImpl experimental;
    @XmlElement(type = DateTimeImpl.class)
    protected DateTimeImpl date;
    @XmlElement(type = StringImpl.class)
    protected StringImpl requirements;
    @XmlElement(type = IdImpl.class)
    protected IdImpl fhirVersion;
    @XmlElement(name = "mapping", type = ProfileMappingImpl.class)
    protected List<ProfileMapping> mappings;
    @XmlElement(name = "structure", type = ProfileStructureImpl.class)
    protected List<ProfileStructure> structures;
    @XmlElement(name = "extensionDefn", type = ProfileExtensionDefnImpl.class)
    protected List<ProfileExtensionDefn> extensionDefns;
    @XmlElement(name = "query", type = ProfileQueryImpl.class)
    protected List<ProfileQuery> queries;

    public org.hl7.fhir.model.String getIdentifier() {
        return identifier;
    }

    public void setIdentifier(org.hl7.fhir.model.String value) {
        this.identifier = ((StringImpl) value);
    }

    public org.hl7.fhir.model.String getVersion() {
        return version;
    }

    public void setVersion(org.hl7.fhir.model.String value) {
        this.version = ((StringImpl) value);
    }

    public org.hl7.fhir.model.String getName() {
        return name;
    }

    public void setName(org.hl7.fhir.model.String value) {
        this.name = ((StringImpl) value);
    }

    public org.hl7.fhir.model.String getPublisher() {
        return publisher;
    }

    public void setPublisher(org.hl7.fhir.model.String value) {
        this.publisher = ((StringImpl) value);
    }

    public List<Contact> getTelecoms() {
        if (telecoms == null) {
            telecoms = new ArrayList<Contact>();
        }
        return this.telecoms;
    }

    public org.hl7.fhir.model.String getDescription() {
        return description;
    }

    public void setDescription(org.hl7.fhir.model.String value) {
        this.description = ((StringImpl) value);
    }

    public List<Coding> getCodes() {
        if (codes == null) {
            codes = new ArrayList<Coding>();
        }
        return this.codes;
    }

    public ResourceProfileStatus getStatus() {
        return status;
    }

    public void setStatus(ResourceProfileStatus value) {
        this.status = ((ResourceProfileStatusImpl) value);
    }

    public Boolean getExperimental() {
        return experimental;
    }

    public void setExperimental(Boolean value) {
        this.experimental = ((BooleanImpl) value);
    }

    public DateTime getDate() {
        return date;
    }

    public void setDate(DateTime value) {
        this.date = ((DateTimeImpl) value);
    }

    public org.hl7.fhir.model.String getRequirements() {
        return requirements;
    }

    public void setRequirements(org.hl7.fhir.model.String value) {
        this.requirements = ((StringImpl) value);
    }

    public Id getFhirVersion() {
        return fhirVersion;
    }

    public void setFhirVersion(Id value) {
        this.fhirVersion = ((IdImpl) value);
    }

    public List<ProfileMapping> getMappings() {
        if (mappings == null) {
            mappings = new ArrayList<ProfileMapping>();
        }
        return this.mappings;
    }

    public List<ProfileStructure> getStructures() {
        if (structures == null) {
            structures = new ArrayList<ProfileStructure>();
        }
        return this.structures;
    }

    public List<ProfileExtensionDefn> getExtensionDefns() {
        if (extensionDefns == null) {
            extensionDefns = new ArrayList<ProfileExtensionDefn>();
        }
        return this.extensionDefns;
    }

    public List<ProfileQuery> getQueries() {
        if (queries == null) {
            queries = new ArrayList<ProfileQuery>();
        }
        return this.queries;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            org.hl7.fhir.model.String theIdentifier;
            theIdentifier = this.getIdentifier();
            strategy.appendField(locator, this, "identifier", buffer, theIdentifier);
        }
        {
            org.hl7.fhir.model.String theVersion;
            theVersion = this.getVersion();
            strategy.appendField(locator, this, "version", buffer, theVersion);
        }
        {
            org.hl7.fhir.model.String theName;
            theName = this.getName();
            strategy.appendField(locator, this, "name", buffer, theName);
        }
        {
            org.hl7.fhir.model.String thePublisher;
            thePublisher = this.getPublisher();
            strategy.appendField(locator, this, "publisher", buffer, thePublisher);
        }
        {
            List<Contact> theTelecoms;
            theTelecoms = (((this.telecoms!= null)&&(!this.telecoms.isEmpty()))?this.getTelecoms():null);
            strategy.appendField(locator, this, "telecoms", buffer, theTelecoms);
        }
        {
            org.hl7.fhir.model.String theDescription;
            theDescription = this.getDescription();
            strategy.appendField(locator, this, "description", buffer, theDescription);
        }
        {
            List<Coding> theCodes;
            theCodes = (((this.codes!= null)&&(!this.codes.isEmpty()))?this.getCodes():null);
            strategy.appendField(locator, this, "codes", buffer, theCodes);
        }
        {
            ResourceProfileStatus theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus);
        }
        {
            Boolean theExperimental;
            theExperimental = this.getExperimental();
            strategy.appendField(locator, this, "experimental", buffer, theExperimental);
        }
        {
            DateTime theDate;
            theDate = this.getDate();
            strategy.appendField(locator, this, "date", buffer, theDate);
        }
        {
            org.hl7.fhir.model.String theRequirements;
            theRequirements = this.getRequirements();
            strategy.appendField(locator, this, "requirements", buffer, theRequirements);
        }
        {
            Id theFhirVersion;
            theFhirVersion = this.getFhirVersion();
            strategy.appendField(locator, this, "fhirVersion", buffer, theFhirVersion);
        }
        {
            List<ProfileMapping> theMappings;
            theMappings = (((this.mappings!= null)&&(!this.mappings.isEmpty()))?this.getMappings():null);
            strategy.appendField(locator, this, "mappings", buffer, theMappings);
        }
        {
            List<ProfileStructure> theStructures;
            theStructures = (((this.structures!= null)&&(!this.structures.isEmpty()))?this.getStructures():null);
            strategy.appendField(locator, this, "structures", buffer, theStructures);
        }
        {
            List<ProfileExtensionDefn> theExtensionDefns;
            theExtensionDefns = (((this.extensionDefns!= null)&&(!this.extensionDefns.isEmpty()))?this.getExtensionDefns():null);
            strategy.appendField(locator, this, "extensionDefns", buffer, theExtensionDefns);
        }
        {
            List<ProfileQuery> theQueries;
            theQueries = (((this.queries!= null)&&(!this.queries.isEmpty()))?this.getQueries():null);
            strategy.appendField(locator, this, "queries", buffer, theQueries);
        }
        return buffer;
    }

}
