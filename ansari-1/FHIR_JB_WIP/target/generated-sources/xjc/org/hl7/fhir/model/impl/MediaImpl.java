//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Attachment;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.Identifier;
import org.hl7.fhir.model.Integer;
import org.hl7.fhir.model.Media;
import org.hl7.fhir.model.MediaType;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Media", propOrder = {
    "type",
    "subtype",
    "identifiers",
    "dateTime",
    "subject",
    "operator",
    "view",
    "deviceName",
    "height",
    "width",
    "frames",
    "length",
    "content"
})
@XmlRootElement(name = "Media")
public class MediaImpl
    extends ResourceImpl
    implements Media, ToString
{

    @XmlElement(required = true, type = MediaTypeImpl.class)
    protected MediaTypeImpl type;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl subtype;
    @XmlElement(name = "identifier", type = IdentifierImpl.class)
    protected List<Identifier> identifiers;
    @XmlElement(type = DateTimeImpl.class)
    protected DateTimeImpl dateTime;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl subject;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl operator;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl view;
    @XmlElement(type = StringImpl.class)
    protected StringImpl deviceName;
    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl height;
    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl width;
    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl frames;
    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl length;
    @XmlElement(required = true, type = AttachmentImpl.class)
    protected AttachmentImpl content;

    public MediaType getType() {
        return type;
    }

    public void setType(MediaType value) {
        this.type = ((MediaTypeImpl) value);
    }

    public CodeableConcept getSubtype() {
        return subtype;
    }

    public void setSubtype(CodeableConcept value) {
        this.subtype = ((CodeableConceptImpl) value);
    }

    public List<Identifier> getIdentifiers() {
        if (identifiers == null) {
            identifiers = new ArrayList<Identifier>();
        }
        return this.identifiers;
    }

    public DateTime getDateTime() {
        return dateTime;
    }

    public void setDateTime(DateTime value) {
        this.dateTime = ((DateTimeImpl) value);
    }

    public ResourceReference getSubject() {
        return subject;
    }

    public void setSubject(ResourceReference value) {
        this.subject = ((ResourceReferenceImpl) value);
    }

    public ResourceReference getOperator() {
        return operator;
    }

    public void setOperator(ResourceReference value) {
        this.operator = ((ResourceReferenceImpl) value);
    }

    public CodeableConcept getView() {
        return view;
    }

    public void setView(CodeableConcept value) {
        this.view = ((CodeableConceptImpl) value);
    }

    public org.hl7.fhir.model.String getDeviceName() {
        return deviceName;
    }

    public void setDeviceName(org.hl7.fhir.model.String value) {
        this.deviceName = ((StringImpl) value);
    }

    public Integer getHeight() {
        return height;
    }

    public void setHeight(Integer value) {
        this.height = ((IntegerImpl) value);
    }

    public Integer getWidth() {
        return width;
    }

    public void setWidth(Integer value) {
        this.width = ((IntegerImpl) value);
    }

    public Integer getFrames() {
        return frames;
    }

    public void setFrames(Integer value) {
        this.frames = ((IntegerImpl) value);
    }

    public Integer getLength() {
        return length;
    }

    public void setLength(Integer value) {
        this.length = ((IntegerImpl) value);
    }

    public Attachment getContent() {
        return content;
    }

    public void setContent(Attachment value) {
        this.content = ((AttachmentImpl) value);
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            MediaType theType;
            theType = this.getType();
            strategy.appendField(locator, this, "type", buffer, theType);
        }
        {
            CodeableConcept theSubtype;
            theSubtype = this.getSubtype();
            strategy.appendField(locator, this, "subtype", buffer, theSubtype);
        }
        {
            List<Identifier> theIdentifiers;
            theIdentifiers = (((this.identifiers!= null)&&(!this.identifiers.isEmpty()))?this.getIdentifiers():null);
            strategy.appendField(locator, this, "identifiers", buffer, theIdentifiers);
        }
        {
            DateTime theDateTime;
            theDateTime = this.getDateTime();
            strategy.appendField(locator, this, "dateTime", buffer, theDateTime);
        }
        {
            ResourceReference theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            ResourceReference theOperator;
            theOperator = this.getOperator();
            strategy.appendField(locator, this, "operator", buffer, theOperator);
        }
        {
            CodeableConcept theView;
            theView = this.getView();
            strategy.appendField(locator, this, "view", buffer, theView);
        }
        {
            org.hl7.fhir.model.String theDeviceName;
            theDeviceName = this.getDeviceName();
            strategy.appendField(locator, this, "deviceName", buffer, theDeviceName);
        }
        {
            Integer theHeight;
            theHeight = this.getHeight();
            strategy.appendField(locator, this, "height", buffer, theHeight);
        }
        {
            Integer theWidth;
            theWidth = this.getWidth();
            strategy.appendField(locator, this, "width", buffer, theWidth);
        }
        {
            Integer theFrames;
            theFrames = this.getFrames();
            strategy.appendField(locator, this, "frames", buffer, theFrames);
        }
        {
            Integer theLength;
            theLength = this.getLength();
            strategy.appendField(locator, this, "length", buffer, theLength);
        }
        {
            Attachment theContent;
            theContent = this.getContent();
            strategy.appendField(locator, this, "content", buffer, theContent);
        }
        return buffer;
    }

}
