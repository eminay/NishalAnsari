//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.ConditionStage;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Condition.Stage", propOrder = {
    "summary",
    "assessments"
})
public class ConditionStageImpl
    extends BackboneElementImpl
    implements ConditionStage, ToString
{

    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl summary;
    @XmlElement(name = "assessment", type = ResourceReferenceImpl.class)
    protected List<ResourceReference> assessments;

    public CodeableConcept getSummary() {
        return summary;
    }

    public void setSummary(CodeableConcept value) {
        this.summary = ((CodeableConceptImpl) value);
    }

    public List<ResourceReference> getAssessments() {
        if (assessments == null) {
            assessments = new ArrayList<ResourceReference>();
        }
        return this.assessments;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            CodeableConcept theSummary;
            theSummary = this.getSummary();
            strategy.appendField(locator, this, "summary", buffer, theSummary);
        }
        {
            List<ResourceReference> theAssessments;
            theAssessments = (((this.assessments!= null)&&(!this.assessments.isEmpty()))?this.getAssessments():null);
            strategy.appendField(locator, this, "assessments", buffer, theAssessments);
        }
        return buffer;
    }

}
