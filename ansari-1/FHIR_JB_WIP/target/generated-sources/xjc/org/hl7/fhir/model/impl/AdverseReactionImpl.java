//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.AdverseReaction;
import org.hl7.fhir.model.AdverseReactionExposure;
import org.hl7.fhir.model.AdverseReactionSymptom;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.Identifier;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "AdverseReaction", propOrder = {
    "identifiers",
    "date",
    "subject",
    "didNotOccurFlag",
    "recorder",
    "symptoms",
    "exposures"
})
@XmlRootElement(name = "AdverseReaction")
public class AdverseReactionImpl
    extends ResourceImpl
    implements AdverseReaction, ToString
{

    @XmlElement(name = "identifier", type = IdentifierImpl.class)
    protected List<Identifier> identifiers;
    @XmlElement(type = DateTimeImpl.class)
    protected DateTimeImpl date;
    @XmlElement(required = true, type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl subject;
    @XmlElement(required = true, type = BooleanImpl.class)
    protected BooleanImpl didNotOccurFlag;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl recorder;
    @XmlElement(name = "symptom", type = AdverseReactionSymptomImpl.class)
    protected List<AdverseReactionSymptom> symptoms;
    @XmlElement(name = "exposure", type = AdverseReactionExposureImpl.class)
    protected List<AdverseReactionExposure> exposures;

    public List<Identifier> getIdentifiers() {
        if (identifiers == null) {
            identifiers = new ArrayList<Identifier>();
        }
        return this.identifiers;
    }

    public DateTime getDate() {
        return date;
    }

    public void setDate(DateTime value) {
        this.date = ((DateTimeImpl) value);
    }

    public ResourceReference getSubject() {
        return subject;
    }

    public void setSubject(ResourceReference value) {
        this.subject = ((ResourceReferenceImpl) value);
    }

    public Boolean getDidNotOccurFlag() {
        return didNotOccurFlag;
    }

    public void setDidNotOccurFlag(Boolean value) {
        this.didNotOccurFlag = ((BooleanImpl) value);
    }

    public ResourceReference getRecorder() {
        return recorder;
    }

    public void setRecorder(ResourceReference value) {
        this.recorder = ((ResourceReferenceImpl) value);
    }

    public List<AdverseReactionSymptom> getSymptoms() {
        if (symptoms == null) {
            symptoms = new ArrayList<AdverseReactionSymptom>();
        }
        return this.symptoms;
    }

    public List<AdverseReactionExposure> getExposures() {
        if (exposures == null) {
            exposures = new ArrayList<AdverseReactionExposure>();
        }
        return this.exposures;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            List<Identifier> theIdentifiers;
            theIdentifiers = (((this.identifiers!= null)&&(!this.identifiers.isEmpty()))?this.getIdentifiers():null);
            strategy.appendField(locator, this, "identifiers", buffer, theIdentifiers);
        }
        {
            DateTime theDate;
            theDate = this.getDate();
            strategy.appendField(locator, this, "date", buffer, theDate);
        }
        {
            ResourceReference theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            Boolean theDidNotOccurFlag;
            theDidNotOccurFlag = this.getDidNotOccurFlag();
            strategy.appendField(locator, this, "didNotOccurFlag", buffer, theDidNotOccurFlag);
        }
        {
            ResourceReference theRecorder;
            theRecorder = this.getRecorder();
            strategy.appendField(locator, this, "recorder", buffer, theRecorder);
        }
        {
            List<AdverseReactionSymptom> theSymptoms;
            theSymptoms = (((this.symptoms!= null)&&(!this.symptoms.isEmpty()))?this.getSymptoms():null);
            strategy.appendField(locator, this, "symptoms", buffer, theSymptoms);
        }
        {
            List<AdverseReactionExposure> theExposures;
            theExposures = (((this.exposures!= null)&&(!this.exposures.isEmpty()))?this.getExposures():null);
            strategy.appendField(locator, this, "exposures", buffer, theExposures);
        }
        return buffer;
    }

}
