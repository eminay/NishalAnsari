//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.ConformanceOperation1;
import org.hl7.fhir.model.ConformanceQuery;
import org.hl7.fhir.model.ConformanceResource;
import org.hl7.fhir.model.ConformanceRest;
import org.hl7.fhir.model.ConformanceSecurity;
import org.hl7.fhir.model.RestfulConformanceMode;
import org.hl7.fhir.model.Uri;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Conformance.Rest", propOrder = {
    "mode",
    "documentation",
    "security",
    "resources",
    "operations",
    "queries",
    "documentMailboxes"
})
public class ConformanceRestImpl
    extends BackboneElementImpl
    implements ConformanceRest, ToString
{

    @XmlElement(required = true, type = RestfulConformanceModeImpl.class)
    protected RestfulConformanceModeImpl mode;
    @XmlElement(type = StringImpl.class)
    protected StringImpl documentation;
    @XmlElement(type = ConformanceSecurityImpl.class)
    protected ConformanceSecurityImpl security;
    @XmlElement(name = "resource", required = true, type = ConformanceResourceImpl.class)
    protected List<ConformanceResource> resources;
    @XmlElement(name = "operation", type = ConformanceOperation1Impl.class)
    protected List<ConformanceOperation1> operations;
    @XmlElement(name = "query", type = ConformanceQueryImpl.class)
    protected List<ConformanceQuery> queries;
    @XmlElement(name = "documentMailbox", type = UriImpl.class)
    protected List<Uri> documentMailboxes;

    public RestfulConformanceMode getMode() {
        return mode;
    }

    public void setMode(RestfulConformanceMode value) {
        this.mode = ((RestfulConformanceModeImpl) value);
    }

    public org.hl7.fhir.model.String getDocumentation() {
        return documentation;
    }

    public void setDocumentation(org.hl7.fhir.model.String value) {
        this.documentation = ((StringImpl) value);
    }

    public ConformanceSecurity getSecurity() {
        return security;
    }

    public void setSecurity(ConformanceSecurity value) {
        this.security = ((ConformanceSecurityImpl) value);
    }

    public List<ConformanceResource> getResources() {
        if (resources == null) {
            resources = new ArrayList<ConformanceResource>();
        }
        return this.resources;
    }

    public List<ConformanceOperation1> getOperations() {
        if (operations == null) {
            operations = new ArrayList<ConformanceOperation1>();
        }
        return this.operations;
    }

    public List<ConformanceQuery> getQueries() {
        if (queries == null) {
            queries = new ArrayList<ConformanceQuery>();
        }
        return this.queries;
    }

    public List<Uri> getDocumentMailboxes() {
        if (documentMailboxes == null) {
            documentMailboxes = new ArrayList<Uri>();
        }
        return this.documentMailboxes;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            RestfulConformanceMode theMode;
            theMode = this.getMode();
            strategy.appendField(locator, this, "mode", buffer, theMode);
        }
        {
            org.hl7.fhir.model.String theDocumentation;
            theDocumentation = this.getDocumentation();
            strategy.appendField(locator, this, "documentation", buffer, theDocumentation);
        }
        {
            ConformanceSecurity theSecurity;
            theSecurity = this.getSecurity();
            strategy.appendField(locator, this, "security", buffer, theSecurity);
        }
        {
            List<ConformanceResource> theResources;
            theResources = (((this.resources!= null)&&(!this.resources.isEmpty()))?this.getResources():null);
            strategy.appendField(locator, this, "resources", buffer, theResources);
        }
        {
            List<ConformanceOperation1> theOperations;
            theOperations = (((this.operations!= null)&&(!this.operations.isEmpty()))?this.getOperations():null);
            strategy.appendField(locator, this, "operations", buffer, theOperations);
        }
        {
            List<ConformanceQuery> theQueries;
            theQueries = (((this.queries!= null)&&(!this.queries.isEmpty()))?this.getQueries():null);
            strategy.appendField(locator, this, "queries", buffer, theQueries);
        }
        {
            List<Uri> theDocumentMailboxes;
            theDocumentMailboxes = (((this.documentMailboxes!= null)&&(!this.documentMailboxes.isEmpty()))?this.getDocumentMailboxes():null);
            strategy.appendField(locator, this, "documentMailboxes", buffer, theDocumentMailboxes);
        }
        return buffer;
    }

}
