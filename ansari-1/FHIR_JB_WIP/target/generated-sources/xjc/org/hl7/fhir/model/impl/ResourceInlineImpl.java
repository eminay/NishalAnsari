//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.AdverseReaction;
import org.hl7.fhir.model.Alert;
import org.hl7.fhir.model.AllergyIntolerance;
import org.hl7.fhir.model.Binary;
import org.hl7.fhir.model.CarePlan;
import org.hl7.fhir.model.Composition;
import org.hl7.fhir.model.ConceptMap;
import org.hl7.fhir.model.Condition;
import org.hl7.fhir.model.Conformance;
import org.hl7.fhir.model.Device;
import org.hl7.fhir.model.DeviceObservationReport;
import org.hl7.fhir.model.DiagnosticOrder;
import org.hl7.fhir.model.DiagnosticReport;
import org.hl7.fhir.model.DocumentManifest;
import org.hl7.fhir.model.DocumentReference;
import org.hl7.fhir.model.Encounter;
import org.hl7.fhir.model.FamilyHistory;
import org.hl7.fhir.model.Group;
import org.hl7.fhir.model.ImagingStudy;
import org.hl7.fhir.model.Immunization;
import org.hl7.fhir.model.ImmunizationRecommendation;
import org.hl7.fhir.model.List;
import org.hl7.fhir.model.Location;
import org.hl7.fhir.model.Media;
import org.hl7.fhir.model.Medication;
import org.hl7.fhir.model.MedicationAdministration;
import org.hl7.fhir.model.MedicationDispense;
import org.hl7.fhir.model.MedicationPrescription;
import org.hl7.fhir.model.MedicationStatement;
import org.hl7.fhir.model.MessageHeader;
import org.hl7.fhir.model.Observation;
import org.hl7.fhir.model.OperationOutcome;
import org.hl7.fhir.model.Order;
import org.hl7.fhir.model.OrderResponse;
import org.hl7.fhir.model.Organization;
import org.hl7.fhir.model.Other;
import org.hl7.fhir.model.Patient;
import org.hl7.fhir.model.Practitioner;
import org.hl7.fhir.model.Procedure;
import org.hl7.fhir.model.Profile;
import org.hl7.fhir.model.Provenance;
import org.hl7.fhir.model.Query;
import org.hl7.fhir.model.Questionnaire;
import org.hl7.fhir.model.RelatedPerson;
import org.hl7.fhir.model.ResourceInline;
import org.hl7.fhir.model.SecurityEvent;
import org.hl7.fhir.model.Specimen;
import org.hl7.fhir.model.Substance;
import org.hl7.fhir.model.Supply;
import org.hl7.fhir.model.ValueSet;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Resource.Inline", propOrder = {
    "diagnosticOrder",
    "imagingStudy",
    "adverseReaction",
    "practitioner",
    "patient",
    "conceptMap",
    "alert",
    "orderResponse",
    "specimen",
    "relatedPerson",
    "immunization",
    "documentReference",
    "allergyIntolerance",
    "observation",
    "location",
    "profile",
    "other",
    "familyHistory",
    "media",
    "conformance",
    "operationOutcome",
    "deviceObservationReport",
    "composition",
    "questionnaire",
    "list",
    "medicationStatement",
    "securityEvent",
    "encounter",
    "medicationAdministration",
    "medicationPrescription",
    "medicationDispense",
    "documentManifest",
    "immunizationRecommendation",
    "messageHeader",
    "medication",
    "valueSet",
    "group",
    "diagnosticReport",
    "substance",
    "procedure",
    "organization",
    "order",
    "query",
    "device",
    "supply",
    "carePlan",
    "condition",
    "provenance",
    "binary"
})
public class ResourceInlineImpl
    implements ResourceInline, ToString
{

    @XmlElement(name = "DiagnosticOrder", type = DiagnosticOrderImpl.class)
    protected DiagnosticOrderImpl diagnosticOrder;
    @XmlElement(name = "ImagingStudy", type = ImagingStudyImpl.class)
    protected ImagingStudyImpl imagingStudy;
    @XmlElement(name = "AdverseReaction", type = AdverseReactionImpl.class)
    protected AdverseReactionImpl adverseReaction;
    @XmlElement(name = "Practitioner", type = PractitionerImpl.class)
    protected PractitionerImpl practitioner;
    @XmlElement(name = "Patient", type = PatientImpl.class)
    protected PatientImpl patient;
    @XmlElement(name = "ConceptMap", type = ConceptMapImpl.class)
    protected ConceptMapImpl conceptMap;
    @XmlElement(name = "Alert", type = AlertImpl.class)
    protected AlertImpl alert;
    @XmlElement(name = "OrderResponse", type = OrderResponseImpl.class)
    protected OrderResponseImpl orderResponse;
    @XmlElement(name = "Specimen", type = SpecimenImpl.class)
    protected SpecimenImpl specimen;
    @XmlElement(name = "RelatedPerson", type = RelatedPersonImpl.class)
    protected RelatedPersonImpl relatedPerson;
    @XmlElement(name = "Immunization", type = ImmunizationImpl.class)
    protected ImmunizationImpl immunization;
    @XmlElement(name = "DocumentReference", type = DocumentReferenceImpl.class)
    protected DocumentReferenceImpl documentReference;
    @XmlElement(name = "AllergyIntolerance", type = AllergyIntoleranceImpl.class)
    protected AllergyIntoleranceImpl allergyIntolerance;
    @XmlElement(name = "Observation", type = ObservationImpl.class)
    protected ObservationImpl observation;
    @XmlElement(name = "Location", type = LocationImpl.class)
    protected LocationImpl location;
    @XmlElement(name = "Profile", type = ProfileImpl.class)
    protected ProfileImpl profile;
    @XmlElement(name = "Other", type = OtherImpl.class)
    protected OtherImpl other;
    @XmlElement(name = "FamilyHistory", type = FamilyHistoryImpl.class)
    protected FamilyHistoryImpl familyHistory;
    @XmlElement(name = "Media", type = MediaImpl.class)
    protected MediaImpl media;
    @XmlElement(name = "Conformance", type = ConformanceImpl.class)
    protected ConformanceImpl conformance;
    @XmlElement(name = "OperationOutcome", type = OperationOutcomeImpl.class)
    protected OperationOutcomeImpl operationOutcome;
    @XmlElement(name = "DeviceObservationReport", type = DeviceObservationReportImpl.class)
    protected DeviceObservationReportImpl deviceObservationReport;
    @XmlElement(name = "Composition", type = CompositionImpl.class)
    protected CompositionImpl composition;
    @XmlElement(name = "Questionnaire", type = QuestionnaireImpl.class)
    protected QuestionnaireImpl questionnaire;
    @XmlElement(name = "List", type = ListImpl.class)
    protected ListImpl list;
    @XmlElement(name = "MedicationStatement", type = MedicationStatementImpl.class)
    protected MedicationStatementImpl medicationStatement;
    @XmlElement(name = "SecurityEvent", type = SecurityEventImpl.class)
    protected SecurityEventImpl securityEvent;
    @XmlElement(name = "Encounter", type = EncounterImpl.class)
    protected EncounterImpl encounter;
    @XmlElement(name = "MedicationAdministration", type = MedicationAdministrationImpl.class)
    protected MedicationAdministrationImpl medicationAdministration;
    @XmlElement(name = "MedicationPrescription", type = MedicationPrescriptionImpl.class)
    protected MedicationPrescriptionImpl medicationPrescription;
    @XmlElement(name = "MedicationDispense", type = MedicationDispenseImpl.class)
    protected MedicationDispenseImpl medicationDispense;
    @XmlElement(name = "DocumentManifest", type = DocumentManifestImpl.class)
    protected DocumentManifestImpl documentManifest;
    @XmlElement(name = "ImmunizationRecommendation", type = ImmunizationRecommendationImpl.class)
    protected ImmunizationRecommendationImpl immunizationRecommendation;
    @XmlElement(name = "MessageHeader", type = MessageHeaderImpl.class)
    protected MessageHeaderImpl messageHeader;
    @XmlElement(name = "Medication", type = MedicationImpl.class)
    protected MedicationImpl medication;
    @XmlElement(name = "ValueSet", type = ValueSetImpl.class)
    protected ValueSetImpl valueSet;
    @XmlElement(name = "Group", type = GroupImpl.class)
    protected GroupImpl group;
    @XmlElement(name = "DiagnosticReport", type = DiagnosticReportImpl.class)
    protected DiagnosticReportImpl diagnosticReport;
    @XmlElement(name = "Substance", type = SubstanceImpl.class)
    protected SubstanceImpl substance;
    @XmlElement(name = "Procedure", type = ProcedureImpl.class)
    protected ProcedureImpl procedure;
    @XmlElement(name = "Organization", type = OrganizationImpl.class)
    protected OrganizationImpl organization;
    @XmlElement(name = "Order", type = OrderImpl.class)
    protected OrderImpl order;
    @XmlElement(name = "Query", type = QueryImpl.class)
    protected QueryImpl query;
    @XmlElement(name = "Device", type = DeviceImpl.class)
    protected DeviceImpl device;
    @XmlElement(name = "Supply", type = SupplyImpl.class)
    protected SupplyImpl supply;
    @XmlElement(name = "CarePlan", type = CarePlanImpl.class)
    protected CarePlanImpl carePlan;
    @XmlElement(name = "Condition", type = ConditionImpl.class)
    protected ConditionImpl condition;
    @XmlElement(name = "Provenance", type = ProvenanceImpl.class)
    protected ProvenanceImpl provenance;
    @XmlElement(name = "Binary", type = BinaryImpl.class)
    protected BinaryImpl binary;

    public DiagnosticOrder getDiagnosticOrder() {
        return diagnosticOrder;
    }

    public void setDiagnosticOrder(DiagnosticOrder value) {
        this.diagnosticOrder = ((DiagnosticOrderImpl) value);
    }

    public ImagingStudy getImagingStudy() {
        return imagingStudy;
    }

    public void setImagingStudy(ImagingStudy value) {
        this.imagingStudy = ((ImagingStudyImpl) value);
    }

    public AdverseReaction getAdverseReaction() {
        return adverseReaction;
    }

    public void setAdverseReaction(AdverseReaction value) {
        this.adverseReaction = ((AdverseReactionImpl) value);
    }

    public Practitioner getPractitioner() {
        return practitioner;
    }

    public void setPractitioner(Practitioner value) {
        this.practitioner = ((PractitionerImpl) value);
    }

    public Patient getPatient() {
        return patient;
    }

    public void setPatient(Patient value) {
        this.patient = ((PatientImpl) value);
    }

    public ConceptMap getConceptMap() {
        return conceptMap;
    }

    public void setConceptMap(ConceptMap value) {
        this.conceptMap = ((ConceptMapImpl) value);
    }

    public Alert getAlert() {
        return alert;
    }

    public void setAlert(Alert value) {
        this.alert = ((AlertImpl) value);
    }

    public OrderResponse getOrderResponse() {
        return orderResponse;
    }

    public void setOrderResponse(OrderResponse value) {
        this.orderResponse = ((OrderResponseImpl) value);
    }

    public Specimen getSpecimen() {
        return specimen;
    }

    public void setSpecimen(Specimen value) {
        this.specimen = ((SpecimenImpl) value);
    }

    public RelatedPerson getRelatedPerson() {
        return relatedPerson;
    }

    public void setRelatedPerson(RelatedPerson value) {
        this.relatedPerson = ((RelatedPersonImpl) value);
    }

    public Immunization getImmunization() {
        return immunization;
    }

    public void setImmunization(Immunization value) {
        this.immunization = ((ImmunizationImpl) value);
    }

    public DocumentReference getDocumentReference() {
        return documentReference;
    }

    public void setDocumentReference(DocumentReference value) {
        this.documentReference = ((DocumentReferenceImpl) value);
    }

    public AllergyIntolerance getAllergyIntolerance() {
        return allergyIntolerance;
    }

    public void setAllergyIntolerance(AllergyIntolerance value) {
        this.allergyIntolerance = ((AllergyIntoleranceImpl) value);
    }

    public Observation getObservation() {
        return observation;
    }

    public void setObservation(Observation value) {
        this.observation = ((ObservationImpl) value);
    }

    public Location getLocation() {
        return location;
    }

    public void setLocation(Location value) {
        this.location = ((LocationImpl) value);
    }

    public Profile getProfile() {
        return profile;
    }

    public void setProfile(Profile value) {
        this.profile = ((ProfileImpl) value);
    }

    public Other getOther() {
        return other;
    }

    public void setOther(Other value) {
        this.other = ((OtherImpl) value);
    }

    public FamilyHistory getFamilyHistory() {
        return familyHistory;
    }

    public void setFamilyHistory(FamilyHistory value) {
        this.familyHistory = ((FamilyHistoryImpl) value);
    }

    public Media getMedia() {
        return media;
    }

    public void setMedia(Media value) {
        this.media = ((MediaImpl) value);
    }

    public Conformance getConformance() {
        return conformance;
    }

    public void setConformance(Conformance value) {
        this.conformance = ((ConformanceImpl) value);
    }

    public OperationOutcome getOperationOutcome() {
        return operationOutcome;
    }

    public void setOperationOutcome(OperationOutcome value) {
        this.operationOutcome = ((OperationOutcomeImpl) value);
    }

    public DeviceObservationReport getDeviceObservationReport() {
        return deviceObservationReport;
    }

    public void setDeviceObservationReport(DeviceObservationReport value) {
        this.deviceObservationReport = ((DeviceObservationReportImpl) value);
    }

    public Composition getComposition() {
        return composition;
    }

    public void setComposition(Composition value) {
        this.composition = ((CompositionImpl) value);
    }

    public Questionnaire getQuestionnaire() {
        return questionnaire;
    }

    public void setQuestionnaire(Questionnaire value) {
        this.questionnaire = ((QuestionnaireImpl) value);
    }

    public List getList() {
        return list;
    }

    public void setList(List value) {
        this.list = ((ListImpl) value);
    }

    public MedicationStatement getMedicationStatement() {
        return medicationStatement;
    }

    public void setMedicationStatement(MedicationStatement value) {
        this.medicationStatement = ((MedicationStatementImpl) value);
    }

    public SecurityEvent getSecurityEvent() {
        return securityEvent;
    }

    public void setSecurityEvent(SecurityEvent value) {
        this.securityEvent = ((SecurityEventImpl) value);
    }

    public Encounter getEncounter() {
        return encounter;
    }

    public void setEncounter(Encounter value) {
        this.encounter = ((EncounterImpl) value);
    }

    public MedicationAdministration getMedicationAdministration() {
        return medicationAdministration;
    }

    public void setMedicationAdministration(MedicationAdministration value) {
        this.medicationAdministration = ((MedicationAdministrationImpl) value);
    }

    public MedicationPrescription getMedicationPrescription() {
        return medicationPrescription;
    }

    public void setMedicationPrescription(MedicationPrescription value) {
        this.medicationPrescription = ((MedicationPrescriptionImpl) value);
    }

    public MedicationDispense getMedicationDispense() {
        return medicationDispense;
    }

    public void setMedicationDispense(MedicationDispense value) {
        this.medicationDispense = ((MedicationDispenseImpl) value);
    }

    public DocumentManifest getDocumentManifest() {
        return documentManifest;
    }

    public void setDocumentManifest(DocumentManifest value) {
        this.documentManifest = ((DocumentManifestImpl) value);
    }

    public ImmunizationRecommendation getImmunizationRecommendation() {
        return immunizationRecommendation;
    }

    public void setImmunizationRecommendation(ImmunizationRecommendation value) {
        this.immunizationRecommendation = ((ImmunizationRecommendationImpl) value);
    }

    public MessageHeader getMessageHeader() {
        return messageHeader;
    }

    public void setMessageHeader(MessageHeader value) {
        this.messageHeader = ((MessageHeaderImpl) value);
    }

    public Medication getMedication() {
        return medication;
    }

    public void setMedication(Medication value) {
        this.medication = ((MedicationImpl) value);
    }

    public ValueSet getValueSet() {
        return valueSet;
    }

    public void setValueSet(ValueSet value) {
        this.valueSet = ((ValueSetImpl) value);
    }

    public Group getGroup() {
        return group;
    }

    public void setGroup(Group value) {
        this.group = ((GroupImpl) value);
    }

    public DiagnosticReport getDiagnosticReport() {
        return diagnosticReport;
    }

    public void setDiagnosticReport(DiagnosticReport value) {
        this.diagnosticReport = ((DiagnosticReportImpl) value);
    }

    public Substance getSubstance() {
        return substance;
    }

    public void setSubstance(Substance value) {
        this.substance = ((SubstanceImpl) value);
    }

    public Procedure getProcedure() {
        return procedure;
    }

    public void setProcedure(Procedure value) {
        this.procedure = ((ProcedureImpl) value);
    }

    public Organization getOrganization() {
        return organization;
    }

    public void setOrganization(Organization value) {
        this.organization = ((OrganizationImpl) value);
    }

    public Order getOrder() {
        return order;
    }

    public void setOrder(Order value) {
        this.order = ((OrderImpl) value);
    }

    public Query getQuery() {
        return query;
    }

    public void setQuery(Query value) {
        this.query = ((QueryImpl) value);
    }

    public Device getDevice() {
        return device;
    }

    public void setDevice(Device value) {
        this.device = ((DeviceImpl) value);
    }

    public Supply getSupply() {
        return supply;
    }

    public void setSupply(Supply value) {
        this.supply = ((SupplyImpl) value);
    }

    public CarePlan getCarePlan() {
        return carePlan;
    }

    public void setCarePlan(CarePlan value) {
        this.carePlan = ((CarePlanImpl) value);
    }

    public Condition getCondition() {
        return condition;
    }

    public void setCondition(Condition value) {
        this.condition = ((ConditionImpl) value);
    }

    public Provenance getProvenance() {
        return provenance;
    }

    public void setProvenance(Provenance value) {
        this.provenance = ((ProvenanceImpl) value);
    }

    public Binary getBinary() {
        return binary;
    }

    public void setBinary(Binary value) {
        this.binary = ((BinaryImpl) value);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            DiagnosticOrder theDiagnosticOrder;
            theDiagnosticOrder = this.getDiagnosticOrder();
            strategy.appendField(locator, this, "diagnosticOrder", buffer, theDiagnosticOrder);
        }
        {
            ImagingStudy theImagingStudy;
            theImagingStudy = this.getImagingStudy();
            strategy.appendField(locator, this, "imagingStudy", buffer, theImagingStudy);
        }
        {
            AdverseReaction theAdverseReaction;
            theAdverseReaction = this.getAdverseReaction();
            strategy.appendField(locator, this, "adverseReaction", buffer, theAdverseReaction);
        }
        {
            Practitioner thePractitioner;
            thePractitioner = this.getPractitioner();
            strategy.appendField(locator, this, "practitioner", buffer, thePractitioner);
        }
        {
            Patient thePatient;
            thePatient = this.getPatient();
            strategy.appendField(locator, this, "patient", buffer, thePatient);
        }
        {
            ConceptMap theConceptMap;
            theConceptMap = this.getConceptMap();
            strategy.appendField(locator, this, "conceptMap", buffer, theConceptMap);
        }
        {
            Alert theAlert;
            theAlert = this.getAlert();
            strategy.appendField(locator, this, "alert", buffer, theAlert);
        }
        {
            OrderResponse theOrderResponse;
            theOrderResponse = this.getOrderResponse();
            strategy.appendField(locator, this, "orderResponse", buffer, theOrderResponse);
        }
        {
            Specimen theSpecimen;
            theSpecimen = this.getSpecimen();
            strategy.appendField(locator, this, "specimen", buffer, theSpecimen);
        }
        {
            RelatedPerson theRelatedPerson;
            theRelatedPerson = this.getRelatedPerson();
            strategy.appendField(locator, this, "relatedPerson", buffer, theRelatedPerson);
        }
        {
            Immunization theImmunization;
            theImmunization = this.getImmunization();
            strategy.appendField(locator, this, "immunization", buffer, theImmunization);
        }
        {
            DocumentReference theDocumentReference;
            theDocumentReference = this.getDocumentReference();
            strategy.appendField(locator, this, "documentReference", buffer, theDocumentReference);
        }
        {
            AllergyIntolerance theAllergyIntolerance;
            theAllergyIntolerance = this.getAllergyIntolerance();
            strategy.appendField(locator, this, "allergyIntolerance", buffer, theAllergyIntolerance);
        }
        {
            Observation theObservation;
            theObservation = this.getObservation();
            strategy.appendField(locator, this, "observation", buffer, theObservation);
        }
        {
            Location theLocation;
            theLocation = this.getLocation();
            strategy.appendField(locator, this, "location", buffer, theLocation);
        }
        {
            Profile theProfile;
            theProfile = this.getProfile();
            strategy.appendField(locator, this, "profile", buffer, theProfile);
        }
        {
            Other theOther;
            theOther = this.getOther();
            strategy.appendField(locator, this, "other", buffer, theOther);
        }
        {
            FamilyHistory theFamilyHistory;
            theFamilyHistory = this.getFamilyHistory();
            strategy.appendField(locator, this, "familyHistory", buffer, theFamilyHistory);
        }
        {
            Media theMedia;
            theMedia = this.getMedia();
            strategy.appendField(locator, this, "media", buffer, theMedia);
        }
        {
            Conformance theConformance;
            theConformance = this.getConformance();
            strategy.appendField(locator, this, "conformance", buffer, theConformance);
        }
        {
            OperationOutcome theOperationOutcome;
            theOperationOutcome = this.getOperationOutcome();
            strategy.appendField(locator, this, "operationOutcome", buffer, theOperationOutcome);
        }
        {
            DeviceObservationReport theDeviceObservationReport;
            theDeviceObservationReport = this.getDeviceObservationReport();
            strategy.appendField(locator, this, "deviceObservationReport", buffer, theDeviceObservationReport);
        }
        {
            Composition theComposition;
            theComposition = this.getComposition();
            strategy.appendField(locator, this, "composition", buffer, theComposition);
        }
        {
            Questionnaire theQuestionnaire;
            theQuestionnaire = this.getQuestionnaire();
            strategy.appendField(locator, this, "questionnaire", buffer, theQuestionnaire);
        }
        {
            List theList;
            theList = this.getList();
            strategy.appendField(locator, this, "list", buffer, theList);
        }
        {
            MedicationStatement theMedicationStatement;
            theMedicationStatement = this.getMedicationStatement();
            strategy.appendField(locator, this, "medicationStatement", buffer, theMedicationStatement);
        }
        {
            SecurityEvent theSecurityEvent;
            theSecurityEvent = this.getSecurityEvent();
            strategy.appendField(locator, this, "securityEvent", buffer, theSecurityEvent);
        }
        {
            Encounter theEncounter;
            theEncounter = this.getEncounter();
            strategy.appendField(locator, this, "encounter", buffer, theEncounter);
        }
        {
            MedicationAdministration theMedicationAdministration;
            theMedicationAdministration = this.getMedicationAdministration();
            strategy.appendField(locator, this, "medicationAdministration", buffer, theMedicationAdministration);
        }
        {
            MedicationPrescription theMedicationPrescription;
            theMedicationPrescription = this.getMedicationPrescription();
            strategy.appendField(locator, this, "medicationPrescription", buffer, theMedicationPrescription);
        }
        {
            MedicationDispense theMedicationDispense;
            theMedicationDispense = this.getMedicationDispense();
            strategy.appendField(locator, this, "medicationDispense", buffer, theMedicationDispense);
        }
        {
            DocumentManifest theDocumentManifest;
            theDocumentManifest = this.getDocumentManifest();
            strategy.appendField(locator, this, "documentManifest", buffer, theDocumentManifest);
        }
        {
            ImmunizationRecommendation theImmunizationRecommendation;
            theImmunizationRecommendation = this.getImmunizationRecommendation();
            strategy.appendField(locator, this, "immunizationRecommendation", buffer, theImmunizationRecommendation);
        }
        {
            MessageHeader theMessageHeader;
            theMessageHeader = this.getMessageHeader();
            strategy.appendField(locator, this, "messageHeader", buffer, theMessageHeader);
        }
        {
            Medication theMedication;
            theMedication = this.getMedication();
            strategy.appendField(locator, this, "medication", buffer, theMedication);
        }
        {
            ValueSet theValueSet;
            theValueSet = this.getValueSet();
            strategy.appendField(locator, this, "valueSet", buffer, theValueSet);
        }
        {
            Group theGroup;
            theGroup = this.getGroup();
            strategy.appendField(locator, this, "group", buffer, theGroup);
        }
        {
            DiagnosticReport theDiagnosticReport;
            theDiagnosticReport = this.getDiagnosticReport();
            strategy.appendField(locator, this, "diagnosticReport", buffer, theDiagnosticReport);
        }
        {
            Substance theSubstance;
            theSubstance = this.getSubstance();
            strategy.appendField(locator, this, "substance", buffer, theSubstance);
        }
        {
            Procedure theProcedure;
            theProcedure = this.getProcedure();
            strategy.appendField(locator, this, "procedure", buffer, theProcedure);
        }
        {
            Organization theOrganization;
            theOrganization = this.getOrganization();
            strategy.appendField(locator, this, "organization", buffer, theOrganization);
        }
        {
            Order theOrder;
            theOrder = this.getOrder();
            strategy.appendField(locator, this, "order", buffer, theOrder);
        }
        {
            Query theQuery;
            theQuery = this.getQuery();
            strategy.appendField(locator, this, "query", buffer, theQuery);
        }
        {
            Device theDevice;
            theDevice = this.getDevice();
            strategy.appendField(locator, this, "device", buffer, theDevice);
        }
        {
            Supply theSupply;
            theSupply = this.getSupply();
            strategy.appendField(locator, this, "supply", buffer, theSupply);
        }
        {
            CarePlan theCarePlan;
            theCarePlan = this.getCarePlan();
            strategy.appendField(locator, this, "carePlan", buffer, theCarePlan);
        }
        {
            Condition theCondition;
            theCondition = this.getCondition();
            strategy.appendField(locator, this, "condition", buffer, theCondition);
        }
        {
            Provenance theProvenance;
            theProvenance = this.getProvenance();
            strategy.appendField(locator, this, "provenance", buffer, theProvenance);
        }
        {
            Binary theBinary;
            theBinary = this.getBinary();
            strategy.appendField(locator, this, "binary", buffer, theBinary);
        }
        return buffer;
    }

}
