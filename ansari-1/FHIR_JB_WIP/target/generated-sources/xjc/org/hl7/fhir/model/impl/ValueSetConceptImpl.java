//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.ValueSetConcept;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ValueSet.Concept", propOrder = {
    "code",
    "_abstract",
    "display",
    "definition",
    "concepts"
})
public class ValueSetConceptImpl
    extends BackboneElementImpl
    implements ValueSetConcept, ToString
{

    @XmlElement(required = true, type = CodeImpl.class)
    protected CodeImpl code;
    @XmlElement(name = "abstract", type = BooleanImpl.class)
    protected BooleanImpl _abstract;
    @XmlElement(type = StringImpl.class)
    protected StringImpl display;
    @XmlElement(type = StringImpl.class)
    protected StringImpl definition;
    @XmlElement(name = "concept", type = ValueSetConceptImpl.class)
    protected List<ValueSetConcept> concepts;

    public Code getCode() {
        return code;
    }

    public void setCode(Code value) {
        this.code = ((CodeImpl) value);
    }

    public Boolean getAbstract() {
        return _abstract;
    }

    public void setAbstract(Boolean value) {
        this._abstract = ((BooleanImpl) value);
    }

    public org.hl7.fhir.model.String getDisplay() {
        return display;
    }

    public void setDisplay(org.hl7.fhir.model.String value) {
        this.display = ((StringImpl) value);
    }

    public org.hl7.fhir.model.String getDefinition() {
        return definition;
    }

    public void setDefinition(org.hl7.fhir.model.String value) {
        this.definition = ((StringImpl) value);
    }

    public List<ValueSetConcept> getConcepts() {
        if (concepts == null) {
            concepts = new ArrayList<ValueSetConcept>();
        }
        return this.concepts;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            Code theCode;
            theCode = this.getCode();
            strategy.appendField(locator, this, "code", buffer, theCode);
        }
        {
            Boolean theAbstract;
            theAbstract = this.getAbstract();
            strategy.appendField(locator, this, "_abstract", buffer, theAbstract);
        }
        {
            org.hl7.fhir.model.String theDisplay;
            theDisplay = this.getDisplay();
            strategy.appendField(locator, this, "display", buffer, theDisplay);
        }
        {
            org.hl7.fhir.model.String theDefinition;
            theDefinition = this.getDefinition();
            strategy.appendField(locator, this, "definition", buffer, theDefinition);
        }
        {
            List<ValueSetConcept> theConcepts;
            theConcepts = (((this.concepts!= null)&&(!this.concepts.isEmpty()))?this.getConcepts():null);
            strategy.appendField(locator, this, "concepts", buffer, theConcepts);
        }
        return buffer;
    }

}
