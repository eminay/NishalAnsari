//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Address;
import org.hl7.fhir.model.Attachment;
import org.hl7.fhir.model.Base64Binary;
import org.hl7.fhir.model.Boolean;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.CodeableConcept;
import org.hl7.fhir.model.Coding;
import org.hl7.fhir.model.Contact;
import org.hl7.fhir.model.Date;
import org.hl7.fhir.model.DateTime;
import org.hl7.fhir.model.Decimal;
import org.hl7.fhir.model.HumanName;
import org.hl7.fhir.model.Id;
import org.hl7.fhir.model.Identifier;
import org.hl7.fhir.model.Instant;
import org.hl7.fhir.model.Integer;
import org.hl7.fhir.model.Oid;
import org.hl7.fhir.model.Period;
import org.hl7.fhir.model.ProfileBinding;
import org.hl7.fhir.model.ProfileConstraint;
import org.hl7.fhir.model.ProfileDefinition;
import org.hl7.fhir.model.ProfileMapping1;
import org.hl7.fhir.model.ProfileType;
import org.hl7.fhir.model.Quantity;
import org.hl7.fhir.model.Range;
import org.hl7.fhir.model.Ratio;
import org.hl7.fhir.model.ResourceReference;
import org.hl7.fhir.model.SampledData;
import org.hl7.fhir.model.Schedule;
import org.hl7.fhir.model.Uri;
import org.hl7.fhir.model.Uuid;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Profile.Definition", propOrder = {
    "_short",
    "formal",
    "comments",
    "requirements",
    "synonyms",
    "min",
    "max",
    "types",
    "nameReference",
    "valueSchedule",
    "valueContact",
    "valueAddress",
    "valueHumanName",
    "valueSampledData",
    "valueResource",
    "valueRatio",
    "valuePeriod",
    "valueRange",
    "valueQuantity",
    "valueCoding",
    "valueCodeableConcept",
    "valueIdentifier",
    "valueAttachment",
    "valueId",
    "valueUuid",
    "valueOid",
    "valueCode",
    "valueDateTime",
    "valueDate",
    "valueUri",
    "valueString",
    "valueInstant",
    "valueBase64Binary",
    "valueDecimal",
    "valueInteger",
    "valueBoolean",
    "exampleSchedule",
    "exampleContact",
    "exampleAddress",
    "exampleHumanName",
    "exampleSampledData",
    "exampleResource",
    "exampleRatio",
    "examplePeriod",
    "exampleRange",
    "exampleQuantity",
    "exampleCoding",
    "exampleCodeableConcept",
    "exampleIdentifier",
    "exampleAttachment",
    "exampleId",
    "exampleUuid",
    "exampleOid",
    "exampleCode",
    "exampleDateTime",
    "exampleDate",
    "exampleUri",
    "exampleString",
    "exampleInstant",
    "exampleBase64Binary",
    "exampleDecimal",
    "exampleInteger",
    "exampleBoolean",
    "maxLength",
    "conditions",
    "constraints",
    "mustSupport",
    "isModifier",
    "binding",
    "mappings"
})
public class ProfileDefinitionImpl
    extends BackboneElementImpl
    implements ProfileDefinition, ToString
{

    @XmlElement(name = "short", required = true, type = StringImpl.class)
    protected StringImpl _short;
    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl formal;
    @XmlElement(type = StringImpl.class)
    protected StringImpl comments;
    @XmlElement(type = StringImpl.class)
    protected StringImpl requirements;
    @XmlElement(name = "synonym", type = StringImpl.class)
    protected List<org.hl7.fhir.model.String> synonyms;
    @XmlElement(required = true, type = IntegerImpl.class)
    protected IntegerImpl min;
    @XmlElement(required = true, type = StringImpl.class)
    protected StringImpl max;
    @XmlElement(name = "type", type = ProfileTypeImpl.class)
    protected List<ProfileType> types;
    @XmlElement(type = StringImpl.class)
    protected StringImpl nameReference;
    @XmlElement(type = ScheduleImpl.class)
    protected ScheduleImpl valueSchedule;
    @XmlElement(type = ContactImpl.class)
    protected ContactImpl valueContact;
    @XmlElement(type = AddressImpl.class)
    protected AddressImpl valueAddress;
    @XmlElement(type = HumanNameImpl.class)
    protected HumanNameImpl valueHumanName;
    @XmlElement(type = SampledDataImpl.class)
    protected SampledDataImpl valueSampledData;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl valueResource;
    @XmlElement(type = RatioImpl.class)
    protected RatioImpl valueRatio;
    @XmlElement(type = PeriodImpl.class)
    protected PeriodImpl valuePeriod;
    @XmlElement(type = RangeImpl.class)
    protected RangeImpl valueRange;
    @XmlElement(type = QuantityImpl.class)
    protected QuantityImpl valueQuantity;
    @XmlElement(type = CodingImpl.class)
    protected CodingImpl valueCoding;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl valueCodeableConcept;
    @XmlElement(type = IdentifierImpl.class)
    protected IdentifierImpl valueIdentifier;
    @XmlElement(type = AttachmentImpl.class)
    protected AttachmentImpl valueAttachment;
    @XmlElement(type = IdImpl.class)
    protected IdImpl valueId;
    @XmlElement(type = UuidImpl.class)
    protected UuidImpl valueUuid;
    @XmlElement(type = OidImpl.class)
    protected OidImpl valueOid;
    @XmlElement(type = CodeImpl.class)
    protected CodeImpl valueCode;
    @XmlElement(type = DateTimeImpl.class)
    protected DateTimeImpl valueDateTime;
    @XmlElement(type = DateImpl.class)
    protected DateImpl valueDate;
    @XmlElement(type = UriImpl.class)
    protected UriImpl valueUri;
    @XmlElement(type = StringImpl.class)
    protected StringImpl valueString;
    @XmlElement(type = InstantImpl.class)
    protected InstantImpl valueInstant;
    @XmlElement(type = Base64BinaryImpl.class)
    protected Base64BinaryImpl valueBase64Binary;
    @XmlElement(type = DecimalImpl.class)
    protected DecimalImpl valueDecimal;
    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl valueInteger;
    @XmlElement(type = BooleanImpl.class)
    protected BooleanImpl valueBoolean;
    @XmlElement(type = ScheduleImpl.class)
    protected ScheduleImpl exampleSchedule;
    @XmlElement(type = ContactImpl.class)
    protected ContactImpl exampleContact;
    @XmlElement(type = AddressImpl.class)
    protected AddressImpl exampleAddress;
    @XmlElement(type = HumanNameImpl.class)
    protected HumanNameImpl exampleHumanName;
    @XmlElement(type = SampledDataImpl.class)
    protected SampledDataImpl exampleSampledData;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl exampleResource;
    @XmlElement(type = RatioImpl.class)
    protected RatioImpl exampleRatio;
    @XmlElement(type = PeriodImpl.class)
    protected PeriodImpl examplePeriod;
    @XmlElement(type = RangeImpl.class)
    protected RangeImpl exampleRange;
    @XmlElement(type = QuantityImpl.class)
    protected QuantityImpl exampleQuantity;
    @XmlElement(type = CodingImpl.class)
    protected CodingImpl exampleCoding;
    @XmlElement(type = CodeableConceptImpl.class)
    protected CodeableConceptImpl exampleCodeableConcept;
    @XmlElement(type = IdentifierImpl.class)
    protected IdentifierImpl exampleIdentifier;
    @XmlElement(type = AttachmentImpl.class)
    protected AttachmentImpl exampleAttachment;
    @XmlElement(type = IdImpl.class)
    protected IdImpl exampleId;
    @XmlElement(type = UuidImpl.class)
    protected UuidImpl exampleUuid;
    @XmlElement(type = OidImpl.class)
    protected OidImpl exampleOid;
    @XmlElement(type = CodeImpl.class)
    protected CodeImpl exampleCode;
    @XmlElement(type = DateTimeImpl.class)
    protected DateTimeImpl exampleDateTime;
    @XmlElement(type = DateImpl.class)
    protected DateImpl exampleDate;
    @XmlElement(type = UriImpl.class)
    protected UriImpl exampleUri;
    @XmlElement(type = StringImpl.class)
    protected StringImpl exampleString;
    @XmlElement(type = InstantImpl.class)
    protected InstantImpl exampleInstant;
    @XmlElement(type = Base64BinaryImpl.class)
    protected Base64BinaryImpl exampleBase64Binary;
    @XmlElement(type = DecimalImpl.class)
    protected DecimalImpl exampleDecimal;
    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl exampleInteger;
    @XmlElement(type = BooleanImpl.class)
    protected BooleanImpl exampleBoolean;
    @XmlElement(type = IntegerImpl.class)
    protected IntegerImpl maxLength;
    @XmlElement(name = "condition", type = IdImpl.class)
    protected List<Id> conditions;
    @XmlElement(name = "constraint", type = ProfileConstraintImpl.class)
    protected List<ProfileConstraint> constraints;
    @XmlElement(type = BooleanImpl.class)
    protected BooleanImpl mustSupport;
    @XmlElement(required = true, type = BooleanImpl.class)
    protected BooleanImpl isModifier;
    @XmlElement(type = ProfileBindingImpl.class)
    protected ProfileBindingImpl binding;
    @XmlElement(name = "mapping", type = ProfileMapping1Impl.class)
    protected List<ProfileMapping1> mappings;

    public org.hl7.fhir.model.String getShort() {
        return _short;
    }

    public void setShort(org.hl7.fhir.model.String value) {
        this._short = ((StringImpl) value);
    }

    public org.hl7.fhir.model.String getFormal() {
        return formal;
    }

    public void setFormal(org.hl7.fhir.model.String value) {
        this.formal = ((StringImpl) value);
    }

    public org.hl7.fhir.model.String getComments() {
        return comments;
    }

    public void setComments(org.hl7.fhir.model.String value) {
        this.comments = ((StringImpl) value);
    }

    public org.hl7.fhir.model.String getRequirements() {
        return requirements;
    }

    public void setRequirements(org.hl7.fhir.model.String value) {
        this.requirements = ((StringImpl) value);
    }

    public List<org.hl7.fhir.model.String> getSynonyms() {
        if (synonyms == null) {
            synonyms = new ArrayList<org.hl7.fhir.model.String>();
        }
        return this.synonyms;
    }

    public Integer getMin() {
        return min;
    }

    public void setMin(Integer value) {
        this.min = ((IntegerImpl) value);
    }

    public org.hl7.fhir.model.String getMax() {
        return max;
    }

    public void setMax(org.hl7.fhir.model.String value) {
        this.max = ((StringImpl) value);
    }

    public List<ProfileType> getTypes() {
        if (types == null) {
            types = new ArrayList<ProfileType>();
        }
        return this.types;
    }

    public org.hl7.fhir.model.String getNameReference() {
        return nameReference;
    }

    public void setNameReference(org.hl7.fhir.model.String value) {
        this.nameReference = ((StringImpl) value);
    }

    public Schedule getValueSchedule() {
        return valueSchedule;
    }

    public void setValueSchedule(Schedule value) {
        this.valueSchedule = ((ScheduleImpl) value);
    }

    public Contact getValueContact() {
        return valueContact;
    }

    public void setValueContact(Contact value) {
        this.valueContact = ((ContactImpl) value);
    }

    public Address getValueAddress() {
        return valueAddress;
    }

    public void setValueAddress(Address value) {
        this.valueAddress = ((AddressImpl) value);
    }

    public HumanName getValueHumanName() {
        return valueHumanName;
    }

    public void setValueHumanName(HumanName value) {
        this.valueHumanName = ((HumanNameImpl) value);
    }

    public SampledData getValueSampledData() {
        return valueSampledData;
    }

    public void setValueSampledData(SampledData value) {
        this.valueSampledData = ((SampledDataImpl) value);
    }

    public ResourceReference getValueResource() {
        return valueResource;
    }

    public void setValueResource(ResourceReference value) {
        this.valueResource = ((ResourceReferenceImpl) value);
    }

    public Ratio getValueRatio() {
        return valueRatio;
    }

    public void setValueRatio(Ratio value) {
        this.valueRatio = ((RatioImpl) value);
    }

    public Period getValuePeriod() {
        return valuePeriod;
    }

    public void setValuePeriod(Period value) {
        this.valuePeriod = ((PeriodImpl) value);
    }

    public Range getValueRange() {
        return valueRange;
    }

    public void setValueRange(Range value) {
        this.valueRange = ((RangeImpl) value);
    }

    public Quantity getValueQuantity() {
        return valueQuantity;
    }

    public void setValueQuantity(Quantity value) {
        this.valueQuantity = ((QuantityImpl) value);
    }

    public Coding getValueCoding() {
        return valueCoding;
    }

    public void setValueCoding(Coding value) {
        this.valueCoding = ((CodingImpl) value);
    }

    public CodeableConcept getValueCodeableConcept() {
        return valueCodeableConcept;
    }

    public void setValueCodeableConcept(CodeableConcept value) {
        this.valueCodeableConcept = ((CodeableConceptImpl) value);
    }

    public Identifier getValueIdentifier() {
        return valueIdentifier;
    }

    public void setValueIdentifier(Identifier value) {
        this.valueIdentifier = ((IdentifierImpl) value);
    }

    public Attachment getValueAttachment() {
        return valueAttachment;
    }

    public void setValueAttachment(Attachment value) {
        this.valueAttachment = ((AttachmentImpl) value);
    }

    public Id getValueId() {
        return valueId;
    }

    public void setValueId(Id value) {
        this.valueId = ((IdImpl) value);
    }

    public Uuid getValueUuid() {
        return valueUuid;
    }

    public void setValueUuid(Uuid value) {
        this.valueUuid = ((UuidImpl) value);
    }

    public Oid getValueOid() {
        return valueOid;
    }

    public void setValueOid(Oid value) {
        this.valueOid = ((OidImpl) value);
    }

    public Code getValueCode() {
        return valueCode;
    }

    public void setValueCode(Code value) {
        this.valueCode = ((CodeImpl) value);
    }

    public DateTime getValueDateTime() {
        return valueDateTime;
    }

    public void setValueDateTime(DateTime value) {
        this.valueDateTime = ((DateTimeImpl) value);
    }

    public Date getValueDate() {
        return valueDate;
    }

    public void setValueDate(Date value) {
        this.valueDate = ((DateImpl) value);
    }

    public Uri getValueUri() {
        return valueUri;
    }

    public void setValueUri(Uri value) {
        this.valueUri = ((UriImpl) value);
    }

    public org.hl7.fhir.model.String getValueString() {
        return valueString;
    }

    public void setValueString(org.hl7.fhir.model.String value) {
        this.valueString = ((StringImpl) value);
    }

    public Instant getValueInstant() {
        return valueInstant;
    }

    public void setValueInstant(Instant value) {
        this.valueInstant = ((InstantImpl) value);
    }

    public Base64Binary getValueBase64Binary() {
        return valueBase64Binary;
    }

    public void setValueBase64Binary(Base64Binary value) {
        this.valueBase64Binary = ((Base64BinaryImpl) value);
    }

    public Decimal getValueDecimal() {
        return valueDecimal;
    }

    public void setValueDecimal(Decimal value) {
        this.valueDecimal = ((DecimalImpl) value);
    }

    public Integer getValueInteger() {
        return valueInteger;
    }

    public void setValueInteger(Integer value) {
        this.valueInteger = ((IntegerImpl) value);
    }

    public Boolean getValueBoolean() {
        return valueBoolean;
    }

    public void setValueBoolean(Boolean value) {
        this.valueBoolean = ((BooleanImpl) value);
    }

    public Schedule getExampleSchedule() {
        return exampleSchedule;
    }

    public void setExampleSchedule(Schedule value) {
        this.exampleSchedule = ((ScheduleImpl) value);
    }

    public Contact getExampleContact() {
        return exampleContact;
    }

    public void setExampleContact(Contact value) {
        this.exampleContact = ((ContactImpl) value);
    }

    public Address getExampleAddress() {
        return exampleAddress;
    }

    public void setExampleAddress(Address value) {
        this.exampleAddress = ((AddressImpl) value);
    }

    public HumanName getExampleHumanName() {
        return exampleHumanName;
    }

    public void setExampleHumanName(HumanName value) {
        this.exampleHumanName = ((HumanNameImpl) value);
    }

    public SampledData getExampleSampledData() {
        return exampleSampledData;
    }

    public void setExampleSampledData(SampledData value) {
        this.exampleSampledData = ((SampledDataImpl) value);
    }

    public ResourceReference getExampleResource() {
        return exampleResource;
    }

    public void setExampleResource(ResourceReference value) {
        this.exampleResource = ((ResourceReferenceImpl) value);
    }

    public Ratio getExampleRatio() {
        return exampleRatio;
    }

    public void setExampleRatio(Ratio value) {
        this.exampleRatio = ((RatioImpl) value);
    }

    public Period getExamplePeriod() {
        return examplePeriod;
    }

    public void setExamplePeriod(Period value) {
        this.examplePeriod = ((PeriodImpl) value);
    }

    public Range getExampleRange() {
        return exampleRange;
    }

    public void setExampleRange(Range value) {
        this.exampleRange = ((RangeImpl) value);
    }

    public Quantity getExampleQuantity() {
        return exampleQuantity;
    }

    public void setExampleQuantity(Quantity value) {
        this.exampleQuantity = ((QuantityImpl) value);
    }

    public Coding getExampleCoding() {
        return exampleCoding;
    }

    public void setExampleCoding(Coding value) {
        this.exampleCoding = ((CodingImpl) value);
    }

    public CodeableConcept getExampleCodeableConcept() {
        return exampleCodeableConcept;
    }

    public void setExampleCodeableConcept(CodeableConcept value) {
        this.exampleCodeableConcept = ((CodeableConceptImpl) value);
    }

    public Identifier getExampleIdentifier() {
        return exampleIdentifier;
    }

    public void setExampleIdentifier(Identifier value) {
        this.exampleIdentifier = ((IdentifierImpl) value);
    }

    public Attachment getExampleAttachment() {
        return exampleAttachment;
    }

    public void setExampleAttachment(Attachment value) {
        this.exampleAttachment = ((AttachmentImpl) value);
    }

    public Id getExampleId() {
        return exampleId;
    }

    public void setExampleId(Id value) {
        this.exampleId = ((IdImpl) value);
    }

    public Uuid getExampleUuid() {
        return exampleUuid;
    }

    public void setExampleUuid(Uuid value) {
        this.exampleUuid = ((UuidImpl) value);
    }

    public Oid getExampleOid() {
        return exampleOid;
    }

    public void setExampleOid(Oid value) {
        this.exampleOid = ((OidImpl) value);
    }

    public Code getExampleCode() {
        return exampleCode;
    }

    public void setExampleCode(Code value) {
        this.exampleCode = ((CodeImpl) value);
    }

    public DateTime getExampleDateTime() {
        return exampleDateTime;
    }

    public void setExampleDateTime(DateTime value) {
        this.exampleDateTime = ((DateTimeImpl) value);
    }

    public Date getExampleDate() {
        return exampleDate;
    }

    public void setExampleDate(Date value) {
        this.exampleDate = ((DateImpl) value);
    }

    public Uri getExampleUri() {
        return exampleUri;
    }

    public void setExampleUri(Uri value) {
        this.exampleUri = ((UriImpl) value);
    }

    public org.hl7.fhir.model.String getExampleString() {
        return exampleString;
    }

    public void setExampleString(org.hl7.fhir.model.String value) {
        this.exampleString = ((StringImpl) value);
    }

    public Instant getExampleInstant() {
        return exampleInstant;
    }

    public void setExampleInstant(Instant value) {
        this.exampleInstant = ((InstantImpl) value);
    }

    public Base64Binary getExampleBase64Binary() {
        return exampleBase64Binary;
    }

    public void setExampleBase64Binary(Base64Binary value) {
        this.exampleBase64Binary = ((Base64BinaryImpl) value);
    }

    public Decimal getExampleDecimal() {
        return exampleDecimal;
    }

    public void setExampleDecimal(Decimal value) {
        this.exampleDecimal = ((DecimalImpl) value);
    }

    public Integer getExampleInteger() {
        return exampleInteger;
    }

    public void setExampleInteger(Integer value) {
        this.exampleInteger = ((IntegerImpl) value);
    }

    public Boolean getExampleBoolean() {
        return exampleBoolean;
    }

    public void setExampleBoolean(Boolean value) {
        this.exampleBoolean = ((BooleanImpl) value);
    }

    public Integer getMaxLength() {
        return maxLength;
    }

    public void setMaxLength(Integer value) {
        this.maxLength = ((IntegerImpl) value);
    }

    public List<Id> getConditions() {
        if (conditions == null) {
            conditions = new ArrayList<Id>();
        }
        return this.conditions;
    }

    public List<ProfileConstraint> getConstraints() {
        if (constraints == null) {
            constraints = new ArrayList<ProfileConstraint>();
        }
        return this.constraints;
    }

    public Boolean getMustSupport() {
        return mustSupport;
    }

    public void setMustSupport(Boolean value) {
        this.mustSupport = ((BooleanImpl) value);
    }

    public Boolean getIsModifier() {
        return isModifier;
    }

    public void setIsModifier(Boolean value) {
        this.isModifier = ((BooleanImpl) value);
    }

    public ProfileBinding getBinding() {
        return binding;
    }

    public void setBinding(ProfileBinding value) {
        this.binding = ((ProfileBindingImpl) value);
    }

    public List<ProfileMapping1> getMappings() {
        if (mappings == null) {
            mappings = new ArrayList<ProfileMapping1>();
        }
        return this.mappings;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            org.hl7.fhir.model.String theShort;
            theShort = this.getShort();
            strategy.appendField(locator, this, "_short", buffer, theShort);
        }
        {
            org.hl7.fhir.model.String theFormal;
            theFormal = this.getFormal();
            strategy.appendField(locator, this, "formal", buffer, theFormal);
        }
        {
            org.hl7.fhir.model.String theComments;
            theComments = this.getComments();
            strategy.appendField(locator, this, "comments", buffer, theComments);
        }
        {
            org.hl7.fhir.model.String theRequirements;
            theRequirements = this.getRequirements();
            strategy.appendField(locator, this, "requirements", buffer, theRequirements);
        }
        {
            List<org.hl7.fhir.model.String> theSynonyms;
            theSynonyms = (((this.synonyms!= null)&&(!this.synonyms.isEmpty()))?this.getSynonyms():null);
            strategy.appendField(locator, this, "synonyms", buffer, theSynonyms);
        }
        {
            Integer theMin;
            theMin = this.getMin();
            strategy.appendField(locator, this, "min", buffer, theMin);
        }
        {
            org.hl7.fhir.model.String theMax;
            theMax = this.getMax();
            strategy.appendField(locator, this, "max", buffer, theMax);
        }
        {
            List<ProfileType> theTypes;
            theTypes = (((this.types!= null)&&(!this.types.isEmpty()))?this.getTypes():null);
            strategy.appendField(locator, this, "types", buffer, theTypes);
        }
        {
            org.hl7.fhir.model.String theNameReference;
            theNameReference = this.getNameReference();
            strategy.appendField(locator, this, "nameReference", buffer, theNameReference);
        }
        {
            Schedule theValueSchedule;
            theValueSchedule = this.getValueSchedule();
            strategy.appendField(locator, this, "valueSchedule", buffer, theValueSchedule);
        }
        {
            Contact theValueContact;
            theValueContact = this.getValueContact();
            strategy.appendField(locator, this, "valueContact", buffer, theValueContact);
        }
        {
            Address theValueAddress;
            theValueAddress = this.getValueAddress();
            strategy.appendField(locator, this, "valueAddress", buffer, theValueAddress);
        }
        {
            HumanName theValueHumanName;
            theValueHumanName = this.getValueHumanName();
            strategy.appendField(locator, this, "valueHumanName", buffer, theValueHumanName);
        }
        {
            SampledData theValueSampledData;
            theValueSampledData = this.getValueSampledData();
            strategy.appendField(locator, this, "valueSampledData", buffer, theValueSampledData);
        }
        {
            ResourceReference theValueResource;
            theValueResource = this.getValueResource();
            strategy.appendField(locator, this, "valueResource", buffer, theValueResource);
        }
        {
            Ratio theValueRatio;
            theValueRatio = this.getValueRatio();
            strategy.appendField(locator, this, "valueRatio", buffer, theValueRatio);
        }
        {
            Period theValuePeriod;
            theValuePeriod = this.getValuePeriod();
            strategy.appendField(locator, this, "valuePeriod", buffer, theValuePeriod);
        }
        {
            Range theValueRange;
            theValueRange = this.getValueRange();
            strategy.appendField(locator, this, "valueRange", buffer, theValueRange);
        }
        {
            Quantity theValueQuantity;
            theValueQuantity = this.getValueQuantity();
            strategy.appendField(locator, this, "valueQuantity", buffer, theValueQuantity);
        }
        {
            Coding theValueCoding;
            theValueCoding = this.getValueCoding();
            strategy.appendField(locator, this, "valueCoding", buffer, theValueCoding);
        }
        {
            CodeableConcept theValueCodeableConcept;
            theValueCodeableConcept = this.getValueCodeableConcept();
            strategy.appendField(locator, this, "valueCodeableConcept", buffer, theValueCodeableConcept);
        }
        {
            Identifier theValueIdentifier;
            theValueIdentifier = this.getValueIdentifier();
            strategy.appendField(locator, this, "valueIdentifier", buffer, theValueIdentifier);
        }
        {
            Attachment theValueAttachment;
            theValueAttachment = this.getValueAttachment();
            strategy.appendField(locator, this, "valueAttachment", buffer, theValueAttachment);
        }
        {
            Id theValueId;
            theValueId = this.getValueId();
            strategy.appendField(locator, this, "valueId", buffer, theValueId);
        }
        {
            Uuid theValueUuid;
            theValueUuid = this.getValueUuid();
            strategy.appendField(locator, this, "valueUuid", buffer, theValueUuid);
        }
        {
            Oid theValueOid;
            theValueOid = this.getValueOid();
            strategy.appendField(locator, this, "valueOid", buffer, theValueOid);
        }
        {
            Code theValueCode;
            theValueCode = this.getValueCode();
            strategy.appendField(locator, this, "valueCode", buffer, theValueCode);
        }
        {
            DateTime theValueDateTime;
            theValueDateTime = this.getValueDateTime();
            strategy.appendField(locator, this, "valueDateTime", buffer, theValueDateTime);
        }
        {
            Date theValueDate;
            theValueDate = this.getValueDate();
            strategy.appendField(locator, this, "valueDate", buffer, theValueDate);
        }
        {
            Uri theValueUri;
            theValueUri = this.getValueUri();
            strategy.appendField(locator, this, "valueUri", buffer, theValueUri);
        }
        {
            org.hl7.fhir.model.String theValueString;
            theValueString = this.getValueString();
            strategy.appendField(locator, this, "valueString", buffer, theValueString);
        }
        {
            Instant theValueInstant;
            theValueInstant = this.getValueInstant();
            strategy.appendField(locator, this, "valueInstant", buffer, theValueInstant);
        }
        {
            Base64Binary theValueBase64Binary;
            theValueBase64Binary = this.getValueBase64Binary();
            strategy.appendField(locator, this, "valueBase64Binary", buffer, theValueBase64Binary);
        }
        {
            Decimal theValueDecimal;
            theValueDecimal = this.getValueDecimal();
            strategy.appendField(locator, this, "valueDecimal", buffer, theValueDecimal);
        }
        {
            Integer theValueInteger;
            theValueInteger = this.getValueInteger();
            strategy.appendField(locator, this, "valueInteger", buffer, theValueInteger);
        }
        {
            Boolean theValueBoolean;
            theValueBoolean = this.getValueBoolean();
            strategy.appendField(locator, this, "valueBoolean", buffer, theValueBoolean);
        }
        {
            Schedule theExampleSchedule;
            theExampleSchedule = this.getExampleSchedule();
            strategy.appendField(locator, this, "exampleSchedule", buffer, theExampleSchedule);
        }
        {
            Contact theExampleContact;
            theExampleContact = this.getExampleContact();
            strategy.appendField(locator, this, "exampleContact", buffer, theExampleContact);
        }
        {
            Address theExampleAddress;
            theExampleAddress = this.getExampleAddress();
            strategy.appendField(locator, this, "exampleAddress", buffer, theExampleAddress);
        }
        {
            HumanName theExampleHumanName;
            theExampleHumanName = this.getExampleHumanName();
            strategy.appendField(locator, this, "exampleHumanName", buffer, theExampleHumanName);
        }
        {
            SampledData theExampleSampledData;
            theExampleSampledData = this.getExampleSampledData();
            strategy.appendField(locator, this, "exampleSampledData", buffer, theExampleSampledData);
        }
        {
            ResourceReference theExampleResource;
            theExampleResource = this.getExampleResource();
            strategy.appendField(locator, this, "exampleResource", buffer, theExampleResource);
        }
        {
            Ratio theExampleRatio;
            theExampleRatio = this.getExampleRatio();
            strategy.appendField(locator, this, "exampleRatio", buffer, theExampleRatio);
        }
        {
            Period theExamplePeriod;
            theExamplePeriod = this.getExamplePeriod();
            strategy.appendField(locator, this, "examplePeriod", buffer, theExamplePeriod);
        }
        {
            Range theExampleRange;
            theExampleRange = this.getExampleRange();
            strategy.appendField(locator, this, "exampleRange", buffer, theExampleRange);
        }
        {
            Quantity theExampleQuantity;
            theExampleQuantity = this.getExampleQuantity();
            strategy.appendField(locator, this, "exampleQuantity", buffer, theExampleQuantity);
        }
        {
            Coding theExampleCoding;
            theExampleCoding = this.getExampleCoding();
            strategy.appendField(locator, this, "exampleCoding", buffer, theExampleCoding);
        }
        {
            CodeableConcept theExampleCodeableConcept;
            theExampleCodeableConcept = this.getExampleCodeableConcept();
            strategy.appendField(locator, this, "exampleCodeableConcept", buffer, theExampleCodeableConcept);
        }
        {
            Identifier theExampleIdentifier;
            theExampleIdentifier = this.getExampleIdentifier();
            strategy.appendField(locator, this, "exampleIdentifier", buffer, theExampleIdentifier);
        }
        {
            Attachment theExampleAttachment;
            theExampleAttachment = this.getExampleAttachment();
            strategy.appendField(locator, this, "exampleAttachment", buffer, theExampleAttachment);
        }
        {
            Id theExampleId;
            theExampleId = this.getExampleId();
            strategy.appendField(locator, this, "exampleId", buffer, theExampleId);
        }
        {
            Uuid theExampleUuid;
            theExampleUuid = this.getExampleUuid();
            strategy.appendField(locator, this, "exampleUuid", buffer, theExampleUuid);
        }
        {
            Oid theExampleOid;
            theExampleOid = this.getExampleOid();
            strategy.appendField(locator, this, "exampleOid", buffer, theExampleOid);
        }
        {
            Code theExampleCode;
            theExampleCode = this.getExampleCode();
            strategy.appendField(locator, this, "exampleCode", buffer, theExampleCode);
        }
        {
            DateTime theExampleDateTime;
            theExampleDateTime = this.getExampleDateTime();
            strategy.appendField(locator, this, "exampleDateTime", buffer, theExampleDateTime);
        }
        {
            Date theExampleDate;
            theExampleDate = this.getExampleDate();
            strategy.appendField(locator, this, "exampleDate", buffer, theExampleDate);
        }
        {
            Uri theExampleUri;
            theExampleUri = this.getExampleUri();
            strategy.appendField(locator, this, "exampleUri", buffer, theExampleUri);
        }
        {
            org.hl7.fhir.model.String theExampleString;
            theExampleString = this.getExampleString();
            strategy.appendField(locator, this, "exampleString", buffer, theExampleString);
        }
        {
            Instant theExampleInstant;
            theExampleInstant = this.getExampleInstant();
            strategy.appendField(locator, this, "exampleInstant", buffer, theExampleInstant);
        }
        {
            Base64Binary theExampleBase64Binary;
            theExampleBase64Binary = this.getExampleBase64Binary();
            strategy.appendField(locator, this, "exampleBase64Binary", buffer, theExampleBase64Binary);
        }
        {
            Decimal theExampleDecimal;
            theExampleDecimal = this.getExampleDecimal();
            strategy.appendField(locator, this, "exampleDecimal", buffer, theExampleDecimal);
        }
        {
            Integer theExampleInteger;
            theExampleInteger = this.getExampleInteger();
            strategy.appendField(locator, this, "exampleInteger", buffer, theExampleInteger);
        }
        {
            Boolean theExampleBoolean;
            theExampleBoolean = this.getExampleBoolean();
            strategy.appendField(locator, this, "exampleBoolean", buffer, theExampleBoolean);
        }
        {
            Integer theMaxLength;
            theMaxLength = this.getMaxLength();
            strategy.appendField(locator, this, "maxLength", buffer, theMaxLength);
        }
        {
            List<Id> theConditions;
            theConditions = (((this.conditions!= null)&&(!this.conditions.isEmpty()))?this.getConditions():null);
            strategy.appendField(locator, this, "conditions", buffer, theConditions);
        }
        {
            List<ProfileConstraint> theConstraints;
            theConstraints = (((this.constraints!= null)&&(!this.constraints.isEmpty()))?this.getConstraints():null);
            strategy.appendField(locator, this, "constraints", buffer, theConstraints);
        }
        {
            Boolean theMustSupport;
            theMustSupport = this.getMustSupport();
            strategy.appendField(locator, this, "mustSupport", buffer, theMustSupport);
        }
        {
            Boolean theIsModifier;
            theIsModifier = this.getIsModifier();
            strategy.appendField(locator, this, "isModifier", buffer, theIsModifier);
        }
        {
            ProfileBinding theBinding;
            theBinding = this.getBinding();
            strategy.appendField(locator, this, "binding", buffer, theBinding);
        }
        {
            List<ProfileMapping1> theMappings;
            theMappings = (((this.mappings!= null)&&(!this.mappings.isEmpty()))?this.getMappings():null);
            strategy.appendField(locator, this, "mappings", buffer, theMappings);
        }
        return buffer;
    }

}
