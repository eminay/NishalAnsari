//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlRootElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.DiagnosticOrder;
import org.hl7.fhir.model.DiagnosticOrderEvent;
import org.hl7.fhir.model.DiagnosticOrderItem;
import org.hl7.fhir.model.DiagnosticOrderPriority;
import org.hl7.fhir.model.DiagnosticOrderStatus;
import org.hl7.fhir.model.Identifier;
import org.hl7.fhir.model.ResourceReference;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "DiagnosticOrder", propOrder = {
    "subject",
    "orderer",
    "identifiers",
    "encounter",
    "clinicalNotes",
    "specimens",
    "status",
    "priority",
    "events",
    "items"
})
@XmlRootElement(name = "DiagnosticOrder")
public class DiagnosticOrderImpl
    extends ResourceImpl
    implements DiagnosticOrder, ToString
{

    @XmlElement(required = true, type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl subject;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl orderer;
    @XmlElement(name = "identifier", type = IdentifierImpl.class)
    protected List<Identifier> identifiers;
    @XmlElement(type = ResourceReferenceImpl.class)
    protected ResourceReferenceImpl encounter;
    @XmlElement(type = StringImpl.class)
    protected StringImpl clinicalNotes;
    @XmlElement(name = "specimen", type = ResourceReferenceImpl.class)
    protected List<ResourceReference> specimens;
    @XmlElement(type = DiagnosticOrderStatusImpl.class)
    protected DiagnosticOrderStatusImpl status;
    @XmlElement(type = DiagnosticOrderPriorityImpl.class)
    protected DiagnosticOrderPriorityImpl priority;
    @XmlElement(name = "event", type = DiagnosticOrderEventImpl.class)
    protected List<DiagnosticOrderEvent> events;
    @XmlElement(name = "item", type = DiagnosticOrderItemImpl.class)
    protected List<DiagnosticOrderItem> items;

    public ResourceReference getSubject() {
        return subject;
    }

    public void setSubject(ResourceReference value) {
        this.subject = ((ResourceReferenceImpl) value);
    }

    public ResourceReference getOrderer() {
        return orderer;
    }

    public void setOrderer(ResourceReference value) {
        this.orderer = ((ResourceReferenceImpl) value);
    }

    public List<Identifier> getIdentifiers() {
        if (identifiers == null) {
            identifiers = new ArrayList<Identifier>();
        }
        return this.identifiers;
    }

    public ResourceReference getEncounter() {
        return encounter;
    }

    public void setEncounter(ResourceReference value) {
        this.encounter = ((ResourceReferenceImpl) value);
    }

    public org.hl7.fhir.model.String getClinicalNotes() {
        return clinicalNotes;
    }

    public void setClinicalNotes(org.hl7.fhir.model.String value) {
        this.clinicalNotes = ((StringImpl) value);
    }

    public List<ResourceReference> getSpecimens() {
        if (specimens == null) {
            specimens = new ArrayList<ResourceReference>();
        }
        return this.specimens;
    }

    public DiagnosticOrderStatus getStatus() {
        return status;
    }

    public void setStatus(DiagnosticOrderStatus value) {
        this.status = ((DiagnosticOrderStatusImpl) value);
    }

    public DiagnosticOrderPriority getPriority() {
        return priority;
    }

    public void setPriority(DiagnosticOrderPriority value) {
        this.priority = ((DiagnosticOrderPriorityImpl) value);
    }

    public List<DiagnosticOrderEvent> getEvents() {
        if (events == null) {
            events = new ArrayList<DiagnosticOrderEvent>();
        }
        return this.events;
    }

    public List<DiagnosticOrderItem> getItems() {
        if (items == null) {
            items = new ArrayList<DiagnosticOrderItem>();
        }
        return this.items;
    }

    public java.lang.String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            ResourceReference theSubject;
            theSubject = this.getSubject();
            strategy.appendField(locator, this, "subject", buffer, theSubject);
        }
        {
            ResourceReference theOrderer;
            theOrderer = this.getOrderer();
            strategy.appendField(locator, this, "orderer", buffer, theOrderer);
        }
        {
            List<Identifier> theIdentifiers;
            theIdentifiers = (((this.identifiers!= null)&&(!this.identifiers.isEmpty()))?this.getIdentifiers():null);
            strategy.appendField(locator, this, "identifiers", buffer, theIdentifiers);
        }
        {
            ResourceReference theEncounter;
            theEncounter = this.getEncounter();
            strategy.appendField(locator, this, "encounter", buffer, theEncounter);
        }
        {
            org.hl7.fhir.model.String theClinicalNotes;
            theClinicalNotes = this.getClinicalNotes();
            strategy.appendField(locator, this, "clinicalNotes", buffer, theClinicalNotes);
        }
        {
            List<ResourceReference> theSpecimens;
            theSpecimens = (((this.specimens!= null)&&(!this.specimens.isEmpty()))?this.getSpecimens():null);
            strategy.appendField(locator, this, "specimens", buffer, theSpecimens);
        }
        {
            DiagnosticOrderStatus theStatus;
            theStatus = this.getStatus();
            strategy.appendField(locator, this, "status", buffer, theStatus);
        }
        {
            DiagnosticOrderPriority thePriority;
            thePriority = this.getPriority();
            strategy.appendField(locator, this, "priority", buffer, thePriority);
        }
        {
            List<DiagnosticOrderEvent> theEvents;
            theEvents = (((this.events!= null)&&(!this.events.isEmpty()))?this.getEvents():null);
            strategy.appendField(locator, this, "events", buffer, theEvents);
        }
        {
            List<DiagnosticOrderItem> theItems;
            theItems = (((this.items!= null)&&(!this.items.isEmpty()))?this.getItems():null);
            strategy.appendField(locator, this, "items", buffer, theItems);
        }
        return buffer;
    }

}
