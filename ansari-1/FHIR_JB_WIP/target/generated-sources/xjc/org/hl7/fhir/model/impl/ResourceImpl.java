//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Code;
import org.hl7.fhir.model.Narrative;
import org.hl7.fhir.model.Resource;
import org.hl7.fhir.model.ResourceInline;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Resource", propOrder = {
    "language",
    "text",
    "containeds"
})
@XmlSeeAlso({
    ValueSetImpl.class,
    SupplyImpl.class,
    SubstanceImpl.class,
    SpecimenImpl.class,
    SecurityEventImpl.class,
    RelatedPersonImpl.class,
    QuestionnaireImpl.class,
    QueryImpl.class,
    ProvenanceImpl.class,
    ProfileImpl.class,
    ProcedureImpl.class,
    PractitionerImpl.class,
    PatientImpl.class,
    OtherImpl.class,
    OrganizationImpl.class,
    OrderResponseImpl.class,
    OrderImpl.class,
    OperationOutcomeImpl.class,
    ObservationImpl.class,
    MessageHeaderImpl.class,
    MedicationStatementImpl.class,
    MedicationPrescriptionImpl.class,
    MedicationDispenseImpl.class,
    MedicationAdministrationImpl.class,
    MedicationImpl.class,
    MediaImpl.class,
    LocationImpl.class,
    ListImpl.class,
    ImmunizationRecommendationImpl.class,
    ImmunizationImpl.class,
    ImagingStudyImpl.class,
    GroupImpl.class,
    FamilyHistoryImpl.class,
    EncounterImpl.class,
    DocumentReferenceImpl.class,
    DocumentManifestImpl.class,
    DiagnosticReportImpl.class,
    DiagnosticOrderImpl.class,
    DeviceObservationReportImpl.class,
    DeviceImpl.class,
    ConformanceImpl.class,
    ConditionImpl.class,
    ConceptMapImpl.class,
    CompositionImpl.class,
    CarePlanImpl.class,
    AllergyIntoleranceImpl.class,
    AlertImpl.class,
    AdverseReactionImpl.class
})
public class ResourceImpl
    extends BackboneElementImpl
    implements Resource, ToString
{

    @XmlElement(type = CodeImpl.class)
    protected CodeImpl language;
    @XmlElement(type = NarrativeImpl.class)
    protected NarrativeImpl text;
    @XmlElement(name = "contained", type = ResourceInlineImpl.class)
    protected List<ResourceInline> containeds;

    public Code getLanguage() {
        return language;
    }

    public void setLanguage(Code value) {
        this.language = ((CodeImpl) value);
    }

    public Narrative getText() {
        return text;
    }

    public void setText(Narrative value) {
        this.text = ((NarrativeImpl) value);
    }

    public List<ResourceInline> getContaineds() {
        if (containeds == null) {
            containeds = new ArrayList<ResourceInline>();
        }
        return this.containeds;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            Code theLanguage;
            theLanguage = this.getLanguage();
            strategy.appendField(locator, this, "language", buffer, theLanguage);
        }
        {
            Narrative theText;
            theText = this.getText();
            strategy.appendField(locator, this, "text", buffer, theText);
        }
        {
            List<ResourceInline> theContaineds;
            theContaineds = (((this.containeds!= null)&&(!this.containeds.isEmpty()))?this.getContaineds():null);
            strategy.appendField(locator, this, "containeds", buffer, theContaineds);
        }
        return buffer;
    }

}
