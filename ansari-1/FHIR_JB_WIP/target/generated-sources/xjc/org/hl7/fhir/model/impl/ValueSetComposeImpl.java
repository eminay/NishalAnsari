//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.05.08 at 06:17:33 PM MST 
//


package org.hl7.fhir.model.impl;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.hl7.fhir.model.Uri;
import org.hl7.fhir.model.ValueSetCompose;
import org.hl7.fhir.model.ValueSetInclude;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;

@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "ValueSet.Compose", propOrder = {
    "imports",
    "includes",
    "excludes"
})
public class ValueSetComposeImpl
    extends BackboneElementImpl
    implements ValueSetCompose, ToString
{

    @XmlElement(name = "import", type = UriImpl.class)
    protected List<Uri> imports;
    @XmlElement(name = "include", type = ValueSetIncludeImpl.class)
    protected List<ValueSetInclude> includes;
    @XmlElement(name = "exclude", type = ValueSetIncludeImpl.class)
    protected List<ValueSetInclude> excludes;

    public List<Uri> getImports() {
        if (imports == null) {
            imports = new ArrayList<Uri>();
        }
        return this.imports;
    }

    public List<ValueSetInclude> getIncludes() {
        if (includes == null) {
            includes = new ArrayList<ValueSetInclude>();
        }
        return this.includes;
    }

    public List<ValueSetInclude> getExcludes() {
        if (excludes == null) {
            excludes = new ArrayList<ValueSetInclude>();
        }
        return this.excludes;
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        super.appendFields(locator, buffer, strategy);
        {
            List<Uri> theImports;
            theImports = (((this.imports!= null)&&(!this.imports.isEmpty()))?this.getImports():null);
            strategy.appendField(locator, this, "imports", buffer, theImports);
        }
        {
            List<ValueSetInclude> theIncludes;
            theIncludes = (((this.includes!= null)&&(!this.includes.isEmpty()))?this.getIncludes():null);
            strategy.appendField(locator, this, "includes", buffer, theIncludes);
        }
        {
            List<ValueSetInclude> theExcludes;
            theExcludes = (((this.excludes!= null)&&(!this.excludes.isEmpty()))?this.getExcludes():null);
            strategy.appendField(locator, this, "excludes", buffer, theExcludes);
        }
        return buffer;
    }

}
